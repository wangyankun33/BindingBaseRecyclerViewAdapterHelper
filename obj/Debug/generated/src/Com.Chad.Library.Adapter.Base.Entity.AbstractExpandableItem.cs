//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Chad.Library.Adapter.Base.Entity {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']"
	[global::Android.Runtime.Register ("com/chad/library/adapter/base/entity/AbstractExpandableItem", DoNotGenerateAcw=true)]
	[global::Java.Interop.JavaTypeParameters (new string [] {"T"})]
	public abstract partial class AbstractExpandableItem : global::Java.Lang.Object, global::Com.Chad.Library.Adapter.Base.Entity.IExpandable {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']/field[@name='mExpandable']"
		[Register ("mExpandable")]
		protected bool MExpandable {
			get {
				const string __id = "mExpandable.Z";

				var __v = _members.InstanceFields.GetBooleanValue (__id, this);
				return __v;
			}
			set {
				const string __id = "mExpandable.Z";

				try {
					_members.InstanceFields.SetValue (__id, this, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']/field[@name='mSubItems']"
		[Register ("mSubItems")]
		protected global::System.Collections.IList MSubItems {
			get {
				const string __id = "mSubItems.Ljava/util/List;";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Android.Runtime.JavaList.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "mSubItems.Ljava/util/List;";

				IntPtr native_value = global::Android.Runtime.JavaList.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/entity/AbstractExpandableItem", typeof (AbstractExpandableItem));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected AbstractExpandableItem (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']/constructor[@name='AbstractExpandableItem' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe AbstractExpandableItem () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_isExpanded;
#pragma warning disable 0169
		static Delegate GetIsExpandedHandler ()
		{
			if (cb_isExpanded == null)
				cb_isExpanded = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsExpanded));
			return cb_isExpanded;
		}

		static bool n_IsExpanded (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Entity.AbstractExpandableItem> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.Expanded;
		}
#pragma warning restore 0169

		static Delegate cb_setExpanded_Z;
#pragma warning disable 0169
		static Delegate GetSetExpanded_ZHandler ()
		{
			if (cb_setExpanded_Z == null)
				cb_setExpanded_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetExpanded_Z));
			return cb_setExpanded_Z;
		}

		static void n_SetExpanded_Z (IntPtr jnienv, IntPtr native__this, bool expanded)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Entity.AbstractExpandableItem> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Expanded = expanded;
		}
#pragma warning restore 0169

		public virtual unsafe bool Expanded {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']/method[@name='isExpanded' and count(parameter)=0]"
			[Register ("isExpanded", "()Z", "GetIsExpandedHandler")]
			get {
				const string __id = "isExpanded.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']/method[@name='setExpanded' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setExpanded", "(Z)V", "GetSetExpanded_ZHandler")]
			set {
				const string __id = "setExpanded.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_hasSubItem;
#pragma warning disable 0169
		static Delegate GetHasSubItemHandler ()
		{
			if (cb_hasSubItem == null)
				cb_hasSubItem = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_HasSubItem));
			return cb_hasSubItem;
		}

		static bool n_HasSubItem (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Entity.AbstractExpandableItem> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.HasSubItem;
		}
#pragma warning restore 0169

		public virtual unsafe bool HasSubItem {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']/method[@name='hasSubItem' and count(parameter)=0]"
			[Register ("hasSubItem", "()Z", "GetHasSubItemHandler")]
			get {
				const string __id = "hasSubItem.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_getSubItems;
#pragma warning disable 0169
		static Delegate GetGetSubItemsHandler ()
		{
			if (cb_getSubItems == null)
				cb_getSubItems = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetSubItems));
			return cb_getSubItems;
		}

		static IntPtr n_GetSubItems (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Entity.AbstractExpandableItem> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return global::Android.Runtime.JavaList.ToLocalJniHandle (__this.SubItems);
		}
#pragma warning restore 0169

		static Delegate cb_setSubItems_Ljava_util_List_;
#pragma warning disable 0169
		static Delegate GetSetSubItems_Ljava_util_List_Handler ()
		{
			if (cb_setSubItems_Ljava_util_List_ == null)
				cb_setSubItems_Ljava_util_List_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetSubItems_Ljava_util_List_));
			return cb_setSubItems_Ljava_util_List_;
		}

		static void n_SetSubItems_Ljava_util_List_ (IntPtr jnienv, IntPtr native__this, IntPtr native_list)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Entity.AbstractExpandableItem> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var list = global::Android.Runtime.JavaList.FromJniHandle (native_list, JniHandleOwnership.DoNotTransfer);
			__this.SubItems = list;
		}
#pragma warning restore 0169

		public virtual unsafe global::System.Collections.IList SubItems {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']/method[@name='getSubItems' and count(parameter)=0]"
			[Register ("getSubItems", "()Ljava/util/List;", "GetGetSubItemsHandler")]
			get {
				const string __id = "getSubItems.()Ljava/util/List;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Android.Runtime.JavaList.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']/method[@name='setSubItems' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;T&gt;']]"
			[Register ("setSubItems", "(Ljava/util/List;)V", "GetSetSubItems_Ljava_util_List_Handler")]
			set {
				const string __id = "setSubItems.(Ljava/util/List;)V";
				IntPtr native_value = global::Android.Runtime.JavaList.ToLocalJniHandle (value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
					global::System.GC.KeepAlive (value);
				}
			}
		}

		static Delegate cb_addSubItem_ILjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetAddSubItem_ILjava_lang_Object_Handler ()
		{
			if (cb_addSubItem_ILjava_lang_Object_ == null)
				cb_addSubItem_ILjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_V (n_AddSubItem_ILjava_lang_Object_));
			return cb_addSubItem_ILjava_lang_Object_;
		}

		static void n_AddSubItem_ILjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, int position, IntPtr native_subItem)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Entity.AbstractExpandableItem> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var subItem = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_subItem, JniHandleOwnership.DoNotTransfer);
			__this.AddSubItem (position, subItem);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']/method[@name='addSubItem' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='T']]"
		[Register ("addSubItem", "(ILjava/lang/Object;)V", "GetAddSubItem_ILjava_lang_Object_Handler")]
		public virtual unsafe void AddSubItem (int position, global::Java.Lang.Object subItem)
		{
			const string __id = "addSubItem.(ILjava/lang/Object;)V";
			IntPtr native_subItem = JNIEnv.ToLocalJniHandle (subItem);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (position);
				__args [1] = new JniArgumentValue (native_subItem);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_subItem);
				global::System.GC.KeepAlive (subItem);
			}
		}

		static Delegate cb_addSubItem_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetAddSubItem_Ljava_lang_Object_Handler ()
		{
			if (cb_addSubItem_Ljava_lang_Object_ == null)
				cb_addSubItem_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AddSubItem_Ljava_lang_Object_));
			return cb_addSubItem_Ljava_lang_Object_;
		}

		static void n_AddSubItem_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_subItem)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Entity.AbstractExpandableItem> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var subItem = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_subItem, JniHandleOwnership.DoNotTransfer);
			__this.AddSubItem (subItem);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']/method[@name='addSubItem' and count(parameter)=1 and parameter[1][@type='T']]"
		[Register ("addSubItem", "(Ljava/lang/Object;)V", "GetAddSubItem_Ljava_lang_Object_Handler")]
		public virtual unsafe void AddSubItem (global::Java.Lang.Object subItem)
		{
			const string __id = "addSubItem.(Ljava/lang/Object;)V";
			IntPtr native_subItem = JNIEnv.ToLocalJniHandle (subItem);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_subItem);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_subItem);
				global::System.GC.KeepAlive (subItem);
			}
		}

		static Delegate cb_contains_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetContains_Ljava_lang_Object_Handler ()
		{
			if (cb_contains_Ljava_lang_Object_ == null)
				cb_contains_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_Contains_Ljava_lang_Object_));
			return cb_contains_Ljava_lang_Object_;
		}

		static bool n_Contains_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_subItem)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Entity.AbstractExpandableItem> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var subItem = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_subItem, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.Contains (subItem);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']/method[@name='contains' and count(parameter)=1 and parameter[1][@type='T']]"
		[Register ("contains", "(Ljava/lang/Object;)Z", "GetContains_Ljava_lang_Object_Handler")]
		public virtual unsafe bool Contains (global::Java.Lang.Object subItem)
		{
			const string __id = "contains.(Ljava/lang/Object;)Z";
			IntPtr native_subItem = JNIEnv.ToLocalJniHandle (subItem);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_subItem);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_subItem);
				global::System.GC.KeepAlive (subItem);
			}
		}

		static Delegate cb_getSubItem_I;
#pragma warning disable 0169
		static Delegate GetGetSubItem_IHandler ()
		{
			if (cb_getSubItem_I == null)
				cb_getSubItem_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_GetSubItem_I));
			return cb_getSubItem_I;
		}

		static IntPtr n_GetSubItem_I (IntPtr jnienv, IntPtr native__this, int position)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Entity.AbstractExpandableItem> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.GetSubItem (position));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']/method[@name='getSubItem' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("getSubItem", "(I)Ljava/lang/Object;", "GetGetSubItem_IHandler")]
		public virtual unsafe global::Java.Lang.Object GetSubItem (int position)
		{
			const string __id = "getSubItem.(I)Ljava/lang/Object;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (position);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Java.Lang.Object) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_getSubItemPosition_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetGetSubItemPosition_Ljava_lang_Object_Handler ()
		{
			if (cb_getSubItemPosition_Ljava_lang_Object_ == null)
				cb_getSubItemPosition_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_I (n_GetSubItemPosition_Ljava_lang_Object_));
			return cb_getSubItemPosition_Ljava_lang_Object_;
		}

		static int n_GetSubItemPosition_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_subItem)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Entity.AbstractExpandableItem> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var subItem = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_subItem, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.GetSubItemPosition (subItem);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']/method[@name='getSubItemPosition' and count(parameter)=1 and parameter[1][@type='T']]"
		[Register ("getSubItemPosition", "(Ljava/lang/Object;)I", "GetGetSubItemPosition_Ljava_lang_Object_Handler")]
		public virtual unsafe int GetSubItemPosition (global::Java.Lang.Object subItem)
		{
			const string __id = "getSubItemPosition.(Ljava/lang/Object;)I";
			IntPtr native_subItem = JNIEnv.ToLocalJniHandle (subItem);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_subItem);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_subItem);
				global::System.GC.KeepAlive (subItem);
			}
		}

		static Delegate cb_removeSubItem_I;
#pragma warning disable 0169
		static Delegate GetRemoveSubItem_IHandler ()
		{
			if (cb_removeSubItem_I == null)
				cb_removeSubItem_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_Z (n_RemoveSubItem_I));
			return cb_removeSubItem_I;
		}

		static bool n_RemoveSubItem_I (IntPtr jnienv, IntPtr native__this, int position)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Entity.AbstractExpandableItem> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.RemoveSubItem (position);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']/method[@name='removeSubItem' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("removeSubItem", "(I)Z", "GetRemoveSubItem_IHandler")]
		public virtual unsafe bool RemoveSubItem (int position)
		{
			const string __id = "removeSubItem.(I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (position);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate cb_removeSubItem_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetRemoveSubItem_Ljava_lang_Object_Handler ()
		{
			if (cb_removeSubItem_Ljava_lang_Object_ == null)
				cb_removeSubItem_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_RemoveSubItem_Ljava_lang_Object_));
			return cb_removeSubItem_Ljava_lang_Object_;
		}

		static bool n_RemoveSubItem_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_subItem)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Entity.AbstractExpandableItem> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var subItem = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_subItem, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.RemoveSubItem (subItem);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']/method[@name='removeSubItem' and count(parameter)=1 and parameter[1][@type='T']]"
		[Register ("removeSubItem", "(Ljava/lang/Object;)Z", "GetRemoveSubItem_Ljava_lang_Object_Handler")]
		public virtual unsafe bool RemoveSubItem (global::Java.Lang.Object subItem)
		{
			const string __id = "removeSubItem.(Ljava/lang/Object;)Z";
			IntPtr native_subItem = JNIEnv.ToLocalJniHandle (subItem);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_subItem);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_subItem);
				global::System.GC.KeepAlive (subItem);
			}
		}

		static Delegate cb_getLevel;
#pragma warning disable 0169
		static Delegate GetGetLevelHandler ()
		{
			if (cb_getLevel == null)
				cb_getLevel = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetLevel));
			return cb_getLevel;
		}

		static int n_GetLevel (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Entity.AbstractExpandableItem> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.Level;
		}
#pragma warning restore 0169

		public abstract int Level {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']/method[@name='getLevel' and count(parameter)=0]"
			[Register ("getLevel", "()I", "GetGetLevelHandler")]
			get; 
		}

	}

	[global::Android.Runtime.Register ("com/chad/library/adapter/base/entity/AbstractExpandableItem", DoNotGenerateAcw=true)]
	internal partial class AbstractExpandableItemInvoker : AbstractExpandableItem, global::Com.Chad.Library.Adapter.Base.Entity.IExpandable {
		public AbstractExpandableItemInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
		{
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/entity/AbstractExpandableItem", typeof (AbstractExpandableItemInvoker));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		public override unsafe int Level {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.entity']/class[@name='AbstractExpandableItem']/method[@name='getLevel' and count(parameter)=0]"
			[Register ("getLevel", "()I", "GetGetLevelHandler")]
			get {
				const string __id = "getLevel.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeAbstractInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

	}
}
