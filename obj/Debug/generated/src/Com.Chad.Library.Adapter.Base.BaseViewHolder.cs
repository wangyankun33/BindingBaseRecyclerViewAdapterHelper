//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Chad.Library.Adapter.Base {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']"
	[global::Android.Runtime.Register ("com/chad/library/adapter/base/BaseViewHolder", DoNotGenerateAcw=true)]
	public partial class BaseViewHolder : global::Android.Support.V7.Widget.RecyclerView.ViewHolder {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/BaseViewHolder", typeof (BaseViewHolder));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected BaseViewHolder (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/constructor[@name='BaseViewHolder' and count(parameter)=1 and parameter[1][@type='android.view.View']]"
		[Register (".ctor", "(Landroid/view/View;)V", "")]
		public unsafe BaseViewHolder (global::Android.Views.View view) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/view/View;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((view == null) ? IntPtr.Zero : ((global::Java.Lang.Object) view).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (view);
			}
		}

		static Delegate cb_getAssociatedObject;
#pragma warning disable 0169
		static Delegate GetGetAssociatedObjectHandler ()
		{
			if (cb_getAssociatedObject == null)
				cb_getAssociatedObject = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetAssociatedObject));
			return cb_getAssociatedObject;
		}

		static IntPtr n_GetAssociatedObject (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.AssociatedObject);
		}
#pragma warning restore 0169

		static Delegate cb_setAssociatedObject_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetSetAssociatedObject_Ljava_lang_Object_Handler ()
		{
			if (cb_setAssociatedObject_Ljava_lang_Object_ == null)
				cb_setAssociatedObject_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetAssociatedObject_Ljava_lang_Object_));
			return cb_setAssociatedObject_Ljava_lang_Object_;
		}

		static void n_SetAssociatedObject_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_associatedObject)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var associatedObject = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_associatedObject, JniHandleOwnership.DoNotTransfer);
			__this.AssociatedObject = associatedObject;
		}
#pragma warning restore 0169

		public virtual unsafe global::Java.Lang.Object AssociatedObject {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='getAssociatedObject' and count(parameter)=0]"
			[Register ("getAssociatedObject", "()Ljava/lang/Object;", "GetGetAssociatedObjectHandler")]
			get {
				const string __id = "getAssociatedObject.()Ljava/lang/Object;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setAssociatedObject' and count(parameter)=1 and parameter[1][@type='java.lang.Object']]"
			[Register ("setAssociatedObject", "(Ljava/lang/Object;)V", "GetSetAssociatedObject_Ljava_lang_Object_Handler")]
			set {
				const string __id = "setAssociatedObject.(Ljava/lang/Object;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		static Delegate cb_getChildClickViewIds;
#pragma warning disable 0169
		static Delegate GetGetChildClickViewIdsHandler ()
		{
			if (cb_getChildClickViewIds == null)
				cb_getChildClickViewIds = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetChildClickViewIds));
			return cb_getChildClickViewIds;
		}

		static IntPtr n_GetChildClickViewIds (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.ChildClickViewIds);
		}
#pragma warning restore 0169

		public virtual unsafe global::Java.Util.HashSet ChildClickViewIds {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='getChildClickViewIds' and count(parameter)=0]"
			[Register ("getChildClickViewIds", "()Ljava/util/HashSet;", "GetGetChildClickViewIdsHandler")]
			get {
				const string __id = "getChildClickViewIds.()Ljava/util/HashSet;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Util.HashSet> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getConvertView;
#pragma warning disable 0169
		[global::System.Obsolete]
		static Delegate GetGetConvertViewHandler ()
		{
			if (cb_getConvertView == null)
				cb_getConvertView = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetConvertView));
			return cb_getConvertView;
		}

		[global::System.Obsolete]
		static IntPtr n_GetConvertView (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.ConvertView);
		}
#pragma warning restore 0169

		[global::System.Obsolete (@"deprecated")]
		public virtual unsafe global::Android.Views.View ConvertView {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='getConvertView' and count(parameter)=0]"
			[Register ("getConvertView", "()Landroid/view/View;", "GetGetConvertViewHandler")]
			get {
				const string __id = "getConvertView.()Landroid/view/View;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Android.Views.View> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getItemChildLongClickViewIds;
#pragma warning disable 0169
		static Delegate GetGetItemChildLongClickViewIdsHandler ()
		{
			if (cb_getItemChildLongClickViewIds == null)
				cb_getItemChildLongClickViewIds = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetItemChildLongClickViewIds));
			return cb_getItemChildLongClickViewIds;
		}

		static IntPtr n_GetItemChildLongClickViewIds (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.ItemChildLongClickViewIds);
		}
#pragma warning restore 0169

		public virtual unsafe global::Java.Util.HashSet ItemChildLongClickViewIds {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='getItemChildLongClickViewIds' and count(parameter)=0]"
			[Register ("getItemChildLongClickViewIds", "()Ljava/util/HashSet;", "GetGetItemChildLongClickViewIdsHandler")]
			get {
				const string __id = "getItemChildLongClickViewIds.()Ljava/util/HashSet;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Util.HashSet> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getNestViews;
#pragma warning disable 0169
		static Delegate GetGetNestViewsHandler ()
		{
			if (cb_getNestViews == null)
				cb_getNestViews = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetNestViews));
			return cb_getNestViews;
		}

		static IntPtr n_GetNestViews (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return global::Android.Runtime.JavaSet<global::Java.Lang.Integer>.ToLocalJniHandle (__this.NestViews);
		}
#pragma warning restore 0169

		public virtual unsafe global::System.Collections.Generic.ICollection<global::Java.Lang.Integer> NestViews {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='getNestViews' and count(parameter)=0]"
			[Register ("getNestViews", "()Ljava/util/Set;", "GetGetNestViewsHandler")]
			get {
				const string __id = "getNestViews.()Ljava/util/Set;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Android.Runtime.JavaSet<global::Java.Lang.Integer>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_addOnClickListener_I;
#pragma warning disable 0169
		static Delegate GetAddOnClickListener_IHandler ()
		{
			if (cb_addOnClickListener_I == null)
				cb_addOnClickListener_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_AddOnClickListener_I));
			return cb_addOnClickListener_I;
		}

		static IntPtr n_AddOnClickListener_I (IntPtr jnienv, IntPtr native__this, int viewId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.AddOnClickListener (viewId));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='addOnClickListener' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("addOnClickListener", "(I)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetAddOnClickListener_IHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder AddOnClickListener (int viewId)
		{
			const string __id = "addOnClickListener.(I)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (viewId);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_addOnLongClickListener_I;
#pragma warning disable 0169
		static Delegate GetAddOnLongClickListener_IHandler ()
		{
			if (cb_addOnLongClickListener_I == null)
				cb_addOnLongClickListener_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_AddOnLongClickListener_I));
			return cb_addOnLongClickListener_I;
		}

		static IntPtr n_AddOnLongClickListener_I (IntPtr jnienv, IntPtr native__this, int viewId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.AddOnLongClickListener (viewId));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='addOnLongClickListener' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("addOnLongClickListener", "(I)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetAddOnLongClickListener_IHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder AddOnLongClickListener (int viewId)
		{
			const string __id = "addOnLongClickListener.(I)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (viewId);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_getView_I;
#pragma warning disable 0169
		static Delegate GetGetView_IHandler ()
		{
			if (cb_getView_I == null)
				cb_getView_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_GetView_I));
			return cb_getView_I;
		}

		static IntPtr n_GetView_I (IntPtr jnienv, IntPtr native__this, int viewId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.GetView (viewId));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='getView' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("getView", "(I)Landroid/view/View;", "GetGetView_IHandler")]
		[global::Java.Interop.JavaTypeParameters (new string [] {"T extends android.view.View"})]
		public virtual unsafe global::Java.Lang.Object GetView (int viewId)
		{
			const string __id = "getView.(I)Landroid/view/View;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (viewId);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Java.Lang.Object) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_linkify_I;
#pragma warning disable 0169
		static Delegate GetLinkify_IHandler ()
		{
			if (cb_linkify_I == null)
				cb_linkify_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_Linkify_I));
			return cb_linkify_I;
		}

		static IntPtr n_Linkify_I (IntPtr jnienv, IntPtr native__this, int viewId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.Linkify (viewId));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='linkify' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("linkify", "(I)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetLinkify_IHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder Linkify (int viewId)
		{
			const string __id = "linkify.(I)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (viewId);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_setAdapter_Lcom_chad_library_adapter_base_BaseQuickAdapter_;
#pragma warning disable 0169
		static Delegate GetSetAdapter_Lcom_chad_library_adapter_base_BaseQuickAdapter_Handler ()
		{
			if (cb_setAdapter_Lcom_chad_library_adapter_base_BaseQuickAdapter_ == null)
				cb_setAdapter_Lcom_chad_library_adapter_base_BaseQuickAdapter_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_SetAdapter_Lcom_chad_library_adapter_base_BaseQuickAdapter_));
			return cb_setAdapter_Lcom_chad_library_adapter_base_BaseQuickAdapter_;
		}

		static IntPtr n_SetAdapter_Lcom_chad_library_adapter_base_BaseQuickAdapter_ (IntPtr jnienv, IntPtr native__this, IntPtr native_adapter)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var adapter = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (native_adapter, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetAdapter (adapter));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setAdapter' and count(parameter)=1 and parameter[1][@type='com.chad.library.adapter.base.BaseQuickAdapter']]"
		[Register ("setAdapter", "(Lcom/chad/library/adapter/base/BaseQuickAdapter;)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetAdapter_Lcom_chad_library_adapter_base_BaseQuickAdapter_Handler")]
		protected virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetAdapter (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter adapter)
		{
			const string __id = "setAdapter.(Lcom/chad/library/adapter/base/BaseQuickAdapter;)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((adapter == null) ? IntPtr.Zero : ((global::Java.Lang.Object) adapter).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (adapter);
			}
		}

		static Delegate cb_setAdapter_ILandroid_widget_Adapter_;
#pragma warning disable 0169
		static Delegate GetSetAdapter_ILandroid_widget_Adapter_Handler ()
		{
			if (cb_setAdapter_ILandroid_widget_Adapter_ == null)
				cb_setAdapter_ILandroid_widget_Adapter_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_L (n_SetAdapter_ILandroid_widget_Adapter_));
			return cb_setAdapter_ILandroid_widget_Adapter_;
		}

		static IntPtr n_SetAdapter_ILandroid_widget_Adapter_ (IntPtr jnienv, IntPtr native__this, int viewId, IntPtr native_adapter)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var adapter = (global::Android.Widget.IAdapter)global::Java.Lang.Object.GetObject<global::Android.Widget.IAdapter> (native_adapter, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetAdapter (viewId, adapter));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setAdapter' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='android.widget.Adapter']]"
		[Register ("setAdapter", "(ILandroid/widget/Adapter;)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetAdapter_ILandroid_widget_Adapter_Handler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetAdapter (int viewId, global::Android.Widget.IAdapter adapter)
		{
			const string __id = "setAdapter.(ILandroid/widget/Adapter;)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue ((adapter == null) ? IntPtr.Zero : ((global::Java.Lang.Object) adapter).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (adapter);
			}
		}

		static Delegate cb_setAlpha_IF;
#pragma warning disable 0169
		static Delegate GetSetAlpha_IFHandler ()
		{
			if (cb_setAlpha_IF == null)
				cb_setAlpha_IF = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIF_L (n_SetAlpha_IF));
			return cb_setAlpha_IF;
		}

		static IntPtr n_SetAlpha_IF (IntPtr jnienv, IntPtr native__this, int viewId, float value)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.SetAlpha (viewId, value));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setAlpha' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='float']]"
		[Register ("setAlpha", "(IF)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetAlpha_IFHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetAlpha (int viewId, float value)
		{
			const string __id = "setAlpha.(IF)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue (value);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_setBackgroundColor_II;
#pragma warning disable 0169
		static Delegate GetSetBackgroundColor_IIHandler ()
		{
			if (cb_setBackgroundColor_II == null)
				cb_setBackgroundColor_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_L (n_SetBackgroundColor_II));
			return cb_setBackgroundColor_II;
		}

		static IntPtr n_SetBackgroundColor_II (IntPtr jnienv, IntPtr native__this, int viewId, int color)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.SetBackgroundColor (viewId, color));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setBackgroundColor' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("setBackgroundColor", "(II)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetBackgroundColor_IIHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetBackgroundColor (int viewId, int color)
		{
			const string __id = "setBackgroundColor.(II)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue (color);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_setBackgroundRes_II;
#pragma warning disable 0169
		static Delegate GetSetBackgroundRes_IIHandler ()
		{
			if (cb_setBackgroundRes_II == null)
				cb_setBackgroundRes_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_L (n_SetBackgroundRes_II));
			return cb_setBackgroundRes_II;
		}

		static IntPtr n_SetBackgroundRes_II (IntPtr jnienv, IntPtr native__this, int viewId, int backgroundRes)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.SetBackgroundRes (viewId, backgroundRes));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setBackgroundRes' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("setBackgroundRes", "(II)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetBackgroundRes_IIHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetBackgroundRes (int viewId, int backgroundRes)
		{
			const string __id = "setBackgroundRes.(II)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue (backgroundRes);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_setChecked_IZ;
#pragma warning disable 0169
		static Delegate GetSetChecked_IZHandler ()
		{
			if (cb_setChecked_IZ == null)
				cb_setChecked_IZ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIZ_L (n_SetChecked_IZ));
			return cb_setChecked_IZ;
		}

		static IntPtr n_SetChecked_IZ (IntPtr jnienv, IntPtr native__this, int viewId, bool @checked)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.SetChecked (viewId, @checked));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setChecked' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='boolean']]"
		[Register ("setChecked", "(IZ)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetChecked_IZHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetChecked (int viewId, bool @checked)
		{
			const string __id = "setChecked.(IZ)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue (@checked);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_setGone_IZ;
#pragma warning disable 0169
		static Delegate GetSetGone_IZHandler ()
		{
			if (cb_setGone_IZ == null)
				cb_setGone_IZ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIZ_L (n_SetGone_IZ));
			return cb_setGone_IZ;
		}

		static IntPtr n_SetGone_IZ (IntPtr jnienv, IntPtr native__this, int viewId, bool visible)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.SetGone (viewId, visible));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setGone' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='boolean']]"
		[Register ("setGone", "(IZ)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetGone_IZHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetGone (int viewId, bool visible)
		{
			const string __id = "setGone.(IZ)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue (visible);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_setImageBitmap_ILandroid_graphics_Bitmap_;
#pragma warning disable 0169
		static Delegate GetSetImageBitmap_ILandroid_graphics_Bitmap_Handler ()
		{
			if (cb_setImageBitmap_ILandroid_graphics_Bitmap_ == null)
				cb_setImageBitmap_ILandroid_graphics_Bitmap_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_L (n_SetImageBitmap_ILandroid_graphics_Bitmap_));
			return cb_setImageBitmap_ILandroid_graphics_Bitmap_;
		}

		static IntPtr n_SetImageBitmap_ILandroid_graphics_Bitmap_ (IntPtr jnienv, IntPtr native__this, int viewId, IntPtr native_bitmap)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var bitmap = global::Java.Lang.Object.GetObject<global::Android.Graphics.Bitmap> (native_bitmap, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetImageBitmap (viewId, bitmap));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setImageBitmap' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='android.graphics.Bitmap']]"
		[Register ("setImageBitmap", "(ILandroid/graphics/Bitmap;)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetImageBitmap_ILandroid_graphics_Bitmap_Handler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetImageBitmap (int viewId, global::Android.Graphics.Bitmap bitmap)
		{
			const string __id = "setImageBitmap.(ILandroid/graphics/Bitmap;)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue ((bitmap == null) ? IntPtr.Zero : ((global::Java.Lang.Object) bitmap).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (bitmap);
			}
		}

		static Delegate cb_setImageDrawable_ILandroid_graphics_drawable_Drawable_;
#pragma warning disable 0169
		static Delegate GetSetImageDrawable_ILandroid_graphics_drawable_Drawable_Handler ()
		{
			if (cb_setImageDrawable_ILandroid_graphics_drawable_Drawable_ == null)
				cb_setImageDrawable_ILandroid_graphics_drawable_Drawable_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_L (n_SetImageDrawable_ILandroid_graphics_drawable_Drawable_));
			return cb_setImageDrawable_ILandroid_graphics_drawable_Drawable_;
		}

		static IntPtr n_SetImageDrawable_ILandroid_graphics_drawable_Drawable_ (IntPtr jnienv, IntPtr native__this, int viewId, IntPtr native_drawable)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var drawable = global::Java.Lang.Object.GetObject<global::Android.Graphics.Drawables.Drawable> (native_drawable, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetImageDrawable (viewId, drawable));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setImageDrawable' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='android.graphics.drawable.Drawable']]"
		[Register ("setImageDrawable", "(ILandroid/graphics/drawable/Drawable;)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetImageDrawable_ILandroid_graphics_drawable_Drawable_Handler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetImageDrawable (int viewId, global::Android.Graphics.Drawables.Drawable drawable)
		{
			const string __id = "setImageDrawable.(ILandroid/graphics/drawable/Drawable;)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue ((drawable == null) ? IntPtr.Zero : ((global::Java.Lang.Object) drawable).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (drawable);
			}
		}

		static Delegate cb_setImageResource_II;
#pragma warning disable 0169
		static Delegate GetSetImageResource_IIHandler ()
		{
			if (cb_setImageResource_II == null)
				cb_setImageResource_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_L (n_SetImageResource_II));
			return cb_setImageResource_II;
		}

		static IntPtr n_SetImageResource_II (IntPtr jnienv, IntPtr native__this, int viewId, int imageResId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.SetImageResource (viewId, imageResId));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setImageResource' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("setImageResource", "(II)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetImageResource_IIHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetImageResource (int viewId, int imageResId)
		{
			const string __id = "setImageResource.(II)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue (imageResId);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_setMax_II;
#pragma warning disable 0169
		static Delegate GetSetMax_IIHandler ()
		{
			if (cb_setMax_II == null)
				cb_setMax_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_L (n_SetMax_II));
			return cb_setMax_II;
		}

		static IntPtr n_SetMax_II (IntPtr jnienv, IntPtr native__this, int viewId, int max)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.SetMax (viewId, max));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setMax' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("setMax", "(II)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetMax_IIHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetMax (int viewId, int max)
		{
			const string __id = "setMax.(II)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue (max);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_setNestView_I;
#pragma warning disable 0169
		static Delegate GetSetNestView_IHandler ()
		{
			if (cb_setNestView_I == null)
				cb_setNestView_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_SetNestView_I));
			return cb_setNestView_I;
		}

		static IntPtr n_SetNestView_I (IntPtr jnienv, IntPtr native__this, int viewId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.SetNestView (viewId));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setNestView' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setNestView", "(I)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetNestView_IHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetNestView (int viewId)
		{
			const string __id = "setNestView.(I)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (viewId);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_setOnCheckedChangeListener_ILandroid_widget_CompoundButton_OnCheckedChangeListener_;
#pragma warning disable 0169
		static Delegate GetSetOnCheckedChangeListener_ILandroid_widget_CompoundButton_OnCheckedChangeListener_Handler ()
		{
			if (cb_setOnCheckedChangeListener_ILandroid_widget_CompoundButton_OnCheckedChangeListener_ == null)
				cb_setOnCheckedChangeListener_ILandroid_widget_CompoundButton_OnCheckedChangeListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_L (n_SetOnCheckedChangeListener_ILandroid_widget_CompoundButton_OnCheckedChangeListener_));
			return cb_setOnCheckedChangeListener_ILandroid_widget_CompoundButton_OnCheckedChangeListener_;
		}

		static IntPtr n_SetOnCheckedChangeListener_ILandroid_widget_CompoundButton_OnCheckedChangeListener_ (IntPtr jnienv, IntPtr native__this, int viewId, IntPtr native_listener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var listener = (global::Android.Widget.CompoundButton.IOnCheckedChangeListener)global::Java.Lang.Object.GetObject<global::Android.Widget.CompoundButton.IOnCheckedChangeListener> (native_listener, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetOnCheckedChangeListener (viewId, listener));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setOnCheckedChangeListener' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='android.widget.CompoundButton.OnCheckedChangeListener']]"
		[Register ("setOnCheckedChangeListener", "(ILandroid/widget/CompoundButton$OnCheckedChangeListener;)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetOnCheckedChangeListener_ILandroid_widget_CompoundButton_OnCheckedChangeListener_Handler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetOnCheckedChangeListener (int viewId, global::Android.Widget.CompoundButton.IOnCheckedChangeListener listener)
		{
			const string __id = "setOnCheckedChangeListener.(ILandroid/widget/CompoundButton$OnCheckedChangeListener;)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (listener);
			}
		}

		static Delegate cb_setOnClickListener_ILandroid_view_View_OnClickListener_;
#pragma warning disable 0169
		[global::System.Obsolete]
		static Delegate GetSetOnClickListener_ILandroid_view_View_OnClickListener_Handler ()
		{
			if (cb_setOnClickListener_ILandroid_view_View_OnClickListener_ == null)
				cb_setOnClickListener_ILandroid_view_View_OnClickListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_L (n_SetOnClickListener_ILandroid_view_View_OnClickListener_));
			return cb_setOnClickListener_ILandroid_view_View_OnClickListener_;
		}

		[global::System.Obsolete]
		static IntPtr n_SetOnClickListener_ILandroid_view_View_OnClickListener_ (IntPtr jnienv, IntPtr native__this, int viewId, IntPtr native_listener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var listener = (global::Android.Views.View.IOnClickListener)global::Java.Lang.Object.GetObject<global::Android.Views.View.IOnClickListener> (native_listener, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetOnClickListener (viewId, listener));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setOnClickListener' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='android.view.View.OnClickListener']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("setOnClickListener", "(ILandroid/view/View$OnClickListener;)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetOnClickListener_ILandroid_view_View_OnClickListener_Handler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetOnClickListener (int viewId, global::Android.Views.View.IOnClickListener listener)
		{
			const string __id = "setOnClickListener.(ILandroid/view/View$OnClickListener;)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (listener);
			}
		}

		static Delegate cb_setOnItemClickListener_ILandroid_widget_AdapterView_OnItemClickListener_;
#pragma warning disable 0169
		[global::System.Obsolete]
		static Delegate GetSetOnItemClickListener_ILandroid_widget_AdapterView_OnItemClickListener_Handler ()
		{
			if (cb_setOnItemClickListener_ILandroid_widget_AdapterView_OnItemClickListener_ == null)
				cb_setOnItemClickListener_ILandroid_widget_AdapterView_OnItemClickListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_L (n_SetOnItemClickListener_ILandroid_widget_AdapterView_OnItemClickListener_));
			return cb_setOnItemClickListener_ILandroid_widget_AdapterView_OnItemClickListener_;
		}

		[global::System.Obsolete]
		static IntPtr n_SetOnItemClickListener_ILandroid_widget_AdapterView_OnItemClickListener_ (IntPtr jnienv, IntPtr native__this, int viewId, IntPtr native_listener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var listener = (global::Android.Widget.AdapterView.IOnItemClickListener)global::Java.Lang.Object.GetObject<global::Android.Widget.AdapterView.IOnItemClickListener> (native_listener, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetOnItemClickListener (viewId, listener));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setOnItemClickListener' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='android.widget.AdapterView.OnItemClickListener']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("setOnItemClickListener", "(ILandroid/widget/AdapterView$OnItemClickListener;)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetOnItemClickListener_ILandroid_widget_AdapterView_OnItemClickListener_Handler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetOnItemClickListener (int viewId, global::Android.Widget.AdapterView.IOnItemClickListener listener)
		{
			const string __id = "setOnItemClickListener.(ILandroid/widget/AdapterView$OnItemClickListener;)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (listener);
			}
		}

		static Delegate cb_setOnItemLongClickListener_ILandroid_widget_AdapterView_OnItemLongClickListener_;
#pragma warning disable 0169
		static Delegate GetSetOnItemLongClickListener_ILandroid_widget_AdapterView_OnItemLongClickListener_Handler ()
		{
			if (cb_setOnItemLongClickListener_ILandroid_widget_AdapterView_OnItemLongClickListener_ == null)
				cb_setOnItemLongClickListener_ILandroid_widget_AdapterView_OnItemLongClickListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_L (n_SetOnItemLongClickListener_ILandroid_widget_AdapterView_OnItemLongClickListener_));
			return cb_setOnItemLongClickListener_ILandroid_widget_AdapterView_OnItemLongClickListener_;
		}

		static IntPtr n_SetOnItemLongClickListener_ILandroid_widget_AdapterView_OnItemLongClickListener_ (IntPtr jnienv, IntPtr native__this, int viewId, IntPtr native_listener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var listener = (global::Android.Widget.AdapterView.IOnItemLongClickListener)global::Java.Lang.Object.GetObject<global::Android.Widget.AdapterView.IOnItemLongClickListener> (native_listener, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetOnItemLongClickListener (viewId, listener));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setOnItemLongClickListener' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='android.widget.AdapterView.OnItemLongClickListener']]"
		[Register ("setOnItemLongClickListener", "(ILandroid/widget/AdapterView$OnItemLongClickListener;)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetOnItemLongClickListener_ILandroid_widget_AdapterView_OnItemLongClickListener_Handler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetOnItemLongClickListener (int viewId, global::Android.Widget.AdapterView.IOnItemLongClickListener listener)
		{
			const string __id = "setOnItemLongClickListener.(ILandroid/widget/AdapterView$OnItemLongClickListener;)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (listener);
			}
		}

		static Delegate cb_setOnItemSelectedClickListener_ILandroid_widget_AdapterView_OnItemSelectedListener_;
#pragma warning disable 0169
		static Delegate GetSetOnItemSelectedClickListener_ILandroid_widget_AdapterView_OnItemSelectedListener_Handler ()
		{
			if (cb_setOnItemSelectedClickListener_ILandroid_widget_AdapterView_OnItemSelectedListener_ == null)
				cb_setOnItemSelectedClickListener_ILandroid_widget_AdapterView_OnItemSelectedListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_L (n_SetOnItemSelectedClickListener_ILandroid_widget_AdapterView_OnItemSelectedListener_));
			return cb_setOnItemSelectedClickListener_ILandroid_widget_AdapterView_OnItemSelectedListener_;
		}

		static IntPtr n_SetOnItemSelectedClickListener_ILandroid_widget_AdapterView_OnItemSelectedListener_ (IntPtr jnienv, IntPtr native__this, int viewId, IntPtr native_listener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var listener = (global::Android.Widget.AdapterView.IOnItemSelectedListener)global::Java.Lang.Object.GetObject<global::Android.Widget.AdapterView.IOnItemSelectedListener> (native_listener, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetOnItemSelectedClickListener (viewId, listener));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setOnItemSelectedClickListener' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='android.widget.AdapterView.OnItemSelectedListener']]"
		[Register ("setOnItemSelectedClickListener", "(ILandroid/widget/AdapterView$OnItemSelectedListener;)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetOnItemSelectedClickListener_ILandroid_widget_AdapterView_OnItemSelectedListener_Handler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetOnItemSelectedClickListener (int viewId, global::Android.Widget.AdapterView.IOnItemSelectedListener listener)
		{
			const string __id = "setOnItemSelectedClickListener.(ILandroid/widget/AdapterView$OnItemSelectedListener;)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (listener);
			}
		}

		static Delegate cb_setOnLongClickListener_ILandroid_view_View_OnLongClickListener_;
#pragma warning disable 0169
		[global::System.Obsolete]
		static Delegate GetSetOnLongClickListener_ILandroid_view_View_OnLongClickListener_Handler ()
		{
			if (cb_setOnLongClickListener_ILandroid_view_View_OnLongClickListener_ == null)
				cb_setOnLongClickListener_ILandroid_view_View_OnLongClickListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_L (n_SetOnLongClickListener_ILandroid_view_View_OnLongClickListener_));
			return cb_setOnLongClickListener_ILandroid_view_View_OnLongClickListener_;
		}

		[global::System.Obsolete]
		static IntPtr n_SetOnLongClickListener_ILandroid_view_View_OnLongClickListener_ (IntPtr jnienv, IntPtr native__this, int viewId, IntPtr native_listener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var listener = (global::Android.Views.View.IOnLongClickListener)global::Java.Lang.Object.GetObject<global::Android.Views.View.IOnLongClickListener> (native_listener, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetOnLongClickListener (viewId, listener));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setOnLongClickListener' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='android.view.View.OnLongClickListener']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("setOnLongClickListener", "(ILandroid/view/View$OnLongClickListener;)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetOnLongClickListener_ILandroid_view_View_OnLongClickListener_Handler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetOnLongClickListener (int viewId, global::Android.Views.View.IOnLongClickListener listener)
		{
			const string __id = "setOnLongClickListener.(ILandroid/view/View$OnLongClickListener;)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (listener);
			}
		}

		static Delegate cb_setOnTouchListener_ILandroid_view_View_OnTouchListener_;
#pragma warning disable 0169
		[global::System.Obsolete]
		static Delegate GetSetOnTouchListener_ILandroid_view_View_OnTouchListener_Handler ()
		{
			if (cb_setOnTouchListener_ILandroid_view_View_OnTouchListener_ == null)
				cb_setOnTouchListener_ILandroid_view_View_OnTouchListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_L (n_SetOnTouchListener_ILandroid_view_View_OnTouchListener_));
			return cb_setOnTouchListener_ILandroid_view_View_OnTouchListener_;
		}

		[global::System.Obsolete]
		static IntPtr n_SetOnTouchListener_ILandroid_view_View_OnTouchListener_ (IntPtr jnienv, IntPtr native__this, int viewId, IntPtr native_listener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var listener = (global::Android.Views.View.IOnTouchListener)global::Java.Lang.Object.GetObject<global::Android.Views.View.IOnTouchListener> (native_listener, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetOnTouchListener (viewId, listener));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setOnTouchListener' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='android.view.View.OnTouchListener']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("setOnTouchListener", "(ILandroid/view/View$OnTouchListener;)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetOnTouchListener_ILandroid_view_View_OnTouchListener_Handler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetOnTouchListener (int viewId, global::Android.Views.View.IOnTouchListener listener)
		{
			const string __id = "setOnTouchListener.(ILandroid/view/View$OnTouchListener;)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (listener);
			}
		}

		static Delegate cb_setProgress_II;
#pragma warning disable 0169
		static Delegate GetSetProgress_IIHandler ()
		{
			if (cb_setProgress_II == null)
				cb_setProgress_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_L (n_SetProgress_II));
			return cb_setProgress_II;
		}

		static IntPtr n_SetProgress_II (IntPtr jnienv, IntPtr native__this, int viewId, int progress)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.SetProgress (viewId, progress));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setProgress' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("setProgress", "(II)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetProgress_IIHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetProgress (int viewId, int progress)
		{
			const string __id = "setProgress.(II)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue (progress);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_setProgress_III;
#pragma warning disable 0169
		static Delegate GetSetProgress_IIIHandler ()
		{
			if (cb_setProgress_III == null)
				cb_setProgress_III = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIII_L (n_SetProgress_III));
			return cb_setProgress_III;
		}

		static IntPtr n_SetProgress_III (IntPtr jnienv, IntPtr native__this, int viewId, int progress, int max)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.SetProgress (viewId, progress, max));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setProgress' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("setProgress", "(III)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetProgress_IIIHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetProgress (int viewId, int progress, int max)
		{
			const string __id = "setProgress.(III)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue (progress);
				__args [2] = new JniArgumentValue (max);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_setRating_IF;
#pragma warning disable 0169
		static Delegate GetSetRating_IFHandler ()
		{
			if (cb_setRating_IF == null)
				cb_setRating_IF = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIF_L (n_SetRating_IF));
			return cb_setRating_IF;
		}

		static IntPtr n_SetRating_IF (IntPtr jnienv, IntPtr native__this, int viewId, float rating)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.SetRating (viewId, rating));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setRating' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='float']]"
		[Register ("setRating", "(IF)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetRating_IFHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetRating (int viewId, float rating)
		{
			const string __id = "setRating.(IF)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue (rating);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_setRating_IFI;
#pragma warning disable 0169
		static Delegate GetSetRating_IFIHandler ()
		{
			if (cb_setRating_IFI == null)
				cb_setRating_IFI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIFI_L (n_SetRating_IFI));
			return cb_setRating_IFI;
		}

		static IntPtr n_SetRating_IFI (IntPtr jnienv, IntPtr native__this, int viewId, float rating, int max)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.SetRating (viewId, rating, max));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setRating' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='float'] and parameter[3][@type='int']]"
		[Register ("setRating", "(IFI)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetRating_IFIHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetRating (int viewId, float rating, int max)
		{
			const string __id = "setRating.(IFI)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue (rating);
				__args [2] = new JniArgumentValue (max);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_setTag_IILjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetSetTag_IILjava_lang_Object_Handler ()
		{
			if (cb_setTag_IILjava_lang_Object_ == null)
				cb_setTag_IILjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIIL_L (n_SetTag_IILjava_lang_Object_));
			return cb_setTag_IILjava_lang_Object_;
		}

		static IntPtr n_SetTag_IILjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, int viewId, int key, IntPtr native_tag)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var tag = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_tag, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetTag (viewId, key, tag));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setTag' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.Object']]"
		[Register ("setTag", "(IILjava/lang/Object;)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetTag_IILjava_lang_Object_Handler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetTag (int viewId, int key, global::Java.Lang.Object tag)
		{
			const string __id = "setTag.(IILjava/lang/Object;)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue (key);
				__args [2] = new JniArgumentValue ((tag == null) ? IntPtr.Zero : ((global::Java.Lang.Object) tag).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (tag);
			}
		}

		static Delegate cb_setTag_ILjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetSetTag_ILjava_lang_Object_Handler ()
		{
			if (cb_setTag_ILjava_lang_Object_ == null)
				cb_setTag_ILjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_L (n_SetTag_ILjava_lang_Object_));
			return cb_setTag_ILjava_lang_Object_;
		}

		static IntPtr n_SetTag_ILjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, int viewId, IntPtr native_tag)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var tag = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_tag, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetTag (viewId, tag));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setTag' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='java.lang.Object']]"
		[Register ("setTag", "(ILjava/lang/Object;)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetTag_ILjava_lang_Object_Handler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetTag (int viewId, global::Java.Lang.Object tag)
		{
			const string __id = "setTag.(ILjava/lang/Object;)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue ((tag == null) ? IntPtr.Zero : ((global::Java.Lang.Object) tag).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (tag);
			}
		}

		static Delegate cb_setText_II;
#pragma warning disable 0169
		static Delegate GetSetText_IIHandler ()
		{
			if (cb_setText_II == null)
				cb_setText_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_L (n_SetText_II));
			return cb_setText_II;
		}

		static IntPtr n_SetText_II (IntPtr jnienv, IntPtr native__this, int viewId, int strId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.SetText (viewId, strId));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setText' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("setText", "(II)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetText_IIHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetText (int viewId, int strId)
		{
			const string __id = "setText.(II)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue (strId);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_setText_ILjava_lang_CharSequence_;
#pragma warning disable 0169
		static Delegate GetSetText_ILjava_lang_CharSequence_Handler ()
		{
			if (cb_setText_ILjava_lang_CharSequence_ == null)
				cb_setText_ILjava_lang_CharSequence_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_L (n_SetText_ILjava_lang_CharSequence_));
			return cb_setText_ILjava_lang_CharSequence_;
		}

		static IntPtr n_SetText_ILjava_lang_CharSequence_ (IntPtr jnienv, IntPtr native__this, int viewId, IntPtr native_value)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var value = global::Java.Lang.Object.GetObject<global::Java.Lang.ICharSequence> (native_value, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetText (viewId, value));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setText' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='java.lang.CharSequence']]"
		[Register ("setText", "(ILjava/lang/CharSequence;)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetText_ILjava_lang_CharSequence_Handler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetText (int viewId, global::Java.Lang.ICharSequence value)
		{
			const string __id = "setText.(ILjava/lang/CharSequence;)Lcom/chad/library/adapter/base/BaseViewHolder;";
			IntPtr native_value = CharSequence.ToLocalJniHandle (value);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue (native_value);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_value);
				global::System.GC.KeepAlive (value);
			}
		}

		public global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetText (int viewId, string value)
		{
			var jls_value = value == null ? null : new global::Java.Lang.String (value);
			global::Com.Chad.Library.Adapter.Base.BaseViewHolder __result = SetText (viewId, jls_value);
			var __rsval = __result;
			jls_value?.Dispose ();
			return __rsval;
		}

		static Delegate cb_setTextColor_II;
#pragma warning disable 0169
		static Delegate GetSetTextColor_IIHandler ()
		{
			if (cb_setTextColor_II == null)
				cb_setTextColor_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_L (n_SetTextColor_II));
			return cb_setTextColor_II;
		}

		static IntPtr n_SetTextColor_II (IntPtr jnienv, IntPtr native__this, int viewId, int textColor)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.SetTextColor (viewId, textColor));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setTextColor' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("setTextColor", "(II)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetTextColor_IIHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetTextColor (int viewId, int textColor)
		{
			const string __id = "setTextColor.(II)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue (textColor);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_setTypeface_Landroid_graphics_Typeface_arrayI;
#pragma warning disable 0169
		static Delegate GetSetTypeface_Landroid_graphics_Typeface_arrayIHandler ()
		{
			if (cb_setTypeface_Landroid_graphics_Typeface_arrayI == null)
				cb_setTypeface_Landroid_graphics_Typeface_arrayI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_L (n_SetTypeface_Landroid_graphics_Typeface_arrayI));
			return cb_setTypeface_Landroid_graphics_Typeface_arrayI;
		}

		static IntPtr n_SetTypeface_Landroid_graphics_Typeface_arrayI (IntPtr jnienv, IntPtr native__this, IntPtr native_typeface, IntPtr native_viewIds)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var typeface = global::Java.Lang.Object.GetObject<global::Android.Graphics.Typeface> (native_typeface, JniHandleOwnership.DoNotTransfer);
			var viewIds = (int[]) JNIEnv.GetArray (native_viewIds, JniHandleOwnership.DoNotTransfer, typeof (int));
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetTypeface (typeface, viewIds));
			if (viewIds != null)
				JNIEnv.CopyArray (viewIds, native_viewIds);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setTypeface' and count(parameter)=2 and parameter[1][@type='android.graphics.Typeface'] and parameter[2][@type='int...']]"
		[Register ("setTypeface", "(Landroid/graphics/Typeface;[I)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetTypeface_Landroid_graphics_Typeface_arrayIHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetTypeface (global::Android.Graphics.Typeface typeface, params int[] viewIds)
		{
			const string __id = "setTypeface.(Landroid/graphics/Typeface;[I)Lcom/chad/library/adapter/base/BaseViewHolder;";
			IntPtr native_viewIds = JNIEnv.NewArray (viewIds);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((typeface == null) ? IntPtr.Zero : ((global::Java.Lang.Object) typeface).Handle);
				__args [1] = new JniArgumentValue (native_viewIds);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				if (viewIds != null) {
					JNIEnv.CopyArray (native_viewIds, viewIds);
					JNIEnv.DeleteLocalRef (native_viewIds);
				}
				global::System.GC.KeepAlive (typeface);
				global::System.GC.KeepAlive (viewIds);
			}
		}

		static Delegate cb_setTypeface_ILandroid_graphics_Typeface_;
#pragma warning disable 0169
		static Delegate GetSetTypeface_ILandroid_graphics_Typeface_Handler ()
		{
			if (cb_setTypeface_ILandroid_graphics_Typeface_ == null)
				cb_setTypeface_ILandroid_graphics_Typeface_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_L (n_SetTypeface_ILandroid_graphics_Typeface_));
			return cb_setTypeface_ILandroid_graphics_Typeface_;
		}

		static IntPtr n_SetTypeface_ILandroid_graphics_Typeface_ (IntPtr jnienv, IntPtr native__this, int viewId, IntPtr native_typeface)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var typeface = global::Java.Lang.Object.GetObject<global::Android.Graphics.Typeface> (native_typeface, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetTypeface (viewId, typeface));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setTypeface' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='android.graphics.Typeface']]"
		[Register ("setTypeface", "(ILandroid/graphics/Typeface;)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetTypeface_ILandroid_graphics_Typeface_Handler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetTypeface (int viewId, global::Android.Graphics.Typeface typeface)
		{
			const string __id = "setTypeface.(ILandroid/graphics/Typeface;)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue ((typeface == null) ? IntPtr.Zero : ((global::Java.Lang.Object) typeface).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (typeface);
			}
		}

		static Delegate cb_setVisible_IZ;
#pragma warning disable 0169
		static Delegate GetSetVisible_IZHandler ()
		{
			if (cb_setVisible_IZ == null)
				cb_setVisible_IZ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIZ_L (n_SetVisible_IZ));
			return cb_setVisible_IZ;
		}

		static IntPtr n_SetVisible_IZ (IntPtr jnienv, IntPtr native__this, int viewId, bool visible)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.SetVisible (viewId, visible));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseViewHolder']/method[@name='setVisible' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='boolean']]"
		[Register ("setVisible", "(IZ)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetSetVisible_IZHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.BaseViewHolder SetVisible (int viewId, bool visible)
		{
			const string __id = "setVisible.(IZ)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (viewId);
				__args [1] = new JniArgumentValue (visible);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

	}
}
