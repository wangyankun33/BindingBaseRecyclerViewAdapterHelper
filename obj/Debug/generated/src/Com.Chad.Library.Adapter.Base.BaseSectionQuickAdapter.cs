//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Chad.Library.Adapter.Base {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseSectionQuickAdapter']"
	[global::Android.Runtime.Register ("com/chad/library/adapter/base/BaseSectionQuickAdapter", DoNotGenerateAcw=true)]
	[global::Java.Interop.JavaTypeParameters (new string [] {"T extends com.chad.library.adapter.base.entity.SectionEntity", "K extends com.chad.library.adapter.base.BaseViewHolder"})]
	public abstract partial class BaseSectionQuickAdapter : global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseSectionQuickAdapter']/field[@name='mSectionHeadResId']"
		[Register ("mSectionHeadResId")]
		protected int MSectionHeadResId {
			get {
				const string __id = "mSectionHeadResId.I";

				var __v = _members.InstanceFields.GetInt32Value (__id, this);
				return __v;
			}
			set {
				const string __id = "mSectionHeadResId.I";

				try {
					_members.InstanceFields.SetValue (__id, this, value);
				} finally {
				}
			}
		}

		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseSectionQuickAdapter']/field[@name='SECTION_HEADER_VIEW']"
		[Register ("SECTION_HEADER_VIEW")]
		protected const int SectionHeaderView = (int) 1092;

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/BaseSectionQuickAdapter", typeof (BaseSectionQuickAdapter));

		internal static new IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected BaseSectionQuickAdapter (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseSectionQuickAdapter']/constructor[@name='BaseSectionQuickAdapter' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='java.util.List&lt;T&gt;']]"
		[Register (".ctor", "(IILjava/util/List;)V", "")]
		public unsafe BaseSectionQuickAdapter (int layoutResId, int sectionHeadResId, global::System.Collections.IList data) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(IILjava/util/List;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_data = global::Android.Runtime.JavaList.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (layoutResId);
				__args [1] = new JniArgumentValue (sectionHeadResId);
				__args [2] = new JniArgumentValue (native_data);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
			}
		}

		static Delegate cb_convertHead_Lcom_chad_library_adapter_base_BaseViewHolder_Lcom_chad_library_adapter_base_entity_SectionEntity_;
#pragma warning disable 0169
		static Delegate GetConvertHead_Lcom_chad_library_adapter_base_BaseViewHolder_Lcom_chad_library_adapter_base_entity_SectionEntity_Handler ()
		{
			if (cb_convertHead_Lcom_chad_library_adapter_base_BaseViewHolder_Lcom_chad_library_adapter_base_entity_SectionEntity_ == null)
				cb_convertHead_Lcom_chad_library_adapter_base_BaseViewHolder_Lcom_chad_library_adapter_base_entity_SectionEntity_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_ConvertHead_Lcom_chad_library_adapter_base_BaseViewHolder_Lcom_chad_library_adapter_base_entity_SectionEntity_));
			return cb_convertHead_Lcom_chad_library_adapter_base_BaseViewHolder_Lcom_chad_library_adapter_base_entity_SectionEntity_;
		}

		static void n_ConvertHead_Lcom_chad_library_adapter_base_BaseViewHolder_Lcom_chad_library_adapter_base_entity_SectionEntity_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseSectionQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_p1, JniHandleOwnership.DoNotTransfer);
			__this.ConvertHead (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseSectionQuickAdapter']/method[@name='convertHead' and count(parameter)=2 and parameter[1][@type='K'] and parameter[2][@type='T']]"
		[Register ("convertHead", "(Lcom/chad/library/adapter/base/BaseViewHolder;Lcom/chad/library/adapter/base/entity/SectionEntity;)V", "GetConvertHead_Lcom_chad_library_adapter_base_BaseViewHolder_Lcom_chad_library_adapter_base_entity_SectionEntity_Handler")]
		protected abstract void ConvertHead (global::Java.Lang.Object p0, global::Java.Lang.Object p1);

	}

	[global::Android.Runtime.Register ("com/chad/library/adapter/base/BaseSectionQuickAdapter", DoNotGenerateAcw=true)]
	internal partial class BaseSectionQuickAdapterInvoker : BaseSectionQuickAdapter {
		public BaseSectionQuickAdapterInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
		{
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/BaseSectionQuickAdapter", typeof (BaseSectionQuickAdapterInvoker));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseSectionQuickAdapter']/method[@name='convertHead' and count(parameter)=2 and parameter[1][@type='K'] and parameter[2][@type='T']]"
		[Register ("convertHead", "(Lcom/chad/library/adapter/base/BaseViewHolder;Lcom/chad/library/adapter/base/entity/SectionEntity;)V", "GetConvertHead_Lcom_chad_library_adapter_base_BaseViewHolder_Lcom_chad_library_adapter_base_entity_SectionEntity_Handler")]
		protected override unsafe void ConvertHead (global::Java.Lang.Object p0, global::Java.Lang.Object p1)
		{
			const string __id = "convertHead.(Lcom/chad/library/adapter/base/BaseViewHolder;Lcom/chad/library/adapter/base/entity/SectionEntity;)V";
			IntPtr native_p0 = JNIEnv.ToLocalJniHandle (p0);
			IntPtr native_p1 = JNIEnv.ToLocalJniHandle (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='convert' and count(parameter)=2 and parameter[1][@type='K'] and parameter[2][@type='T']]"
		[Register ("convert", "(Lcom/chad/library/adapter/base/BaseViewHolder;Ljava/lang/Object;)V", "GetConvert_Lcom_chad_library_adapter_base_BaseViewHolder_Ljava_lang_Object_Handler")]
		protected override unsafe void Convert (global::Java.Lang.Object p0, global::Java.Lang.Object p1)
		{
			const string __id = "convert.(Lcom/chad/library/adapter/base/BaseViewHolder;Ljava/lang/Object;)V";
			IntPtr native_p0 = JNIEnv.ToLocalJniHandle (p0);
			IntPtr native_p1 = JNIEnv.ToLocalJniHandle (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		[Register ("onBindViewHolder", "(Landroid/support/v7/widget/RecyclerView$ViewHolder;I)V", "GetOnBindViewHolder_Landroid_support_v7_widget_RecyclerView_ViewHolder_IHandler")]
		public override unsafe void OnBindViewHolder (global::Android.Support.V7.Widget.RecyclerView.ViewHolder holder, int position)
		{
			const string __id = "onBindViewHolder.(Landroid/support/v7/widget/RecyclerView$ViewHolder;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((holder == null) ? IntPtr.Zero : ((global::Java.Lang.Object) holder).Handle);
				__args [1] = new JniArgumentValue (position);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (holder);
			}
		}

	}
}
