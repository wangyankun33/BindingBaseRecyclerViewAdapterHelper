//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Chad.Library.Adapter.Base.Util {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.chad.library.adapter.base.util']/class[@name='MultiTypeDelegate']"
	[global::Android.Runtime.Register ("com/chad/library/adapter/base/util/MultiTypeDelegate", DoNotGenerateAcw=true)]
	[global::Java.Interop.JavaTypeParameters (new string [] {"T"})]
	public abstract partial class MultiTypeDelegate : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/util/MultiTypeDelegate", typeof (MultiTypeDelegate));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected MultiTypeDelegate (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.chad.library.adapter.base.util']/class[@name='MultiTypeDelegate']/constructor[@name='MultiTypeDelegate' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe MultiTypeDelegate () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.chad.library.adapter.base.util']/class[@name='MultiTypeDelegate']/constructor[@name='MultiTypeDelegate' and count(parameter)=1 and parameter[1][@type='android.util.SparseIntArray']]"
		[Register (".ctor", "(Landroid/util/SparseIntArray;)V", "")]
		public unsafe MultiTypeDelegate (global::Android.Util.SparseIntArray layouts) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/util/SparseIntArray;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((layouts == null) ? IntPtr.Zero : ((global::Java.Lang.Object) layouts).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (layouts);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.util']/class[@name='MultiTypeDelegate']/method[@name='getDefItemViewType' and count(parameter)=2 and parameter[1][@type='java.util.List&lt;T&gt;'] and parameter[2][@type='int']]"
		[Register ("getDefItemViewType", "(Ljava/util/List;I)I", "")]
		public unsafe int GetDefItemViewType (global::System.Collections.IList data, int position)
		{
			const string __id = "getDefItemViewType.(Ljava/util/List;I)I";
			IntPtr native_data = global::Android.Runtime.JavaList.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (position);
				var __rm = _members.InstanceMethods.InvokeNonvirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
			}
		}

		static Delegate cb_getItemType_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetGetItemType_Ljava_lang_Object_Handler ()
		{
			if (cb_getItemType_Ljava_lang_Object_ == null)
				cb_getItemType_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_I (n_GetItemType_Ljava_lang_Object_));
			return cb_getItemType_Ljava_lang_Object_;
		}

		static int n_GetItemType_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Util.MultiTypeDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_p0, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.GetItemType (p0);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.util']/class[@name='MultiTypeDelegate']/method[@name='getItemType' and count(parameter)=1 and parameter[1][@type='T']]"
		[Register ("getItemType", "(Ljava/lang/Object;)I", "GetGetItemType_Ljava_lang_Object_Handler")]
		protected abstract int GetItemType (global::Java.Lang.Object p0);

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.util']/class[@name='MultiTypeDelegate']/method[@name='getLayoutId' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("getLayoutId", "(I)I", "")]
		public unsafe int GetLayoutId (int viewType)
		{
			const string __id = "getLayoutId.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (viewType);
				var __rm = _members.InstanceMethods.InvokeNonvirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate cb_registerItemType_II;
#pragma warning disable 0169
		static Delegate GetRegisterItemType_IIHandler ()
		{
			if (cb_registerItemType_II == null)
				cb_registerItemType_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_L (n_RegisterItemType_II));
			return cb_registerItemType_II;
		}

		static IntPtr n_RegisterItemType_II (IntPtr jnienv, IntPtr native__this, int type, int layoutResId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Util.MultiTypeDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.RegisterItemType (type, layoutResId));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.util']/class[@name='MultiTypeDelegate']/method[@name='registerItemType' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("registerItemType", "(II)Lcom/chad/library/adapter/base/util/MultiTypeDelegate;", "GetRegisterItemType_IIHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.Util.MultiTypeDelegate RegisterItemType (int type, int layoutResId)
		{
			const string __id = "registerItemType.(II)Lcom/chad/library/adapter/base/util/MultiTypeDelegate;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (type);
				__args [1] = new JniArgumentValue (layoutResId);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Util.MultiTypeDelegate> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_registerItemTypeAutoIncrease_arrayI;
#pragma warning disable 0169
		static Delegate GetRegisterItemTypeAutoIncrease_arrayIHandler ()
		{
			if (cb_registerItemTypeAutoIncrease_arrayI == null)
				cb_registerItemTypeAutoIncrease_arrayI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_RegisterItemTypeAutoIncrease_arrayI));
			return cb_registerItemTypeAutoIncrease_arrayI;
		}

		static IntPtr n_RegisterItemTypeAutoIncrease_arrayI (IntPtr jnienv, IntPtr native__this, IntPtr native_layoutResIds)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Util.MultiTypeDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var layoutResIds = (int[]) JNIEnv.GetArray (native_layoutResIds, JniHandleOwnership.DoNotTransfer, typeof (int));
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.RegisterItemTypeAutoIncrease (layoutResIds));
			if (layoutResIds != null)
				JNIEnv.CopyArray (layoutResIds, native_layoutResIds);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.util']/class[@name='MultiTypeDelegate']/method[@name='registerItemTypeAutoIncrease' and count(parameter)=1 and parameter[1][@type='int...']]"
		[Register ("registerItemTypeAutoIncrease", "([I)Lcom/chad/library/adapter/base/util/MultiTypeDelegate;", "GetRegisterItemTypeAutoIncrease_arrayIHandler")]
		public virtual unsafe global::Com.Chad.Library.Adapter.Base.Util.MultiTypeDelegate RegisterItemTypeAutoIncrease (params int[] layoutResIds)
		{
			const string __id = "registerItemTypeAutoIncrease.([I)Lcom/chad/library/adapter/base/util/MultiTypeDelegate;";
			IntPtr native_layoutResIds = JNIEnv.NewArray (layoutResIds);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_layoutResIds);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Util.MultiTypeDelegate> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				if (layoutResIds != null) {
					JNIEnv.CopyArray (native_layoutResIds, layoutResIds);
					JNIEnv.DeleteLocalRef (native_layoutResIds);
				}
				global::System.GC.KeepAlive (layoutResIds);
			}
		}

	}

	[global::Android.Runtime.Register ("com/chad/library/adapter/base/util/MultiTypeDelegate", DoNotGenerateAcw=true)]
	internal partial class MultiTypeDelegateInvoker : MultiTypeDelegate {
		public MultiTypeDelegateInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
		{
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/util/MultiTypeDelegate", typeof (MultiTypeDelegateInvoker));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.util']/class[@name='MultiTypeDelegate']/method[@name='getItemType' and count(parameter)=1 and parameter[1][@type='T']]"
		[Register ("getItemType", "(Ljava/lang/Object;)I", "GetGetItemType_Ljava_lang_Object_Handler")]
		protected override unsafe int GetItemType (global::Java.Lang.Object p0)
		{
			const string __id = "getItemType.(Ljava/lang/Object;)I";
			IntPtr native_p0 = JNIEnv.ToLocalJniHandle (p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.InstanceMethods.InvokeAbstractInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				global::System.GC.KeepAlive (p0);
			}
		}

	}
}
