//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Chad.Library.Adapter.Base {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']"
	[global::Android.Runtime.Register ("com/chad/library/adapter/base/BaseQuickAdapter", DoNotGenerateAcw=true)]
	[global::Java.Interop.JavaTypeParameters (new string [] {"T", "K extends com.chad.library.adapter.base.BaseViewHolder"})]
	public abstract partial class BaseQuickAdapter : global::Android.Support.V7.Widget.RecyclerView.Adapter {
		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/field[@name='ALPHAIN']"
		[Register ("ALPHAIN")]
		public const int Alphain = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/field[@name='FOOTER_VIEW']"
		[Register ("FOOTER_VIEW")]
		public const int FooterView = (int) 819;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/field[@name='HEADER_VIEW']"
		[Register ("HEADER_VIEW")]
		public const int HeaderView = (int) 273;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/field[@name='LOADING_VIEW']"
		[Register ("LOADING_VIEW")]
		public const int LoadingView = (int) 546;


		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/field[@name='mContext']"
		[Register ("mContext")]
		protected global::Android.Content.Context MContext {
			get {
				const string __id = "mContext.Landroid/content/Context;";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Java.Lang.Object.GetObject<global::Android.Content.Context> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "mContext.Landroid/content/Context;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/field[@name='mData']"
		[Register ("mData")]
		protected global::System.Collections.IList MData {
			get {
				const string __id = "mData.Ljava/util/List;";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Android.Runtime.JavaList.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "mData.Ljava/util/List;";

				IntPtr native_value = global::Android.Runtime.JavaList.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/field[@name='mLayoutInflater']"
		[Register ("mLayoutInflater")]
		protected global::Android.Views.LayoutInflater MLayoutInflater {
			get {
				const string __id = "mLayoutInflater.Landroid/view/LayoutInflater;";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Java.Lang.Object.GetObject<global::Android.Views.LayoutInflater> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "mLayoutInflater.Landroid/view/LayoutInflater;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/field[@name='mLayoutResId']"
		[Register ("mLayoutResId")]
		protected int MLayoutResId {
			get {
				const string __id = "mLayoutResId.I";

				var __v = _members.InstanceFields.GetInt32Value (__id, this);
				return __v;
			}
			set {
				const string __id = "mLayoutResId.I";

				try {
					_members.InstanceFields.SetValue (__id, this, value);
				} finally {
				}
			}
		}

		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/field[@name='SCALEIN']"
		[Register ("SCALEIN")]
		public const int Scalein = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/field[@name='SLIDEIN_BOTTOM']"
		[Register ("SLIDEIN_BOTTOM")]
		public const int SlideinBottom = (int) 3;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/field[@name='SLIDEIN_LEFT']"
		[Register ("SLIDEIN_LEFT")]
		public const int SlideinLeft = (int) 4;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/field[@name='SLIDEIN_RIGHT']"
		[Register ("SLIDEIN_RIGHT")]
		public const int SlideinRight = (int) 5;


		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/field[@name='TAG']"
		[Register ("TAG")]
		protected static string Tag {
			get {
				const string __id = "TAG.Ljava/lang/String;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return JNIEnv.GetString (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.chad.library.adapter.base']/interface[@name='BaseQuickAdapter.AnimationType']"
		[Register ("com/chad/library/adapter/base/BaseQuickAdapter$AnimationType", "", "Com.Chad.Library.Adapter.Base.BaseQuickAdapter/IAnimationTypeInvoker")]
		public partial interface IAnimationType : global::Java.Lang.Annotation.IAnnotation {
		}

		[global::Android.Runtime.Register ("com/chad/library/adapter/base/BaseQuickAdapter$AnimationType", DoNotGenerateAcw=true)]
		internal partial class IAnimationTypeInvoker : global::Java.Lang.Object, IAnimationType {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/BaseQuickAdapter$AnimationType", typeof (IAnimationTypeInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IAnimationType GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IAnimationType> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.chad.library.adapter.base.BaseQuickAdapter.AnimationType'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IAnimationTypeInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_annotationType;
#pragma warning disable 0169
			static Delegate GetAnnotationTypeHandler ()
			{
				if (cb_annotationType == null)
					cb_annotationType = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_AnnotationType));
				return cb_annotationType;
			}

			static IntPtr n_AnnotationType (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IAnimationType> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.ToLocalJniHandle (__this.AnnotationType ());
			}
#pragma warning restore 0169

			IntPtr id_annotationType;
			public unsafe global::Java.Lang.Class AnnotationType ()
			{
				if (id_annotationType == IntPtr.Zero)
					id_annotationType = JNIEnv.GetMethodID (class_ref, "annotationType", "()Ljava/lang/Class;");
				return global::Java.Lang.Object.GetObject<global::Java.Lang.Class> (JNIEnv.CallObjectMethod (((global::Java.Lang.Object) this).Handle, id_annotationType), JniHandleOwnership.TransferLocalRef);
			}

			static Delegate cb_equals_Ljava_lang_Object_;
#pragma warning disable 0169
			static Delegate GetEquals_Ljava_lang_Object_Handler ()
			{
				if (cb_equals_Ljava_lang_Object_ == null)
					cb_equals_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_Equals_Ljava_lang_Object_));
				return cb_equals_Ljava_lang_Object_;
			}

			static bool n_Equals_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_obj)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IAnimationType> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var obj = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_obj, JniHandleOwnership.DoNotTransfer);
				bool __ret = __this.Equals (obj);
				return __ret;
			}
#pragma warning restore 0169

			IntPtr id_equals_Ljava_lang_Object_;
			public unsafe bool Equals (global::Java.Lang.Object obj)
			{
				if (id_equals_Ljava_lang_Object_ == IntPtr.Zero)
					id_equals_Ljava_lang_Object_ = JNIEnv.GetMethodID (class_ref, "equals", "(Ljava/lang/Object;)Z");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue ((obj == null) ? IntPtr.Zero : ((global::Java.Lang.Object) obj).Handle);
				var __ret = JNIEnv.CallBooleanMethod (((global::Java.Lang.Object) this).Handle, id_equals_Ljava_lang_Object_, __args);
				return __ret;
			}

			static Delegate cb_hashCode;
#pragma warning disable 0169
			static Delegate GetGetHashCodeHandler ()
			{
				if (cb_hashCode == null)
					cb_hashCode = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetHashCode));
				return cb_hashCode;
			}

			static int n_GetHashCode (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IAnimationType> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.GetHashCode ();
			}
#pragma warning restore 0169

			IntPtr id_hashCode;
			public unsafe int GetHashCode ()
			{
				if (id_hashCode == IntPtr.Zero)
					id_hashCode = JNIEnv.GetMethodID (class_ref, "hashCode", "()I");
				return JNIEnv.CallIntMethod (((global::Java.Lang.Object) this).Handle, id_hashCode);
			}

			static Delegate cb_toString;
#pragma warning disable 0169
			static Delegate GetToStringHandler ()
			{
				if (cb_toString == null)
					cb_toString = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToString));
				return cb_toString;
			}

			static IntPtr n_ToString (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IAnimationType> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.NewString (__this.ToString ());
			}
#pragma warning restore 0169

			IntPtr id_toString;
			public unsafe string ToString ()
			{
				if (id_toString == IntPtr.Zero)
					id_toString = JNIEnv.GetMethodID (class_ref, "toString", "()Ljava/lang/String;");
				return JNIEnv.GetString (JNIEnv.CallObjectMethod (((global::Java.Lang.Object) this).Handle, id_toString), JniHandleOwnership.TransferLocalRef);
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.chad.library.adapter.base']/interface[@name='BaseQuickAdapter.OnItemChildClickListener']"
		[Register ("com/chad/library/adapter/base/BaseQuickAdapter$OnItemChildClickListener", "", "Com.Chad.Library.Adapter.Base.BaseQuickAdapter/IOnItemChildClickListenerInvoker")]
		public partial interface IOnItemChildClickListener : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/interface[@name='BaseQuickAdapter.OnItemChildClickListener']/method[@name='onItemChildClick' and count(parameter)=3 and parameter[1][@type='com.chad.library.adapter.base.BaseQuickAdapter'] and parameter[2][@type='android.view.View'] and parameter[3][@type='int']]"
			[Register ("onItemChildClick", "(Lcom/chad/library/adapter/base/BaseQuickAdapter;Landroid/view/View;I)V", "GetOnItemChildClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_IHandler:Com.Chad.Library.Adapter.Base.BaseQuickAdapter/IOnItemChildClickListenerInvoker, BindingBaseRecyclerViewAdapterHelper")]
			void OnItemChildClick (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0, global::Android.Views.View p1, int p2);

		}

		[global::Android.Runtime.Register ("com/chad/library/adapter/base/BaseQuickAdapter$OnItemChildClickListener", DoNotGenerateAcw=true)]
		internal partial class IOnItemChildClickListenerInvoker : global::Java.Lang.Object, IOnItemChildClickListener {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/BaseQuickAdapter$OnItemChildClickListener", typeof (IOnItemChildClickListenerInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IOnItemChildClickListener GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IOnItemChildClickListener> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.chad.library.adapter.base.BaseQuickAdapter.OnItemChildClickListener'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IOnItemChildClickListenerInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_onItemChildClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I;
#pragma warning disable 0169
			static Delegate GetOnItemChildClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_IHandler ()
			{
				if (cb_onItemChildClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I == null)
					cb_onItemChildClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLI_V (n_OnItemChildClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I));
				return cb_onItemChildClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I;
			}

			static void n_OnItemChildClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, int p2)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildClickListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var p0 = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (native_p0, JniHandleOwnership.DoNotTransfer);
				var p1 = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_p1, JniHandleOwnership.DoNotTransfer);
				__this.OnItemChildClick (p0, p1, p2);
			}
#pragma warning restore 0169

			IntPtr id_onItemChildClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I;
			public unsafe void OnItemChildClick (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0, global::Android.Views.View p1, int p2)
			{
				if (id_onItemChildClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I == IntPtr.Zero)
					id_onItemChildClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I = JNIEnv.GetMethodID (class_ref, "onItemChildClick", "(Lcom/chad/library/adapter/base/BaseQuickAdapter;Landroid/view/View;I)V");
				JValue* __args = stackalloc JValue [3];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JValue (p2);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onItemChildClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I, __args);
			}

		}

		// event args for com.chad.library.adapter.base.BaseQuickAdapter.OnItemChildClickListener.onItemChildClick
		public partial class ItemChildClickEventArgs : global::System.EventArgs {
			public ItemChildClickEventArgs (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0, global::Android.Views.View p1, int p2)
			{
				this.p0 = p0;
				this.p1 = p1;
				this.p2 = p2;
			}

			global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0;

			public global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter P0 {
				get { return p0; }
			}

			global::Android.Views.View p1;

			public global::Android.Views.View P1 {
				get { return p1; }
			}

			int p2;

			public int P2 {
				get { return p2; }
			}

		}

		[global::Android.Runtime.Register ("mono/com/chad/library/adapter/base/BaseQuickAdapter_OnItemChildClickListenerImplementor")]
		internal sealed partial class IOnItemChildClickListenerImplementor : global::Java.Lang.Object, IOnItemChildClickListener {

			object sender;

			public IOnItemChildClickListenerImplementor (object sender) : base (global::Android.Runtime.JNIEnv.StartCreateInstance ("mono/com/chad/library/adapter/base/BaseQuickAdapter_OnItemChildClickListenerImplementor", "()V"), JniHandleOwnership.TransferLocalRef)
			{
				global::Android.Runtime.JNIEnv.FinishCreateInstance (((global::Java.Lang.Object) this).Handle, "()V");
				this.sender = sender;
			}

			#pragma warning disable 0649
			public EventHandler<ItemChildClickEventArgs> Handler;
			#pragma warning restore 0649

			public void OnItemChildClick (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0, global::Android.Views.View p1, int p2)
			{
				var __h = Handler;
				if (__h != null)
					__h (sender, new ItemChildClickEventArgs (p0, p1, p2));
			}

			internal static bool __IsEmpty (IOnItemChildClickListenerImplementor value)
			{
				return value.Handler == null;
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.chad.library.adapter.base']/interface[@name='BaseQuickAdapter.OnItemChildLongClickListener']"
		[Register ("com/chad/library/adapter/base/BaseQuickAdapter$OnItemChildLongClickListener", "", "Com.Chad.Library.Adapter.Base.BaseQuickAdapter/IOnItemChildLongClickListenerInvoker")]
		public partial interface IOnItemChildLongClickListener : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/interface[@name='BaseQuickAdapter.OnItemChildLongClickListener']/method[@name='onItemChildLongClick' and count(parameter)=3 and parameter[1][@type='com.chad.library.adapter.base.BaseQuickAdapter'] and parameter[2][@type='android.view.View'] and parameter[3][@type='int']]"
			[Register ("onItemChildLongClick", "(Lcom/chad/library/adapter/base/BaseQuickAdapter;Landroid/view/View;I)Z", "GetOnItemChildLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_IHandler:Com.Chad.Library.Adapter.Base.BaseQuickAdapter/IOnItemChildLongClickListenerInvoker, BindingBaseRecyclerViewAdapterHelper")]
			bool OnItemChildLongClick (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0, global::Android.Views.View p1, int p2);

		}

		[global::Android.Runtime.Register ("com/chad/library/adapter/base/BaseQuickAdapter$OnItemChildLongClickListener", DoNotGenerateAcw=true)]
		internal partial class IOnItemChildLongClickListenerInvoker : global::Java.Lang.Object, IOnItemChildLongClickListener {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/BaseQuickAdapter$OnItemChildLongClickListener", typeof (IOnItemChildLongClickListenerInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IOnItemChildLongClickListener GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IOnItemChildLongClickListener> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.chad.library.adapter.base.BaseQuickAdapter.OnItemChildLongClickListener'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IOnItemChildLongClickListenerInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_onItemChildLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I;
#pragma warning disable 0169
			static Delegate GetOnItemChildLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_IHandler ()
			{
				if (cb_onItemChildLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I == null)
					cb_onItemChildLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLI_Z (n_OnItemChildLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I));
				return cb_onItemChildLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I;
			}

			static bool n_OnItemChildLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, int p2)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildLongClickListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var p0 = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (native_p0, JniHandleOwnership.DoNotTransfer);
				var p1 = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_p1, JniHandleOwnership.DoNotTransfer);
				bool __ret = __this.OnItemChildLongClick (p0, p1, p2);
				return __ret;
			}
#pragma warning restore 0169

			IntPtr id_onItemChildLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I;
			public unsafe bool OnItemChildLongClick (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0, global::Android.Views.View p1, int p2)
			{
				if (id_onItemChildLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I == IntPtr.Zero)
					id_onItemChildLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I = JNIEnv.GetMethodID (class_ref, "onItemChildLongClick", "(Lcom/chad/library/adapter/base/BaseQuickAdapter;Landroid/view/View;I)Z");
				JValue* __args = stackalloc JValue [3];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JValue (p2);
				var __ret = JNIEnv.CallBooleanMethod (((global::Java.Lang.Object) this).Handle, id_onItemChildLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I, __args);
				return __ret;
			}

		}

		// event args for com.chad.library.adapter.base.BaseQuickAdapter.OnItemChildLongClickListener.onItemChildLongClick
		public partial class ItemChildLongClickEventArgs : global::System.EventArgs {
			bool handled;

			public bool Handled {
				get { return handled; }
				set { handled = value; }
			}

			public ItemChildLongClickEventArgs (bool handled, global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0, global::Android.Views.View p1, int p2)
			{
				this.handled = handled;
				this.p0 = p0;
				this.p1 = p1;
				this.p2 = p2;
			}

			global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0;

			public global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter P0 {
				get { return p0; }
			}

			global::Android.Views.View p1;

			public global::Android.Views.View P1 {
				get { return p1; }
			}

			int p2;

			public int P2 {
				get { return p2; }
			}

		}

		[global::Android.Runtime.Register ("mono/com/chad/library/adapter/base/BaseQuickAdapter_OnItemChildLongClickListenerImplementor")]
		internal sealed partial class IOnItemChildLongClickListenerImplementor : global::Java.Lang.Object, IOnItemChildLongClickListener {

			object sender;

			public IOnItemChildLongClickListenerImplementor (object sender) : base (global::Android.Runtime.JNIEnv.StartCreateInstance ("mono/com/chad/library/adapter/base/BaseQuickAdapter_OnItemChildLongClickListenerImplementor", "()V"), JniHandleOwnership.TransferLocalRef)
			{
				global::Android.Runtime.JNIEnv.FinishCreateInstance (((global::Java.Lang.Object) this).Handle, "()V");
				this.sender = sender;
			}

			#pragma warning disable 0649
			public EventHandler<ItemChildLongClickEventArgs> Handler;
			#pragma warning restore 0649

			public bool OnItemChildLongClick (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0, global::Android.Views.View p1, int p2)
			{
				var __h = Handler;
				if (__h == null)
					return false;
				var __e = new ItemChildLongClickEventArgs (true, p0, p1, p2);
				__h (sender, __e);
				return __e.Handled;
			}

			internal static bool __IsEmpty (IOnItemChildLongClickListenerImplementor value)
			{
				return value.Handler == null;
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.chad.library.adapter.base']/interface[@name='BaseQuickAdapter.OnItemClickListener']"
		[Register ("com/chad/library/adapter/base/BaseQuickAdapter$OnItemClickListener", "", "Com.Chad.Library.Adapter.Base.BaseQuickAdapter/IOnItemClickListenerInvoker")]
		public partial interface IOnItemClickListener : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/interface[@name='BaseQuickAdapter.OnItemClickListener']/method[@name='onItemClick' and count(parameter)=3 and parameter[1][@type='com.chad.library.adapter.base.BaseQuickAdapter'] and parameter[2][@type='android.view.View'] and parameter[3][@type='int']]"
			[Register ("onItemClick", "(Lcom/chad/library/adapter/base/BaseQuickAdapter;Landroid/view/View;I)V", "GetOnItemClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_IHandler:Com.Chad.Library.Adapter.Base.BaseQuickAdapter/IOnItemClickListenerInvoker, BindingBaseRecyclerViewAdapterHelper")]
			void OnItemClick (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0, global::Android.Views.View p1, int p2);

		}

		[global::Android.Runtime.Register ("com/chad/library/adapter/base/BaseQuickAdapter$OnItemClickListener", DoNotGenerateAcw=true)]
		internal partial class IOnItemClickListenerInvoker : global::Java.Lang.Object, IOnItemClickListener {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/BaseQuickAdapter$OnItemClickListener", typeof (IOnItemClickListenerInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IOnItemClickListener GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IOnItemClickListener> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.chad.library.adapter.base.BaseQuickAdapter.OnItemClickListener'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IOnItemClickListenerInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_onItemClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I;
#pragma warning disable 0169
			static Delegate GetOnItemClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_IHandler ()
			{
				if (cb_onItemClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I == null)
					cb_onItemClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLI_V (n_OnItemClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I));
				return cb_onItemClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I;
			}

			static void n_OnItemClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, int p2)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemClickListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var p0 = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (native_p0, JniHandleOwnership.DoNotTransfer);
				var p1 = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_p1, JniHandleOwnership.DoNotTransfer);
				__this.OnItemClick (p0, p1, p2);
			}
#pragma warning restore 0169

			IntPtr id_onItemClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I;
			public unsafe void OnItemClick (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0, global::Android.Views.View p1, int p2)
			{
				if (id_onItemClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I == IntPtr.Zero)
					id_onItemClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I = JNIEnv.GetMethodID (class_ref, "onItemClick", "(Lcom/chad/library/adapter/base/BaseQuickAdapter;Landroid/view/View;I)V");
				JValue* __args = stackalloc JValue [3];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JValue (p2);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onItemClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I, __args);
			}

		}

		// event args for com.chad.library.adapter.base.BaseQuickAdapter.OnItemClickListener.onItemClick
		public partial class ItemClickEventArgs : global::System.EventArgs {
			public ItemClickEventArgs (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0, global::Android.Views.View p1, int p2)
			{
				this.p0 = p0;
				this.p1 = p1;
				this.p2 = p2;
			}

			global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0;

			public global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter P0 {
				get { return p0; }
			}

			global::Android.Views.View p1;

			public global::Android.Views.View P1 {
				get { return p1; }
			}

			int p2;

			public int P2 {
				get { return p2; }
			}

		}

		[global::Android.Runtime.Register ("mono/com/chad/library/adapter/base/BaseQuickAdapter_OnItemClickListenerImplementor")]
		internal sealed partial class IOnItemClickListenerImplementor : global::Java.Lang.Object, IOnItemClickListener {

			object sender;

			public IOnItemClickListenerImplementor (object sender) : base (global::Android.Runtime.JNIEnv.StartCreateInstance ("mono/com/chad/library/adapter/base/BaseQuickAdapter_OnItemClickListenerImplementor", "()V"), JniHandleOwnership.TransferLocalRef)
			{
				global::Android.Runtime.JNIEnv.FinishCreateInstance (((global::Java.Lang.Object) this).Handle, "()V");
				this.sender = sender;
			}

			#pragma warning disable 0649
			public EventHandler<ItemClickEventArgs> Handler;
			#pragma warning restore 0649

			public void OnItemClick (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0, global::Android.Views.View p1, int p2)
			{
				var __h = Handler;
				if (__h != null)
					__h (sender, new ItemClickEventArgs (p0, p1, p2));
			}

			internal static bool __IsEmpty (IOnItemClickListenerImplementor value)
			{
				return value.Handler == null;
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.chad.library.adapter.base']/interface[@name='BaseQuickAdapter.OnItemLongClickListener']"
		[Register ("com/chad/library/adapter/base/BaseQuickAdapter$OnItemLongClickListener", "", "Com.Chad.Library.Adapter.Base.BaseQuickAdapter/IOnItemLongClickListenerInvoker")]
		public partial interface IOnItemLongClickListener : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/interface[@name='BaseQuickAdapter.OnItemLongClickListener']/method[@name='onItemLongClick' and count(parameter)=3 and parameter[1][@type='com.chad.library.adapter.base.BaseQuickAdapter'] and parameter[2][@type='android.view.View'] and parameter[3][@type='int']]"
			[Register ("onItemLongClick", "(Lcom/chad/library/adapter/base/BaseQuickAdapter;Landroid/view/View;I)Z", "GetOnItemLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_IHandler:Com.Chad.Library.Adapter.Base.BaseQuickAdapter/IOnItemLongClickListenerInvoker, BindingBaseRecyclerViewAdapterHelper")]
			bool OnItemLongClick (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0, global::Android.Views.View p1, int p2);

		}

		[global::Android.Runtime.Register ("com/chad/library/adapter/base/BaseQuickAdapter$OnItemLongClickListener", DoNotGenerateAcw=true)]
		internal partial class IOnItemLongClickListenerInvoker : global::Java.Lang.Object, IOnItemLongClickListener {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/BaseQuickAdapter$OnItemLongClickListener", typeof (IOnItemLongClickListenerInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IOnItemLongClickListener GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IOnItemLongClickListener> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.chad.library.adapter.base.BaseQuickAdapter.OnItemLongClickListener'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IOnItemLongClickListenerInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_onItemLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I;
#pragma warning disable 0169
			static Delegate GetOnItemLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_IHandler ()
			{
				if (cb_onItemLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I == null)
					cb_onItemLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLI_Z (n_OnItemLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I));
				return cb_onItemLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I;
			}

			static bool n_OnItemLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, int p2)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemLongClickListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var p0 = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (native_p0, JniHandleOwnership.DoNotTransfer);
				var p1 = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_p1, JniHandleOwnership.DoNotTransfer);
				bool __ret = __this.OnItemLongClick (p0, p1, p2);
				return __ret;
			}
#pragma warning restore 0169

			IntPtr id_onItemLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I;
			public unsafe bool OnItemLongClick (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0, global::Android.Views.View p1, int p2)
			{
				if (id_onItemLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I == IntPtr.Zero)
					id_onItemLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I = JNIEnv.GetMethodID (class_ref, "onItemLongClick", "(Lcom/chad/library/adapter/base/BaseQuickAdapter;Landroid/view/View;I)Z");
				JValue* __args = stackalloc JValue [3];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JValue (p2);
				var __ret = JNIEnv.CallBooleanMethod (((global::Java.Lang.Object) this).Handle, id_onItemLongClick_Lcom_chad_library_adapter_base_BaseQuickAdapter_Landroid_view_View_I, __args);
				return __ret;
			}

		}

		// event args for com.chad.library.adapter.base.BaseQuickAdapter.OnItemLongClickListener.onItemLongClick
		public partial class ItemLongClickEventArgs : global::System.EventArgs {
			bool handled;

			public bool Handled {
				get { return handled; }
				set { handled = value; }
			}

			public ItemLongClickEventArgs (bool handled, global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0, global::Android.Views.View p1, int p2)
			{
				this.handled = handled;
				this.p0 = p0;
				this.p1 = p1;
				this.p2 = p2;
			}

			global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0;

			public global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter P0 {
				get { return p0; }
			}

			global::Android.Views.View p1;

			public global::Android.Views.View P1 {
				get { return p1; }
			}

			int p2;

			public int P2 {
				get { return p2; }
			}

		}

		[global::Android.Runtime.Register ("mono/com/chad/library/adapter/base/BaseQuickAdapter_OnItemLongClickListenerImplementor")]
		internal sealed partial class IOnItemLongClickListenerImplementor : global::Java.Lang.Object, IOnItemLongClickListener {

			object sender;

			public IOnItemLongClickListenerImplementor (object sender) : base (global::Android.Runtime.JNIEnv.StartCreateInstance ("mono/com/chad/library/adapter/base/BaseQuickAdapter_OnItemLongClickListenerImplementor", "()V"), JniHandleOwnership.TransferLocalRef)
			{
				global::Android.Runtime.JNIEnv.FinishCreateInstance (((global::Java.Lang.Object) this).Handle, "()V");
				this.sender = sender;
			}

			#pragma warning disable 0649
			public EventHandler<ItemLongClickEventArgs> Handler;
			#pragma warning restore 0649

			public bool OnItemLongClick (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter p0, global::Android.Views.View p1, int p2)
			{
				var __h = Handler;
				if (__h == null)
					return false;
				var __e = new ItemLongClickEventArgs (true, p0, p1, p2);
				__h (sender, __e);
				return __e.Handled;
			}

			internal static bool __IsEmpty (IOnItemLongClickListenerImplementor value)
			{
				return value.Handler == null;
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.chad.library.adapter.base']/interface[@name='BaseQuickAdapter.RequestLoadMoreListener']"
		[Register ("com/chad/library/adapter/base/BaseQuickAdapter$RequestLoadMoreListener", "", "Com.Chad.Library.Adapter.Base.BaseQuickAdapter/IRequestLoadMoreListenerInvoker")]
		public partial interface IRequestLoadMoreListener : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/interface[@name='BaseQuickAdapter.RequestLoadMoreListener']/method[@name='onLoadMoreRequested' and count(parameter)=0]"
			[Register ("onLoadMoreRequested", "()V", "GetOnLoadMoreRequestedHandler:Com.Chad.Library.Adapter.Base.BaseQuickAdapter/IRequestLoadMoreListenerInvoker, BindingBaseRecyclerViewAdapterHelper")]
			void OnLoadMoreRequested ();

		}

		[global::Android.Runtime.Register ("com/chad/library/adapter/base/BaseQuickAdapter$RequestLoadMoreListener", DoNotGenerateAcw=true)]
		internal partial class IRequestLoadMoreListenerInvoker : global::Java.Lang.Object, IRequestLoadMoreListener {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/BaseQuickAdapter$RequestLoadMoreListener", typeof (IRequestLoadMoreListenerInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IRequestLoadMoreListener GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IRequestLoadMoreListener> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.chad.library.adapter.base.BaseQuickAdapter.RequestLoadMoreListener'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IRequestLoadMoreListenerInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_onLoadMoreRequested;
#pragma warning disable 0169
			static Delegate GetOnLoadMoreRequestedHandler ()
			{
				if (cb_onLoadMoreRequested == null)
					cb_onLoadMoreRequested = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OnLoadMoreRequested));
				return cb_onLoadMoreRequested;
			}

			static void n_OnLoadMoreRequested (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IRequestLoadMoreListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				__this.OnLoadMoreRequested ();
			}
#pragma warning restore 0169

			IntPtr id_onLoadMoreRequested;
			public unsafe void OnLoadMoreRequested ()
			{
				if (id_onLoadMoreRequested == IntPtr.Zero)
					id_onLoadMoreRequested = JNIEnv.GetMethodID (class_ref, "onLoadMoreRequested", "()V");
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onLoadMoreRequested);
			}

		}

		[global::Android.Runtime.Register ("mono/com/chad/library/adapter/base/BaseQuickAdapter_RequestLoadMoreListenerImplementor")]
		internal sealed partial class IRequestLoadMoreListenerImplementor : global::Java.Lang.Object, IRequestLoadMoreListener {

			object sender;

			public IRequestLoadMoreListenerImplementor (object sender) : base (global::Android.Runtime.JNIEnv.StartCreateInstance ("mono/com/chad/library/adapter/base/BaseQuickAdapter_RequestLoadMoreListenerImplementor", "()V"), JniHandleOwnership.TransferLocalRef)
			{
				global::Android.Runtime.JNIEnv.FinishCreateInstance (((global::Java.Lang.Object) this).Handle, "()V");
				this.sender = sender;
			}

			#pragma warning disable 0649
			public EventHandler Handler;
			#pragma warning restore 0649

			public void OnLoadMoreRequested ()
			{
				var __h = Handler;
				if (__h != null)
					__h (sender, new EventArgs ());
			}

			internal static bool __IsEmpty (IRequestLoadMoreListenerImplementor value)
			{
				return value.Handler == null;
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.chad.library.adapter.base']/interface[@name='BaseQuickAdapter.SpanSizeLookup']"
		[Register ("com/chad/library/adapter/base/BaseQuickAdapter$SpanSizeLookup", "", "Com.Chad.Library.Adapter.Base.BaseQuickAdapter/ISpanSizeLookupInvoker")]
		public partial interface ISpanSizeLookup : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/interface[@name='BaseQuickAdapter.SpanSizeLookup']/method[@name='getSpanSize' and count(parameter)=2 and parameter[1][@type='android.support.v7.widget.GridLayoutManager'] and parameter[2][@type='int']]"
			[Register ("getSpanSize", "(Landroid/support/v7/widget/GridLayoutManager;I)I", "GetGetSpanSize_Landroid_support_v7_widget_GridLayoutManager_IHandler:Com.Chad.Library.Adapter.Base.BaseQuickAdapter/ISpanSizeLookupInvoker, BindingBaseRecyclerViewAdapterHelper")]
			int GetSpanSize (global::Android.Support.V7.Widget.GridLayoutManager p0, int p1);

		}

		[global::Android.Runtime.Register ("com/chad/library/adapter/base/BaseQuickAdapter$SpanSizeLookup", DoNotGenerateAcw=true)]
		internal partial class ISpanSizeLookupInvoker : global::Java.Lang.Object, ISpanSizeLookup {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/BaseQuickAdapter$SpanSizeLookup", typeof (ISpanSizeLookupInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static ISpanSizeLookup GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<ISpanSizeLookup> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.chad.library.adapter.base.BaseQuickAdapter.SpanSizeLookup'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public ISpanSizeLookupInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_getSpanSize_Landroid_support_v7_widget_GridLayoutManager_I;
#pragma warning disable 0169
			static Delegate GetGetSpanSize_Landroid_support_v7_widget_GridLayoutManager_IHandler ()
			{
				if (cb_getSpanSize_Landroid_support_v7_widget_GridLayoutManager_I == null)
					cb_getSpanSize_Landroid_support_v7_widget_GridLayoutManager_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_I (n_GetSpanSize_Landroid_support_v7_widget_GridLayoutManager_I));
				return cb_getSpanSize_Landroid_support_v7_widget_GridLayoutManager_I;
			}

			static int n_GetSpanSize_Landroid_support_v7_widget_GridLayoutManager_I (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.ISpanSizeLookup> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var p0 = global::Java.Lang.Object.GetObject<global::Android.Support.V7.Widget.GridLayoutManager> (native_p0, JniHandleOwnership.DoNotTransfer);
				int __ret = __this.GetSpanSize (p0, p1);
				return __ret;
			}
#pragma warning restore 0169

			IntPtr id_getSpanSize_Landroid_support_v7_widget_GridLayoutManager_I;
			public unsafe int GetSpanSize (global::Android.Support.V7.Widget.GridLayoutManager p0, int p1)
			{
				if (id_getSpanSize_Landroid_support_v7_widget_GridLayoutManager_I == IntPtr.Zero)
					id_getSpanSize_Landroid_support_v7_widget_GridLayoutManager_I = JNIEnv.GetMethodID (class_ref, "getSpanSize", "(Landroid/support/v7/widget/GridLayoutManager;I)I");
				JValue* __args = stackalloc JValue [2];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JValue (p1);
				var __ret = JNIEnv.CallIntMethod (((global::Java.Lang.Object) this).Handle, id_getSpanSize_Landroid_support_v7_widget_GridLayoutManager_I, __args);
				return __ret;
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.chad.library.adapter.base']/interface[@name='BaseQuickAdapter.UpFetchListener']"
		[Register ("com/chad/library/adapter/base/BaseQuickAdapter$UpFetchListener", "", "Com.Chad.Library.Adapter.Base.BaseQuickAdapter/IUpFetchListenerInvoker")]
		public partial interface IUpFetchListener : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/interface[@name='BaseQuickAdapter.UpFetchListener']/method[@name='onUpFetch' and count(parameter)=0]"
			[Register ("onUpFetch", "()V", "GetOnUpFetchHandler:Com.Chad.Library.Adapter.Base.BaseQuickAdapter/IUpFetchListenerInvoker, BindingBaseRecyclerViewAdapterHelper")]
			void OnUpFetch ();

		}

		[global::Android.Runtime.Register ("com/chad/library/adapter/base/BaseQuickAdapter$UpFetchListener", DoNotGenerateAcw=true)]
		internal partial class IUpFetchListenerInvoker : global::Java.Lang.Object, IUpFetchListener {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/BaseQuickAdapter$UpFetchListener", typeof (IUpFetchListenerInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IUpFetchListener GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IUpFetchListener> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.chad.library.adapter.base.BaseQuickAdapter.UpFetchListener'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IUpFetchListenerInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_onUpFetch;
#pragma warning disable 0169
			static Delegate GetOnUpFetchHandler ()
			{
				if (cb_onUpFetch == null)
					cb_onUpFetch = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OnUpFetch));
				return cb_onUpFetch;
			}

			static void n_OnUpFetch (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IUpFetchListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				__this.OnUpFetch ();
			}
#pragma warning restore 0169

			IntPtr id_onUpFetch;
			public unsafe void OnUpFetch ()
			{
				if (id_onUpFetch == IntPtr.Zero)
					id_onUpFetch = JNIEnv.GetMethodID (class_ref, "onUpFetch", "()V");
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onUpFetch);
			}

		}

		[global::Android.Runtime.Register ("mono/com/chad/library/adapter/base/BaseQuickAdapter_UpFetchListenerImplementor")]
		internal sealed partial class IUpFetchListenerImplementor : global::Java.Lang.Object, IUpFetchListener {

			object sender;

			public IUpFetchListenerImplementor (object sender) : base (global::Android.Runtime.JNIEnv.StartCreateInstance ("mono/com/chad/library/adapter/base/BaseQuickAdapter_UpFetchListenerImplementor", "()V"), JniHandleOwnership.TransferLocalRef)
			{
				global::Android.Runtime.JNIEnv.FinishCreateInstance (((global::Java.Lang.Object) this).Handle, "()V");
				this.sender = sender;
			}

			#pragma warning disable 0649
			public EventHandler Handler;
			#pragma warning restore 0649

			public void OnUpFetch ()
			{
				var __h = Handler;
				if (__h != null)
					__h (sender, new EventArgs ());
			}

			internal static bool __IsEmpty (IUpFetchListenerImplementor value)
			{
				return value.Handler == null;
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/BaseQuickAdapter", typeof (BaseQuickAdapter));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected BaseQuickAdapter (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/constructor[@name='BaseQuickAdapter' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register (".ctor", "(I)V", "")]
		public unsafe BaseQuickAdapter (int layoutResId) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(I)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (layoutResId);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/constructor[@name='BaseQuickAdapter' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='java.util.List&lt;T&gt;']]"
		[Register (".ctor", "(ILjava/util/List;)V", "")]
		public unsafe BaseQuickAdapter (int layoutResId, global::System.Collections.IList data) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(ILjava/util/List;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_data = global::Android.Runtime.JavaList.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (layoutResId);
				__args [1] = new JniArgumentValue (native_data);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/constructor[@name='BaseQuickAdapter' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;T&gt;']]"
		[Register (".ctor", "(Ljava/util/List;)V", "")]
		public unsafe BaseQuickAdapter (global::System.Collections.IList data) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/util/List;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_data = global::Android.Runtime.JavaList.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
			}
		}

		static Delegate cb_getData;
#pragma warning disable 0169
		static Delegate GetGetDataHandler ()
		{
			if (cb_getData == null)
				cb_getData = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetData));
			return cb_getData;
		}

		static IntPtr n_GetData (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return global::Android.Runtime.JavaList.ToLocalJniHandle (__this.Data);
		}
#pragma warning restore 0169

		public virtual unsafe global::System.Collections.IList Data {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getData' and count(parameter)=0]"
			[Register ("getData", "()Ljava/util/List;", "GetGetDataHandler")]
			get {
				const string __id = "getData.()Ljava/util/List;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Android.Runtime.JavaList.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getEmptyView;
#pragma warning disable 0169
		static Delegate GetGetEmptyViewHandler ()
		{
			if (cb_getEmptyView == null)
				cb_getEmptyView = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetEmptyView));
			return cb_getEmptyView;
		}

		static IntPtr n_GetEmptyView (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.EmptyView);
		}
#pragma warning restore 0169

		static Delegate cb_setEmptyView_Landroid_view_View_;
#pragma warning disable 0169
		static Delegate GetSetEmptyView_Landroid_view_View_Handler ()
		{
			if (cb_setEmptyView_Landroid_view_View_ == null)
				cb_setEmptyView_Landroid_view_View_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetEmptyView_Landroid_view_View_));
			return cb_setEmptyView_Landroid_view_View_;
		}

		static void n_SetEmptyView_Landroid_view_View_ (IntPtr jnienv, IntPtr native__this, IntPtr native_emptyView)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var emptyView = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_emptyView, JniHandleOwnership.DoNotTransfer);
			__this.EmptyView = emptyView;
		}
#pragma warning restore 0169

		public virtual unsafe global::Android.Views.View EmptyView {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getEmptyView' and count(parameter)=0]"
			[Register ("getEmptyView", "()Landroid/view/View;", "GetGetEmptyViewHandler")]
			get {
				const string __id = "getEmptyView.()Landroid/view/View;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Android.Views.View> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setEmptyView' and count(parameter)=1 and parameter[1][@type='android.view.View']]"
			[Register ("setEmptyView", "(Landroid/view/View;)V", "GetSetEmptyView_Landroid_view_View_Handler")]
			set {
				const string __id = "setEmptyView.(Landroid/view/View;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		static Delegate cb_getEmptyViewCount;
#pragma warning disable 0169
		static Delegate GetGetEmptyViewCountHandler ()
		{
			if (cb_getEmptyViewCount == null)
				cb_getEmptyViewCount = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetEmptyViewCount));
			return cb_getEmptyViewCount;
		}

		static int n_GetEmptyViewCount (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.EmptyViewCount;
		}
#pragma warning restore 0169

		public virtual unsafe int EmptyViewCount {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getEmptyViewCount' and count(parameter)=0]"
			[Register ("getEmptyViewCount", "()I", "GetGetEmptyViewCountHandler")]
			get {
				const string __id = "getEmptyViewCount.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_getFooterLayout;
#pragma warning disable 0169
		static Delegate GetGetFooterLayoutHandler ()
		{
			if (cb_getFooterLayout == null)
				cb_getFooterLayout = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetFooterLayout));
			return cb_getFooterLayout;
		}

		static IntPtr n_GetFooterLayout (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.FooterLayout);
		}
#pragma warning restore 0169

		public virtual unsafe global::Android.Widget.LinearLayout FooterLayout {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getFooterLayout' and count(parameter)=0]"
			[Register ("getFooterLayout", "()Landroid/widget/LinearLayout;", "GetGetFooterLayoutHandler")]
			get {
				const string __id = "getFooterLayout.()Landroid/widget/LinearLayout;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Android.Widget.LinearLayout> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getFooterLayoutCount;
#pragma warning disable 0169
		static Delegate GetGetFooterLayoutCountHandler ()
		{
			if (cb_getFooterLayoutCount == null)
				cb_getFooterLayoutCount = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetFooterLayoutCount));
			return cb_getFooterLayoutCount;
		}

		static int n_GetFooterLayoutCount (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.FooterLayoutCount;
		}
#pragma warning restore 0169

		public virtual unsafe int FooterLayoutCount {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getFooterLayoutCount' and count(parameter)=0]"
			[Register ("getFooterLayoutCount", "()I", "GetGetFooterLayoutCountHandler")]
			get {
				const string __id = "getFooterLayoutCount.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_isFooterViewAsFlow;
#pragma warning disable 0169
		static Delegate GetIsFooterViewAsFlowHandler ()
		{
			if (cb_isFooterViewAsFlow == null)
				cb_isFooterViewAsFlow = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsFooterViewAsFlow));
			return cb_isFooterViewAsFlow;
		}

		static bool n_IsFooterViewAsFlow (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.FooterViewAsFlow;
		}
#pragma warning restore 0169

		static Delegate cb_setFooterViewAsFlow_Z;
#pragma warning disable 0169
		static Delegate GetSetFooterViewAsFlow_ZHandler ()
		{
			if (cb_setFooterViewAsFlow_Z == null)
				cb_setFooterViewAsFlow_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetFooterViewAsFlow_Z));
			return cb_setFooterViewAsFlow_Z;
		}

		static void n_SetFooterViewAsFlow_Z (IntPtr jnienv, IntPtr native__this, bool footerViewAsFlow)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.FooterViewAsFlow = footerViewAsFlow;
		}
#pragma warning restore 0169

		public virtual unsafe bool FooterViewAsFlow {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='isFooterViewAsFlow' and count(parameter)=0]"
			[Register ("isFooterViewAsFlow", "()Z", "GetIsFooterViewAsFlowHandler")]
			get {
				const string __id = "isFooterViewAsFlow.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setFooterViewAsFlow' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setFooterViewAsFlow", "(Z)V", "GetSetFooterViewAsFlow_ZHandler")]
			set {
				const string __id = "setFooterViewAsFlow.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getFooterViewsCount;
#pragma warning disable 0169
		[global::System.Obsolete]
		static Delegate GetGetFooterViewsCountHandler ()
		{
			if (cb_getFooterViewsCount == null)
				cb_getFooterViewsCount = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetFooterViewsCount));
			return cb_getFooterViewsCount;
		}

		[global::System.Obsolete]
		static int n_GetFooterViewsCount (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.FooterViewsCount;
		}
#pragma warning restore 0169

		[global::System.Obsolete (@"deprecated")]
		public virtual unsafe int FooterViewsCount {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getFooterViewsCount' and count(parameter)=0]"
			[Register ("getFooterViewsCount", "()I", "GetGetFooterViewsCountHandler")]
			get {
				const string __id = "getFooterViewsCount.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_getHeaderLayout;
#pragma warning disable 0169
		static Delegate GetGetHeaderLayoutHandler ()
		{
			if (cb_getHeaderLayout == null)
				cb_getHeaderLayout = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetHeaderLayout));
			return cb_getHeaderLayout;
		}

		static IntPtr n_GetHeaderLayout (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.HeaderLayout);
		}
#pragma warning restore 0169

		public virtual unsafe global::Android.Widget.LinearLayout HeaderLayout {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getHeaderLayout' and count(parameter)=0]"
			[Register ("getHeaderLayout", "()Landroid/widget/LinearLayout;", "GetGetHeaderLayoutHandler")]
			get {
				const string __id = "getHeaderLayout.()Landroid/widget/LinearLayout;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Android.Widget.LinearLayout> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getHeaderLayoutCount;
#pragma warning disable 0169
		static Delegate GetGetHeaderLayoutCountHandler ()
		{
			if (cb_getHeaderLayoutCount == null)
				cb_getHeaderLayoutCount = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetHeaderLayoutCount));
			return cb_getHeaderLayoutCount;
		}

		static int n_GetHeaderLayoutCount (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.HeaderLayoutCount;
		}
#pragma warning restore 0169

		public virtual unsafe int HeaderLayoutCount {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getHeaderLayoutCount' and count(parameter)=0]"
			[Register ("getHeaderLayoutCount", "()I", "GetGetHeaderLayoutCountHandler")]
			get {
				const string __id = "getHeaderLayoutCount.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_isHeaderViewAsFlow;
#pragma warning disable 0169
		static Delegate GetIsHeaderViewAsFlowHandler ()
		{
			if (cb_isHeaderViewAsFlow == null)
				cb_isHeaderViewAsFlow = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsHeaderViewAsFlow));
			return cb_isHeaderViewAsFlow;
		}

		static bool n_IsHeaderViewAsFlow (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.HeaderViewAsFlow;
		}
#pragma warning restore 0169

		static Delegate cb_setHeaderViewAsFlow_Z;
#pragma warning disable 0169
		static Delegate GetSetHeaderViewAsFlow_ZHandler ()
		{
			if (cb_setHeaderViewAsFlow_Z == null)
				cb_setHeaderViewAsFlow_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetHeaderViewAsFlow_Z));
			return cb_setHeaderViewAsFlow_Z;
		}

		static void n_SetHeaderViewAsFlow_Z (IntPtr jnienv, IntPtr native__this, bool headerViewAsFlow)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.HeaderViewAsFlow = headerViewAsFlow;
		}
#pragma warning restore 0169

		public virtual unsafe bool HeaderViewAsFlow {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='isHeaderViewAsFlow' and count(parameter)=0]"
			[Register ("isHeaderViewAsFlow", "()Z", "GetIsHeaderViewAsFlowHandler")]
			get {
				const string __id = "isHeaderViewAsFlow.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setHeaderViewAsFlow' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setHeaderViewAsFlow", "(Z)V", "GetSetHeaderViewAsFlow_ZHandler")]
			set {
				const string __id = "setHeaderViewAsFlow.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getHeaderViewsCount;
#pragma warning disable 0169
		[global::System.Obsolete]
		static Delegate GetGetHeaderViewsCountHandler ()
		{
			if (cb_getHeaderViewsCount == null)
				cb_getHeaderViewsCount = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetHeaderViewsCount));
			return cb_getHeaderViewsCount;
		}

		[global::System.Obsolete]
		static int n_GetHeaderViewsCount (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.HeaderViewsCount;
		}
#pragma warning restore 0169

		[global::System.Obsolete (@"deprecated")]
		public virtual unsafe int HeaderViewsCount {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getHeaderViewsCount' and count(parameter)=0]"
			[Register ("getHeaderViewsCount", "()I", "GetGetHeaderViewsCountHandler")]
			get {
				const string __id = "getHeaderViewsCount.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_isLoadMoreEnable;
#pragma warning disable 0169
		static Delegate GetIsLoadMoreEnableHandler ()
		{
			if (cb_isLoadMoreEnable == null)
				cb_isLoadMoreEnable = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsLoadMoreEnable));
			return cb_isLoadMoreEnable;
		}

		static bool n_IsLoadMoreEnable (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.IsLoadMoreEnable;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsLoadMoreEnable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='isLoadMoreEnable' and count(parameter)=0]"
			[Register ("isLoadMoreEnable", "()Z", "GetIsLoadMoreEnableHandler")]
			get {
				const string __id = "isLoadMoreEnable.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_isLoading;
#pragma warning disable 0169
		static Delegate GetIsLoadingHandler ()
		{
			if (cb_isLoading == null)
				cb_isLoading = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsLoading));
			return cb_isLoading;
		}

		static bool n_IsLoading (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.IsLoading;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsLoading {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='isLoading' and count(parameter)=0]"
			[Register ("isLoading", "()Z", "GetIsLoadingHandler")]
			get {
				const string __id = "isLoading.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_getItemCount;
#pragma warning disable 0169
		static Delegate GetGetItemCountHandler ()
		{
			if (cb_getItemCount == null)
				cb_getItemCount = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetItemCount));
			return cb_getItemCount;
		}

		static int n_GetItemCount (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.ItemCount;
		}
#pragma warning restore 0169

		public override unsafe int ItemCount {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getItemCount' and count(parameter)=0]"
			[Register ("getItemCount", "()I", "GetGetItemCountHandler")]
			get {
				const string __id = "getItemCount.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_getLoadMoreViewCount;
#pragma warning disable 0169
		static Delegate GetGetLoadMoreViewCountHandler ()
		{
			if (cb_getLoadMoreViewCount == null)
				cb_getLoadMoreViewCount = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetLoadMoreViewCount));
			return cb_getLoadMoreViewCount;
		}

		static int n_GetLoadMoreViewCount (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.LoadMoreViewCount;
		}
#pragma warning restore 0169

		public virtual unsafe int LoadMoreViewCount {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getLoadMoreViewCount' and count(parameter)=0]"
			[Register ("getLoadMoreViewCount", "()I", "GetGetLoadMoreViewCountHandler")]
			get {
				const string __id = "getLoadMoreViewCount.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_getLoadMoreViewPosition;
#pragma warning disable 0169
		static Delegate GetGetLoadMoreViewPositionHandler ()
		{
			if (cb_getLoadMoreViewPosition == null)
				cb_getLoadMoreViewPosition = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetLoadMoreViewPosition));
			return cb_getLoadMoreViewPosition;
		}

		static int n_GetLoadMoreViewPosition (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.LoadMoreViewPosition;
		}
#pragma warning restore 0169

		public virtual unsafe int LoadMoreViewPosition {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getLoadMoreViewPosition' and count(parameter)=0]"
			[Register ("getLoadMoreViewPosition", "()I", "GetGetLoadMoreViewPositionHandler")]
			get {
				const string __id = "getLoadMoreViewPosition.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_getMultiTypeDelegate;
#pragma warning disable 0169
		static Delegate GetGetMultiTypeDelegateHandler ()
		{
			if (cb_getMultiTypeDelegate == null)
				cb_getMultiTypeDelegate = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMultiTypeDelegate));
			return cb_getMultiTypeDelegate;
		}

		static IntPtr n_GetMultiTypeDelegate (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.MultiTypeDelegate);
		}
#pragma warning restore 0169

		static Delegate cb_setMultiTypeDelegate_Lcom_chad_library_adapter_base_util_MultiTypeDelegate_;
#pragma warning disable 0169
		static Delegate GetSetMultiTypeDelegate_Lcom_chad_library_adapter_base_util_MultiTypeDelegate_Handler ()
		{
			if (cb_setMultiTypeDelegate_Lcom_chad_library_adapter_base_util_MultiTypeDelegate_ == null)
				cb_setMultiTypeDelegate_Lcom_chad_library_adapter_base_util_MultiTypeDelegate_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetMultiTypeDelegate_Lcom_chad_library_adapter_base_util_MultiTypeDelegate_));
			return cb_setMultiTypeDelegate_Lcom_chad_library_adapter_base_util_MultiTypeDelegate_;
		}

		static void n_SetMultiTypeDelegate_Lcom_chad_library_adapter_base_util_MultiTypeDelegate_ (IntPtr jnienv, IntPtr native__this, IntPtr native_multiTypeDelegate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var multiTypeDelegate = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Util.MultiTypeDelegate> (native_multiTypeDelegate, JniHandleOwnership.DoNotTransfer);
			__this.MultiTypeDelegate = multiTypeDelegate;
		}
#pragma warning restore 0169

		public virtual unsafe global::Com.Chad.Library.Adapter.Base.Util.MultiTypeDelegate MultiTypeDelegate {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getMultiTypeDelegate' and count(parameter)=0]"
			[Register ("getMultiTypeDelegate", "()Lcom/chad/library/adapter/base/util/MultiTypeDelegate;", "GetGetMultiTypeDelegateHandler")]
			get {
				const string __id = "getMultiTypeDelegate.()Lcom/chad/library/adapter/base/util/MultiTypeDelegate;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Util.MultiTypeDelegate> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setMultiTypeDelegate' and count(parameter)=1 and parameter[1][@type='com.chad.library.adapter.base.util.MultiTypeDelegate&lt;T&gt;']]"
			[Register ("setMultiTypeDelegate", "(Lcom/chad/library/adapter/base/util/MultiTypeDelegate;)V", "GetSetMultiTypeDelegate_Lcom_chad_library_adapter_base_util_MultiTypeDelegate_Handler")]
			set {
				const string __id = "setMultiTypeDelegate.(Lcom/chad/library/adapter/base/util/MultiTypeDelegate;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		public unsafe global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildClickListener OnItemChildClickListener {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getOnItemChildClickListener' and count(parameter)=0]"
			[Register ("getOnItemChildClickListener", "()Lcom/chad/library/adapter/base/BaseQuickAdapter$OnItemChildClickListener;", "")]
			get {
				const string __id = "getOnItemChildClickListener.()Lcom/chad/library/adapter/base/BaseQuickAdapter$OnItemChildClickListener;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildClickListener> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setOnItemChildClickListener' and count(parameter)=1 and parameter[1][@type='com.chad.library.adapter.base.BaseQuickAdapter.OnItemChildClickListener']]"
			[Register ("setOnItemChildClickListener", "(Lcom/chad/library/adapter/base/BaseQuickAdapter$OnItemChildClickListener;)V", "GetSetOnItemChildClickListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_OnItemChildClickListener_Handler")]
			set {
				const string __id = "setOnItemChildClickListener.(Lcom/chad/library/adapter/base/BaseQuickAdapter$OnItemChildClickListener;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		public unsafe global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildLongClickListener OnItemChildLongClickListener {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getOnItemChildLongClickListener' and count(parameter)=0]"
			[Register ("getOnItemChildLongClickListener", "()Lcom/chad/library/adapter/base/BaseQuickAdapter$OnItemChildLongClickListener;", "")]
			get {
				const string __id = "getOnItemChildLongClickListener.()Lcom/chad/library/adapter/base/BaseQuickAdapter$OnItemChildLongClickListener;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildLongClickListener> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setOnItemChildLongClickListener' and count(parameter)=1 and parameter[1][@type='com.chad.library.adapter.base.BaseQuickAdapter.OnItemChildLongClickListener']]"
			[Register ("setOnItemChildLongClickListener", "(Lcom/chad/library/adapter/base/BaseQuickAdapter$OnItemChildLongClickListener;)V", "GetSetOnItemChildLongClickListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_OnItemChildLongClickListener_Handler")]
			set {
				const string __id = "setOnItemChildLongClickListener.(Lcom/chad/library/adapter/base/BaseQuickAdapter$OnItemChildLongClickListener;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		public unsafe global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemClickListener OnItemClickListener {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getOnItemClickListener' and count(parameter)=0]"
			[Register ("getOnItemClickListener", "()Lcom/chad/library/adapter/base/BaseQuickAdapter$OnItemClickListener;", "")]
			get {
				const string __id = "getOnItemClickListener.()Lcom/chad/library/adapter/base/BaseQuickAdapter$OnItemClickListener;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemClickListener> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setOnItemClickListener' and count(parameter)=1 and parameter[1][@type='com.chad.library.adapter.base.BaseQuickAdapter.OnItemClickListener']]"
			[Register ("setOnItemClickListener", "(Lcom/chad/library/adapter/base/BaseQuickAdapter$OnItemClickListener;)V", "GetSetOnItemClickListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_OnItemClickListener_Handler")]
			set {
				const string __id = "setOnItemClickListener.(Lcom/chad/library/adapter/base/BaseQuickAdapter$OnItemClickListener;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		public unsafe global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemLongClickListener OnItemLongClickListener {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getOnItemLongClickListener' and count(parameter)=0]"
			[Register ("getOnItemLongClickListener", "()Lcom/chad/library/adapter/base/BaseQuickAdapter$OnItemLongClickListener;", "")]
			get {
				const string __id = "getOnItemLongClickListener.()Lcom/chad/library/adapter/base/BaseQuickAdapter$OnItemLongClickListener;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemLongClickListener> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setOnItemLongClickListener' and count(parameter)=1 and parameter[1][@type='com.chad.library.adapter.base.BaseQuickAdapter.OnItemLongClickListener']]"
			[Register ("setOnItemLongClickListener", "(Lcom/chad/library/adapter/base/BaseQuickAdapter$OnItemLongClickListener;)V", "GetSetOnItemLongClickListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_OnItemLongClickListener_Handler")]
			set {
				const string __id = "setOnItemLongClickListener.(Lcom/chad/library/adapter/base/BaseQuickAdapter$OnItemLongClickListener;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		static Delegate cb_getRecyclerView;
#pragma warning disable 0169
		static Delegate GetGetRecyclerViewHandler ()
		{
			if (cb_getRecyclerView == null)
				cb_getRecyclerView = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetRecyclerView));
			return cb_getRecyclerView;
		}

		static IntPtr n_GetRecyclerView (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.RecyclerView);
		}
#pragma warning restore 0169

		protected virtual unsafe global::Android.Support.V7.Widget.RecyclerView RecyclerView {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getRecyclerView' and count(parameter)=0]"
			[Register ("getRecyclerView", "()Landroid/support/v7/widget/RecyclerView;", "GetGetRecyclerViewHandler")]
			get {
				const string __id = "getRecyclerView.()Landroid/support/v7/widget/RecyclerView;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Android.Support.V7.Widget.RecyclerView> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_isUpFetchEnable;
#pragma warning disable 0169
		static Delegate GetIsUpFetchEnableHandler ()
		{
			if (cb_isUpFetchEnable == null)
				cb_isUpFetchEnable = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsUpFetchEnable));
			return cb_isUpFetchEnable;
		}

		static bool n_IsUpFetchEnable (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.UpFetchEnable;
		}
#pragma warning restore 0169

		static Delegate cb_setUpFetchEnable_Z;
#pragma warning disable 0169
		static Delegate GetSetUpFetchEnable_ZHandler ()
		{
			if (cb_setUpFetchEnable_Z == null)
				cb_setUpFetchEnable_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetUpFetchEnable_Z));
			return cb_setUpFetchEnable_Z;
		}

		static void n_SetUpFetchEnable_Z (IntPtr jnienv, IntPtr native__this, bool upFetch)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.UpFetchEnable = upFetch;
		}
#pragma warning restore 0169

		public virtual unsafe bool UpFetchEnable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='isUpFetchEnable' and count(parameter)=0]"
			[Register ("isUpFetchEnable", "()Z", "GetIsUpFetchEnableHandler")]
			get {
				const string __id = "isUpFetchEnable.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setUpFetchEnable' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setUpFetchEnable", "(Z)V", "GetSetUpFetchEnable_ZHandler")]
			set {
				const string __id = "setUpFetchEnable.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_isUpFetching;
#pragma warning disable 0169
		static Delegate GetIsUpFetchingHandler ()
		{
			if (cb_isUpFetching == null)
				cb_isUpFetching = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsUpFetching));
			return cb_isUpFetching;
		}

		static bool n_IsUpFetching (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.UpFetching;
		}
#pragma warning restore 0169

		static Delegate cb_setUpFetching_Z;
#pragma warning disable 0169
		static Delegate GetSetUpFetching_ZHandler ()
		{
			if (cb_setUpFetching_Z == null)
				cb_setUpFetching_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetUpFetching_Z));
			return cb_setUpFetching_Z;
		}

		static void n_SetUpFetching_Z (IntPtr jnienv, IntPtr native__this, bool upFetching)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.UpFetching = upFetching;
		}
#pragma warning restore 0169

		public virtual unsafe bool UpFetching {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='isUpFetching' and count(parameter)=0]"
			[Register ("isUpFetching", "()Z", "GetIsUpFetchingHandler")]
			get {
				const string __id = "isUpFetching.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setUpFetching' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setUpFetching", "(Z)V", "GetSetUpFetching_ZHandler")]
			set {
				const string __id = "setUpFetching.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_add_ILjava_lang_Object_;
#pragma warning disable 0169
		[global::System.Obsolete]
		static Delegate GetAdd_ILjava_lang_Object_Handler ()
		{
			if (cb_add_ILjava_lang_Object_ == null)
				cb_add_ILjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_V (n_Add_ILjava_lang_Object_));
			return cb_add_ILjava_lang_Object_;
		}

		[global::System.Obsolete]
		static void n_Add_ILjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, int position, IntPtr native_item)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var item = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_item, JniHandleOwnership.DoNotTransfer);
			__this.Add (position, item);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='add' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='T']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("add", "(ILjava/lang/Object;)V", "GetAdd_ILjava_lang_Object_Handler")]
		public virtual unsafe void Add (int position, global::Java.Lang.Object item)
		{
			const string __id = "add.(ILjava/lang/Object;)V";
			IntPtr native_item = JNIEnv.ToLocalJniHandle (item);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (position);
				__args [1] = new JniArgumentValue (native_item);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_item);
				global::System.GC.KeepAlive (item);
			}
		}

		static Delegate cb_addData_ILjava_util_Collection_;
#pragma warning disable 0169
		static Delegate GetAddData_ILjava_util_Collection_Handler ()
		{
			if (cb_addData_ILjava_util_Collection_ == null)
				cb_addData_ILjava_util_Collection_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_V (n_AddData_ILjava_util_Collection_));
			return cb_addData_ILjava_util_Collection_;
		}

		static void n_AddData_ILjava_util_Collection_ (IntPtr jnienv, IntPtr native__this, int position, IntPtr native_newData)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var newData = global::Android.Runtime.JavaCollection.FromJniHandle (native_newData, JniHandleOwnership.DoNotTransfer);
			__this.AddData (position, newData);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='addData' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='java.util.Collection&lt;? extends T&gt;']]"
		[Register ("addData", "(ILjava/util/Collection;)V", "GetAddData_ILjava_util_Collection_Handler")]
		public virtual unsafe void AddData (int position, global::System.Collections.ICollection newData)
		{
			const string __id = "addData.(ILjava/util/Collection;)V";
			IntPtr native_newData = global::Android.Runtime.JavaCollection.ToLocalJniHandle (newData);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (position);
				__args [1] = new JniArgumentValue (native_newData);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_newData);
				global::System.GC.KeepAlive (newData);
			}
		}

		static Delegate cb_addData_ILjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetAddData_ILjava_lang_Object_Handler ()
		{
			if (cb_addData_ILjava_lang_Object_ == null)
				cb_addData_ILjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_V (n_AddData_ILjava_lang_Object_));
			return cb_addData_ILjava_lang_Object_;
		}

		static void n_AddData_ILjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, int position, IntPtr native_data)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var data = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddData (position, data);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='addData' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='T']]"
		[Register ("addData", "(ILjava/lang/Object;)V", "GetAddData_ILjava_lang_Object_Handler")]
		public virtual unsafe void AddData (int position, global::Java.Lang.Object data)
		{
			const string __id = "addData.(ILjava/lang/Object;)V";
			IntPtr native_data = JNIEnv.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (position);
				__args [1] = new JniArgumentValue (native_data);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
			}
		}

		static Delegate cb_addData_Ljava_util_Collection_;
#pragma warning disable 0169
		static Delegate GetAddData_Ljava_util_Collection_Handler ()
		{
			if (cb_addData_Ljava_util_Collection_ == null)
				cb_addData_Ljava_util_Collection_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AddData_Ljava_util_Collection_));
			return cb_addData_Ljava_util_Collection_;
		}

		static void n_AddData_Ljava_util_Collection_ (IntPtr jnienv, IntPtr native__this, IntPtr native_newData)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var newData = global::Android.Runtime.JavaCollection.FromJniHandle (native_newData, JniHandleOwnership.DoNotTransfer);
			__this.AddData (newData);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='addData' and count(parameter)=1 and parameter[1][@type='java.util.Collection&lt;? extends T&gt;']]"
		[Register ("addData", "(Ljava/util/Collection;)V", "GetAddData_Ljava_util_Collection_Handler")]
		public virtual unsafe void AddData (global::System.Collections.ICollection newData)
		{
			const string __id = "addData.(Ljava/util/Collection;)V";
			IntPtr native_newData = global::Android.Runtime.JavaCollection.ToLocalJniHandle (newData);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_newData);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_newData);
				global::System.GC.KeepAlive (newData);
			}
		}

		static Delegate cb_addData_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetAddData_Ljava_lang_Object_Handler ()
		{
			if (cb_addData_Ljava_lang_Object_ == null)
				cb_addData_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AddData_Ljava_lang_Object_));
			return cb_addData_Ljava_lang_Object_;
		}

		static void n_AddData_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_data)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var data = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddData (data);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='addData' and count(parameter)=1 and parameter[1][@type='T']]"
		[Register ("addData", "(Ljava/lang/Object;)V", "GetAddData_Ljava_lang_Object_Handler")]
		public virtual unsafe void AddData (global::Java.Lang.Object data)
		{
			const string __id = "addData.(Ljava/lang/Object;)V";
			IntPtr native_data = JNIEnv.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
			}
		}

		static Delegate cb_addFooterView_Landroid_view_View_;
#pragma warning disable 0169
		static Delegate GetAddFooterView_Landroid_view_View_Handler ()
		{
			if (cb_addFooterView_Landroid_view_View_ == null)
				cb_addFooterView_Landroid_view_View_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_I (n_AddFooterView_Landroid_view_View_));
			return cb_addFooterView_Landroid_view_View_;
		}

		static int n_AddFooterView_Landroid_view_View_ (IntPtr jnienv, IntPtr native__this, IntPtr native_footer)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var footer = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_footer, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.AddFooterView (footer);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='addFooterView' and count(parameter)=1 and parameter[1][@type='android.view.View']]"
		[Register ("addFooterView", "(Landroid/view/View;)I", "GetAddFooterView_Landroid_view_View_Handler")]
		public virtual unsafe int AddFooterView (global::Android.Views.View footer)
		{
			const string __id = "addFooterView.(Landroid/view/View;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((footer == null) ? IntPtr.Zero : ((global::Java.Lang.Object) footer).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (footer);
			}
		}

		static Delegate cb_addFooterView_Landroid_view_View_I;
#pragma warning disable 0169
		static Delegate GetAddFooterView_Landroid_view_View_IHandler ()
		{
			if (cb_addFooterView_Landroid_view_View_I == null)
				cb_addFooterView_Landroid_view_View_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_I (n_AddFooterView_Landroid_view_View_I));
			return cb_addFooterView_Landroid_view_View_I;
		}

		static int n_AddFooterView_Landroid_view_View_I (IntPtr jnienv, IntPtr native__this, IntPtr native_footer, int index)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var footer = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_footer, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.AddFooterView (footer, index);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='addFooterView' and count(parameter)=2 and parameter[1][@type='android.view.View'] and parameter[2][@type='int']]"
		[Register ("addFooterView", "(Landroid/view/View;I)I", "GetAddFooterView_Landroid_view_View_IHandler")]
		public virtual unsafe int AddFooterView (global::Android.Views.View footer, int index)
		{
			const string __id = "addFooterView.(Landroid/view/View;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((footer == null) ? IntPtr.Zero : ((global::Java.Lang.Object) footer).Handle);
				__args [1] = new JniArgumentValue (index);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (footer);
			}
		}

		static Delegate cb_addFooterView_Landroid_view_View_II;
#pragma warning disable 0169
		static Delegate GetAddFooterView_Landroid_view_View_IIHandler ()
		{
			if (cb_addFooterView_Landroid_view_View_II == null)
				cb_addFooterView_Landroid_view_View_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLII_I (n_AddFooterView_Landroid_view_View_II));
			return cb_addFooterView_Landroid_view_View_II;
		}

		static int n_AddFooterView_Landroid_view_View_II (IntPtr jnienv, IntPtr native__this, IntPtr native_footer, int index, int orientation)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var footer = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_footer, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.AddFooterView (footer, index, orientation);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='addFooterView' and count(parameter)=3 and parameter[1][@type='android.view.View'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("addFooterView", "(Landroid/view/View;II)I", "GetAddFooterView_Landroid_view_View_IIHandler")]
		public virtual unsafe int AddFooterView (global::Android.Views.View footer, int index, int orientation)
		{
			const string __id = "addFooterView.(Landroid/view/View;II)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((footer == null) ? IntPtr.Zero : ((global::Java.Lang.Object) footer).Handle);
				__args [1] = new JniArgumentValue (index);
				__args [2] = new JniArgumentValue (orientation);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (footer);
			}
		}

		static Delegate cb_addHeaderView_Landroid_view_View_;
#pragma warning disable 0169
		static Delegate GetAddHeaderView_Landroid_view_View_Handler ()
		{
			if (cb_addHeaderView_Landroid_view_View_ == null)
				cb_addHeaderView_Landroid_view_View_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_I (n_AddHeaderView_Landroid_view_View_));
			return cb_addHeaderView_Landroid_view_View_;
		}

		static int n_AddHeaderView_Landroid_view_View_ (IntPtr jnienv, IntPtr native__this, IntPtr native_header)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var header = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_header, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.AddHeaderView (header);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='addHeaderView' and count(parameter)=1 and parameter[1][@type='android.view.View']]"
		[Register ("addHeaderView", "(Landroid/view/View;)I", "GetAddHeaderView_Landroid_view_View_Handler")]
		public virtual unsafe int AddHeaderView (global::Android.Views.View header)
		{
			const string __id = "addHeaderView.(Landroid/view/View;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((header == null) ? IntPtr.Zero : ((global::Java.Lang.Object) header).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (header);
			}
		}

		static Delegate cb_addHeaderView_Landroid_view_View_I;
#pragma warning disable 0169
		static Delegate GetAddHeaderView_Landroid_view_View_IHandler ()
		{
			if (cb_addHeaderView_Landroid_view_View_I == null)
				cb_addHeaderView_Landroid_view_View_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_I (n_AddHeaderView_Landroid_view_View_I));
			return cb_addHeaderView_Landroid_view_View_I;
		}

		static int n_AddHeaderView_Landroid_view_View_I (IntPtr jnienv, IntPtr native__this, IntPtr native_header, int index)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var header = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_header, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.AddHeaderView (header, index);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='addHeaderView' and count(parameter)=2 and parameter[1][@type='android.view.View'] and parameter[2][@type='int']]"
		[Register ("addHeaderView", "(Landroid/view/View;I)I", "GetAddHeaderView_Landroid_view_View_IHandler")]
		public virtual unsafe int AddHeaderView (global::Android.Views.View header, int index)
		{
			const string __id = "addHeaderView.(Landroid/view/View;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((header == null) ? IntPtr.Zero : ((global::Java.Lang.Object) header).Handle);
				__args [1] = new JniArgumentValue (index);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (header);
			}
		}

		static Delegate cb_addHeaderView_Landroid_view_View_II;
#pragma warning disable 0169
		static Delegate GetAddHeaderView_Landroid_view_View_IIHandler ()
		{
			if (cb_addHeaderView_Landroid_view_View_II == null)
				cb_addHeaderView_Landroid_view_View_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLII_I (n_AddHeaderView_Landroid_view_View_II));
			return cb_addHeaderView_Landroid_view_View_II;
		}

		static int n_AddHeaderView_Landroid_view_View_II (IntPtr jnienv, IntPtr native__this, IntPtr native_header, int index, int orientation)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var header = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_header, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.AddHeaderView (header, index, orientation);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='addHeaderView' and count(parameter)=3 and parameter[1][@type='android.view.View'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("addHeaderView", "(Landroid/view/View;II)I", "GetAddHeaderView_Landroid_view_View_IIHandler")]
		public virtual unsafe int AddHeaderView (global::Android.Views.View header, int index, int orientation)
		{
			const string __id = "addHeaderView.(Landroid/view/View;II)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((header == null) ? IntPtr.Zero : ((global::Java.Lang.Object) header).Handle);
				__args [1] = new JniArgumentValue (index);
				__args [2] = new JniArgumentValue (orientation);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (header);
			}
		}

		static Delegate cb_bindToRecyclerView_Landroid_support_v7_widget_RecyclerView_;
#pragma warning disable 0169
		static Delegate GetBindToRecyclerView_Landroid_support_v7_widget_RecyclerView_Handler ()
		{
			if (cb_bindToRecyclerView_Landroid_support_v7_widget_RecyclerView_ == null)
				cb_bindToRecyclerView_Landroid_support_v7_widget_RecyclerView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_BindToRecyclerView_Landroid_support_v7_widget_RecyclerView_));
			return cb_bindToRecyclerView_Landroid_support_v7_widget_RecyclerView_;
		}

		static void n_BindToRecyclerView_Landroid_support_v7_widget_RecyclerView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_recyclerView)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var recyclerView = global::Java.Lang.Object.GetObject<global::Android.Support.V7.Widget.RecyclerView> (native_recyclerView, JniHandleOwnership.DoNotTransfer);
			__this.BindToRecyclerView (recyclerView);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='bindToRecyclerView' and count(parameter)=1 and parameter[1][@type='android.support.v7.widget.RecyclerView']]"
		[Register ("bindToRecyclerView", "(Landroid/support/v7/widget/RecyclerView;)V", "GetBindToRecyclerView_Landroid_support_v7_widget_RecyclerView_Handler")]
		public virtual unsafe void BindToRecyclerView (global::Android.Support.V7.Widget.RecyclerView recyclerView)
		{
			const string __id = "bindToRecyclerView.(Landroid/support/v7/widget/RecyclerView;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((recyclerView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) recyclerView).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (recyclerView);
			}
		}

		static Delegate cb_collapse_I;
#pragma warning disable 0169
		static Delegate GetCollapse_IHandler ()
		{
			if (cb_collapse_I == null)
				cb_collapse_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_I (n_Collapse_I));
			return cb_collapse_I;
		}

		static int n_Collapse_I (IntPtr jnienv, IntPtr native__this, int position)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.Collapse (position);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='collapse' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("collapse", "(I)I", "GetCollapse_IHandler")]
		public virtual unsafe int Collapse (int position)
		{
			const string __id = "collapse.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (position);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate cb_collapse_IZ;
#pragma warning disable 0169
		static Delegate GetCollapse_IZHandler ()
		{
			if (cb_collapse_IZ == null)
				cb_collapse_IZ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIZ_I (n_Collapse_IZ));
			return cb_collapse_IZ;
		}

		static int n_Collapse_IZ (IntPtr jnienv, IntPtr native__this, int position, bool animate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.Collapse (position, animate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='collapse' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='boolean']]"
		[Register ("collapse", "(IZ)I", "GetCollapse_IZHandler")]
		public virtual unsafe int Collapse (int position, bool animate)
		{
			const string __id = "collapse.(IZ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (position);
				__args [1] = new JniArgumentValue (animate);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate cb_collapse_IZZ;
#pragma warning disable 0169
		static Delegate GetCollapse_IZZHandler ()
		{
			if (cb_collapse_IZZ == null)
				cb_collapse_IZZ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIZZ_I (n_Collapse_IZZ));
			return cb_collapse_IZZ;
		}

		static int n_Collapse_IZZ (IntPtr jnienv, IntPtr native__this, int position, bool animate, bool notify)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.Collapse (position, animate, notify);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='collapse' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='boolean'] and parameter[3][@type='boolean']]"
		[Register ("collapse", "(IZZ)I", "GetCollapse_IZZHandler")]
		public virtual unsafe int Collapse (int position, bool animate, bool notify)
		{
			const string __id = "collapse.(IZZ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (position);
				__args [1] = new JniArgumentValue (animate);
				__args [2] = new JniArgumentValue (notify);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate cb_convert_Lcom_chad_library_adapter_base_BaseViewHolder_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetConvert_Lcom_chad_library_adapter_base_BaseViewHolder_Ljava_lang_Object_Handler ()
		{
			if (cb_convert_Lcom_chad_library_adapter_base_BaseViewHolder_Ljava_lang_Object_ == null)
				cb_convert_Lcom_chad_library_adapter_base_BaseViewHolder_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_Convert_Lcom_chad_library_adapter_base_BaseViewHolder_Ljava_lang_Object_));
			return cb_convert_Lcom_chad_library_adapter_base_BaseViewHolder_Ljava_lang_Object_;
		}

		static void n_Convert_Lcom_chad_library_adapter_base_BaseViewHolder_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_p1, JniHandleOwnership.DoNotTransfer);
			__this.Convert (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='convert' and count(parameter)=2 and parameter[1][@type='K'] and parameter[2][@type='T']]"
		[Register ("convert", "(Lcom/chad/library/adapter/base/BaseViewHolder;Ljava/lang/Object;)V", "GetConvert_Lcom_chad_library_adapter_base_BaseViewHolder_Ljava_lang_Object_Handler")]
		protected abstract void Convert (global::Java.Lang.Object p0, global::Java.Lang.Object p1);

		static Delegate cb_createBaseViewHolder_Landroid_view_View_;
#pragma warning disable 0169
		static Delegate GetCreateBaseViewHolder_Landroid_view_View_Handler ()
		{
			if (cb_createBaseViewHolder_Landroid_view_View_ == null)
				cb_createBaseViewHolder_Landroid_view_View_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_CreateBaseViewHolder_Landroid_view_View_));
			return cb_createBaseViewHolder_Landroid_view_View_;
		}

		static IntPtr n_CreateBaseViewHolder_Landroid_view_View_ (IntPtr jnienv, IntPtr native__this, IntPtr native_view)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var view = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_view, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.CreateBaseViewHolder (view));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='createBaseViewHolder' and count(parameter)=1 and parameter[1][@type='android.view.View']]"
		[Register ("createBaseViewHolder", "(Landroid/view/View;)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetCreateBaseViewHolder_Landroid_view_View_Handler")]
		protected virtual unsafe global::Java.Lang.Object CreateBaseViewHolder (global::Android.Views.View view)
		{
			const string __id = "createBaseViewHolder.(Landroid/view/View;)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((view == null) ? IntPtr.Zero : ((global::Java.Lang.Object) view).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Java.Lang.Object) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (view);
			}
		}

		static Delegate cb_createBaseViewHolder_Landroid_view_ViewGroup_I;
#pragma warning disable 0169
		static Delegate GetCreateBaseViewHolder_Landroid_view_ViewGroup_IHandler ()
		{
			if (cb_createBaseViewHolder_Landroid_view_ViewGroup_I == null)
				cb_createBaseViewHolder_Landroid_view_ViewGroup_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_L (n_CreateBaseViewHolder_Landroid_view_ViewGroup_I));
			return cb_createBaseViewHolder_Landroid_view_ViewGroup_I;
		}

		static IntPtr n_CreateBaseViewHolder_Landroid_view_ViewGroup_I (IntPtr jnienv, IntPtr native__this, IntPtr native_parent, int layoutResId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var parent = global::Java.Lang.Object.GetObject<global::Android.Views.ViewGroup> (native_parent, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.CreateBaseViewHolder (parent, layoutResId));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='createBaseViewHolder' and count(parameter)=2 and parameter[1][@type='android.view.ViewGroup'] and parameter[2][@type='int']]"
		[Register ("createBaseViewHolder", "(Landroid/view/ViewGroup;I)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetCreateBaseViewHolder_Landroid_view_ViewGroup_IHandler")]
		protected virtual unsafe global::Java.Lang.Object CreateBaseViewHolder (global::Android.Views.ViewGroup parent, int layoutResId)
		{
			const string __id = "createBaseViewHolder.(Landroid/view/ViewGroup;I)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((parent == null) ? IntPtr.Zero : ((global::Java.Lang.Object) parent).Handle);
				__args [1] = new JniArgumentValue (layoutResId);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Java.Lang.Object) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (parent);
			}
		}

		static Delegate cb_disableLoadMoreIfNotFullPage;
#pragma warning disable 0169
		static Delegate GetDisableLoadMoreIfNotFullPageHandler ()
		{
			if (cb_disableLoadMoreIfNotFullPage == null)
				cb_disableLoadMoreIfNotFullPage = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_DisableLoadMoreIfNotFullPage));
			return cb_disableLoadMoreIfNotFullPage;
		}

		static void n_DisableLoadMoreIfNotFullPage (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.DisableLoadMoreIfNotFullPage ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='disableLoadMoreIfNotFullPage' and count(parameter)=0]"
		[Register ("disableLoadMoreIfNotFullPage", "()V", "GetDisableLoadMoreIfNotFullPageHandler")]
		public virtual unsafe void DisableLoadMoreIfNotFullPage ()
		{
			const string __id = "disableLoadMoreIfNotFullPage.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_disableLoadMoreIfNotFullPage_Landroid_support_v7_widget_RecyclerView_;
#pragma warning disable 0169
		static Delegate GetDisableLoadMoreIfNotFullPage_Landroid_support_v7_widget_RecyclerView_Handler ()
		{
			if (cb_disableLoadMoreIfNotFullPage_Landroid_support_v7_widget_RecyclerView_ == null)
				cb_disableLoadMoreIfNotFullPage_Landroid_support_v7_widget_RecyclerView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_DisableLoadMoreIfNotFullPage_Landroid_support_v7_widget_RecyclerView_));
			return cb_disableLoadMoreIfNotFullPage_Landroid_support_v7_widget_RecyclerView_;
		}

		static void n_DisableLoadMoreIfNotFullPage_Landroid_support_v7_widget_RecyclerView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_recyclerView)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var recyclerView = global::Java.Lang.Object.GetObject<global::Android.Support.V7.Widget.RecyclerView> (native_recyclerView, JniHandleOwnership.DoNotTransfer);
			__this.DisableLoadMoreIfNotFullPage (recyclerView);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='disableLoadMoreIfNotFullPage' and count(parameter)=1 and parameter[1][@type='android.support.v7.widget.RecyclerView']]"
		[Register ("disableLoadMoreIfNotFullPage", "(Landroid/support/v7/widget/RecyclerView;)V", "GetDisableLoadMoreIfNotFullPage_Landroid_support_v7_widget_RecyclerView_Handler")]
		public virtual unsafe void DisableLoadMoreIfNotFullPage (global::Android.Support.V7.Widget.RecyclerView recyclerView)
		{
			const string __id = "disableLoadMoreIfNotFullPage.(Landroid/support/v7/widget/RecyclerView;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((recyclerView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) recyclerView).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (recyclerView);
			}
		}

		static Delegate cb_enableLoadMoreEndClick_Z;
#pragma warning disable 0169
		static Delegate GetEnableLoadMoreEndClick_ZHandler ()
		{
			if (cb_enableLoadMoreEndClick_Z == null)
				cb_enableLoadMoreEndClick_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_EnableLoadMoreEndClick_Z));
			return cb_enableLoadMoreEndClick_Z;
		}

		static void n_EnableLoadMoreEndClick_Z (IntPtr jnienv, IntPtr native__this, bool enable)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.EnableLoadMoreEndClick (enable);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='enableLoadMoreEndClick' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("enableLoadMoreEndClick", "(Z)V", "GetEnableLoadMoreEndClick_ZHandler")]
		public virtual unsafe void EnableLoadMoreEndClick (bool enable)
		{
			const string __id = "enableLoadMoreEndClick.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (enable);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_expand_I;
#pragma warning disable 0169
		static Delegate GetExpand_IHandler ()
		{
			if (cb_expand_I == null)
				cb_expand_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_I (n_Expand_I));
			return cb_expand_I;
		}

		static int n_Expand_I (IntPtr jnienv, IntPtr native__this, int position)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.Expand (position);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='expand' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("expand", "(I)I", "GetExpand_IHandler")]
		public virtual unsafe int Expand (int position)
		{
			const string __id = "expand.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (position);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate cb_expand_IZ;
#pragma warning disable 0169
		static Delegate GetExpand_IZHandler ()
		{
			if (cb_expand_IZ == null)
				cb_expand_IZ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIZ_I (n_Expand_IZ));
			return cb_expand_IZ;
		}

		static int n_Expand_IZ (IntPtr jnienv, IntPtr native__this, int position, bool animate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.Expand (position, animate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='expand' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='boolean']]"
		[Register ("expand", "(IZ)I", "GetExpand_IZHandler")]
		public virtual unsafe int Expand (int position, bool animate)
		{
			const string __id = "expand.(IZ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (position);
				__args [1] = new JniArgumentValue (animate);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate cb_expand_IZZ;
#pragma warning disable 0169
		static Delegate GetExpand_IZZHandler ()
		{
			if (cb_expand_IZZ == null)
				cb_expand_IZZ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIZZ_I (n_Expand_IZZ));
			return cb_expand_IZZ;
		}

		static int n_Expand_IZZ (IntPtr jnienv, IntPtr native__this, int position, bool animate, bool shouldNotify)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.Expand (position, animate, shouldNotify);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='expand' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='boolean'] and parameter[3][@type='boolean']]"
		[Register ("expand", "(IZZ)I", "GetExpand_IZZHandler")]
		public virtual unsafe int Expand (int position, bool animate, bool shouldNotify)
		{
			const string __id = "expand.(IZZ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (position);
				__args [1] = new JniArgumentValue (animate);
				__args [2] = new JniArgumentValue (shouldNotify);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate cb_expandAll;
#pragma warning disable 0169
		static Delegate GetExpandAllHandler ()
		{
			if (cb_expandAll == null)
				cb_expandAll = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_ExpandAll));
			return cb_expandAll;
		}

		static void n_ExpandAll (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ExpandAll ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='expandAll' and count(parameter)=0]"
		[Register ("expandAll", "()V", "GetExpandAllHandler")]
		public virtual unsafe void ExpandAll ()
		{
			const string __id = "expandAll.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_expandAll_IZ;
#pragma warning disable 0169
		static Delegate GetExpandAll_IZHandler ()
		{
			if (cb_expandAll_IZ == null)
				cb_expandAll_IZ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIZ_I (n_ExpandAll_IZ));
			return cb_expandAll_IZ;
		}

		static int n_ExpandAll_IZ (IntPtr jnienv, IntPtr native__this, int position, bool init)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.ExpandAll (position, init);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='expandAll' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='boolean']]"
		[Register ("expandAll", "(IZ)I", "GetExpandAll_IZHandler")]
		public virtual unsafe int ExpandAll (int position, bool init)
		{
			const string __id = "expandAll.(IZ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (position);
				__args [1] = new JniArgumentValue (init);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate cb_expandAll_IZZ;
#pragma warning disable 0169
		static Delegate GetExpandAll_IZZHandler ()
		{
			if (cb_expandAll_IZZ == null)
				cb_expandAll_IZZ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIZZ_I (n_ExpandAll_IZZ));
			return cb_expandAll_IZZ;
		}

		static int n_ExpandAll_IZZ (IntPtr jnienv, IntPtr native__this, int position, bool animate, bool notify)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.ExpandAll (position, animate, notify);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='expandAll' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='boolean'] and parameter[3][@type='boolean']]"
		[Register ("expandAll", "(IZZ)I", "GetExpandAll_IZZHandler")]
		public virtual unsafe int ExpandAll (int position, bool animate, bool notify)
		{
			const string __id = "expandAll.(IZZ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (position);
				__args [1] = new JniArgumentValue (animate);
				__args [2] = new JniArgumentValue (notify);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate cb_getDefItemViewType_I;
#pragma warning disable 0169
		static Delegate GetGetDefItemViewType_IHandler ()
		{
			if (cb_getDefItemViewType_I == null)
				cb_getDefItemViewType_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_I (n_GetDefItemViewType_I));
			return cb_getDefItemViewType_I;
		}

		static int n_GetDefItemViewType_I (IntPtr jnienv, IntPtr native__this, int position)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.GetDefItemViewType (position);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getDefItemViewType' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("getDefItemViewType", "(I)I", "GetGetDefItemViewType_IHandler")]
		protected virtual unsafe int GetDefItemViewType (int position)
		{
			const string __id = "getDefItemViewType.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (position);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate cb_getItem_I;
#pragma warning disable 0169
		static Delegate GetGetItem_IHandler ()
		{
			if (cb_getItem_I == null)
				cb_getItem_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_L (n_GetItem_I));
			return cb_getItem_I;
		}

		static IntPtr n_GetItem_I (IntPtr jnienv, IntPtr native__this, int position)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.GetItem (position));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getItem' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("getItem", "(I)Ljava/lang/Object;", "GetGetItem_IHandler")]
		public virtual unsafe global::Java.Lang.Object GetItem (int position)
		{
			const string __id = "getItem.(I)Ljava/lang/Object;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (position);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Java.Lang.Object) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_getItemView_ILandroid_view_ViewGroup_;
#pragma warning disable 0169
		static Delegate GetGetItemView_ILandroid_view_ViewGroup_Handler ()
		{
			if (cb_getItemView_ILandroid_view_ViewGroup_ == null)
				cb_getItemView_ILandroid_view_ViewGroup_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_L (n_GetItemView_ILandroid_view_ViewGroup_));
			return cb_getItemView_ILandroid_view_ViewGroup_;
		}

		static IntPtr n_GetItemView_ILandroid_view_ViewGroup_ (IntPtr jnienv, IntPtr native__this, int layoutResId, IntPtr native_parent)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var parent = global::Java.Lang.Object.GetObject<global::Android.Views.ViewGroup> (native_parent, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.GetItemView (layoutResId, parent));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getItemView' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='android.view.ViewGroup']]"
		[Register ("getItemView", "(ILandroid/view/ViewGroup;)Landroid/view/View;", "GetGetItemView_ILandroid_view_ViewGroup_Handler")]
		protected virtual unsafe global::Android.Views.View GetItemView (int layoutResId, global::Android.Views.ViewGroup parent)
		{
			const string __id = "getItemView.(ILandroid/view/ViewGroup;)Landroid/view/View;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (layoutResId);
				__args [1] = new JniArgumentValue ((parent == null) ? IntPtr.Zero : ((global::Java.Lang.Object) parent).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Android.Views.View> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (parent);
			}
		}

		static Delegate cb_getParentPosition_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetGetParentPosition_Ljava_lang_Object_Handler ()
		{
			if (cb_getParentPosition_Ljava_lang_Object_ == null)
				cb_getParentPosition_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_I (n_GetParentPosition_Ljava_lang_Object_));
			return cb_getParentPosition_Ljava_lang_Object_;
		}

		static int n_GetParentPosition_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_item)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var item = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_item, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.GetParentPosition (item);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getParentPosition' and count(parameter)=1 and parameter[1][@type='T']]"
		[Register ("getParentPosition", "(Ljava/lang/Object;)I", "GetGetParentPosition_Ljava_lang_Object_Handler")]
		public virtual unsafe int GetParentPosition (global::Java.Lang.Object item)
		{
			const string __id = "getParentPosition.(Ljava/lang/Object;)I";
			IntPtr native_item = JNIEnv.ToLocalJniHandle (item);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_item);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_item);
				global::System.GC.KeepAlive (item);
			}
		}

		static Delegate cb_getViewByPosition_Landroid_support_v7_widget_RecyclerView_II;
#pragma warning disable 0169
		static Delegate GetGetViewByPosition_Landroid_support_v7_widget_RecyclerView_IIHandler ()
		{
			if (cb_getViewByPosition_Landroid_support_v7_widget_RecyclerView_II == null)
				cb_getViewByPosition_Landroid_support_v7_widget_RecyclerView_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLII_L (n_GetViewByPosition_Landroid_support_v7_widget_RecyclerView_II));
			return cb_getViewByPosition_Landroid_support_v7_widget_RecyclerView_II;
		}

		static IntPtr n_GetViewByPosition_Landroid_support_v7_widget_RecyclerView_II (IntPtr jnienv, IntPtr native__this, IntPtr native_recyclerView, int position, int viewId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var recyclerView = global::Java.Lang.Object.GetObject<global::Android.Support.V7.Widget.RecyclerView> (native_recyclerView, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.GetViewByPosition (recyclerView, position, viewId));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getViewByPosition' and count(parameter)=3 and parameter[1][@type='android.support.v7.widget.RecyclerView'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("getViewByPosition", "(Landroid/support/v7/widget/RecyclerView;II)Landroid/view/View;", "GetGetViewByPosition_Landroid_support_v7_widget_RecyclerView_IIHandler")]
		public virtual unsafe global::Android.Views.View GetViewByPosition (global::Android.Support.V7.Widget.RecyclerView recyclerView, int position, int viewId)
		{
			const string __id = "getViewByPosition.(Landroid/support/v7/widget/RecyclerView;II)Landroid/view/View;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((recyclerView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) recyclerView).Handle);
				__args [1] = new JniArgumentValue (position);
				__args [2] = new JniArgumentValue (viewId);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Android.Views.View> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (recyclerView);
			}
		}

		static Delegate cb_getViewByPosition_II;
#pragma warning disable 0169
		static Delegate GetGetViewByPosition_IIHandler ()
		{
			if (cb_getViewByPosition_II == null)
				cb_getViewByPosition_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_L (n_GetViewByPosition_II));
			return cb_getViewByPosition_II;
		}

		static IntPtr n_GetViewByPosition_II (IntPtr jnienv, IntPtr native__this, int position, int viewId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.GetViewByPosition (position, viewId));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='getViewByPosition' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("getViewByPosition", "(II)Landroid/view/View;", "GetGetViewByPosition_IIHandler")]
		public virtual unsafe global::Android.Views.View GetViewByPosition (int position, int viewId)
		{
			const string __id = "getViewByPosition.(II)Landroid/view/View;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (position);
				__args [1] = new JniArgumentValue (viewId);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Android.Views.View> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_isExpandable_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetIsExpandable_Ljava_lang_Object_Handler ()
		{
			if (cb_isExpandable_Ljava_lang_Object_ == null)
				cb_isExpandable_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_IsExpandable_Ljava_lang_Object_));
			return cb_isExpandable_Ljava_lang_Object_;
		}

		static bool n_IsExpandable_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_item)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var item = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_item, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.IsExpandable (item);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='isExpandable' and count(parameter)=1 and parameter[1][@type='T']]"
		[Register ("isExpandable", "(Ljava/lang/Object;)Z", "GetIsExpandable_Ljava_lang_Object_Handler")]
		public virtual unsafe bool IsExpandable (global::Java.Lang.Object item)
		{
			const string __id = "isExpandable.(Ljava/lang/Object;)Z";
			IntPtr native_item = JNIEnv.ToLocalJniHandle (item);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_item);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_item);
				global::System.GC.KeepAlive (item);
			}
		}

		static Delegate cb_isFirstOnly_Z;
#pragma warning disable 0169
		static Delegate GetIsFirstOnly_ZHandler ()
		{
			if (cb_isFirstOnly_Z == null)
				cb_isFirstOnly_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_IsFirstOnly_Z));
			return cb_isFirstOnly_Z;
		}

		static void n_IsFirstOnly_Z (IntPtr jnienv, IntPtr native__this, bool firstOnly)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.IsFirstOnly (firstOnly);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='isFirstOnly' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("isFirstOnly", "(Z)V", "GetIsFirstOnly_ZHandler")]
		public virtual unsafe void IsFirstOnly (bool firstOnly)
		{
			const string __id = "isFirstOnly.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (firstOnly);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_isFixedViewType_I;
#pragma warning disable 0169
		static Delegate GetIsFixedViewType_IHandler ()
		{
			if (cb_isFixedViewType_I == null)
				cb_isFixedViewType_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_Z (n_IsFixedViewType_I));
			return cb_isFixedViewType_I;
		}

		static bool n_IsFixedViewType_I (IntPtr jnienv, IntPtr native__this, int type)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.IsFixedViewType (type);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='isFixedViewType' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("isFixedViewType", "(I)Z", "GetIsFixedViewType_IHandler")]
		protected virtual unsafe bool IsFixedViewType (int type)
		{
			const string __id = "isFixedViewType.(I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (type);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate cb_isUseEmpty_Z;
#pragma warning disable 0169
		static Delegate GetIsUseEmpty_ZHandler ()
		{
			if (cb_isUseEmpty_Z == null)
				cb_isUseEmpty_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_IsUseEmpty_Z));
			return cb_isUseEmpty_Z;
		}

		static void n_IsUseEmpty_Z (IntPtr jnienv, IntPtr native__this, bool isUseEmpty)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.IsUseEmpty (isUseEmpty);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='isUseEmpty' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("isUseEmpty", "(Z)V", "GetIsUseEmpty_ZHandler")]
		public virtual unsafe void IsUseEmpty (bool isUseEmpty)
		{
			const string __id = "isUseEmpty.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (isUseEmpty);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_loadMoreComplete;
#pragma warning disable 0169
		static Delegate GetLoadMoreCompleteHandler ()
		{
			if (cb_loadMoreComplete == null)
				cb_loadMoreComplete = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_LoadMoreComplete));
			return cb_loadMoreComplete;
		}

		static void n_LoadMoreComplete (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.LoadMoreComplete ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='loadMoreComplete' and count(parameter)=0]"
		[Register ("loadMoreComplete", "()V", "GetLoadMoreCompleteHandler")]
		public virtual unsafe void LoadMoreComplete ()
		{
			const string __id = "loadMoreComplete.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_loadMoreEnd;
#pragma warning disable 0169
		static Delegate GetLoadMoreEndHandler ()
		{
			if (cb_loadMoreEnd == null)
				cb_loadMoreEnd = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_LoadMoreEnd));
			return cb_loadMoreEnd;
		}

		static void n_LoadMoreEnd (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.LoadMoreEnd ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='loadMoreEnd' and count(parameter)=0]"
		[Register ("loadMoreEnd", "()V", "GetLoadMoreEndHandler")]
		public virtual unsafe void LoadMoreEnd ()
		{
			const string __id = "loadMoreEnd.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_loadMoreEnd_Z;
#pragma warning disable 0169
		static Delegate GetLoadMoreEnd_ZHandler ()
		{
			if (cb_loadMoreEnd_Z == null)
				cb_loadMoreEnd_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_LoadMoreEnd_Z));
			return cb_loadMoreEnd_Z;
		}

		static void n_LoadMoreEnd_Z (IntPtr jnienv, IntPtr native__this, bool gone)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.LoadMoreEnd (gone);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='loadMoreEnd' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("loadMoreEnd", "(Z)V", "GetLoadMoreEnd_ZHandler")]
		public virtual unsafe void LoadMoreEnd (bool gone)
		{
			const string __id = "loadMoreEnd.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (gone);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_loadMoreFail;
#pragma warning disable 0169
		static Delegate GetLoadMoreFailHandler ()
		{
			if (cb_loadMoreFail == null)
				cb_loadMoreFail = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_LoadMoreFail));
			return cb_loadMoreFail;
		}

		static void n_LoadMoreFail (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.LoadMoreFail ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='loadMoreFail' and count(parameter)=0]"
		[Register ("loadMoreFail", "()V", "GetLoadMoreFailHandler")]
		public virtual unsafe void LoadMoreFail ()
		{
			const string __id = "loadMoreFail.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_notifyLoadMoreToLoading;
#pragma warning disable 0169
		static Delegate GetNotifyLoadMoreToLoadingHandler ()
		{
			if (cb_notifyLoadMoreToLoading == null)
				cb_notifyLoadMoreToLoading = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_NotifyLoadMoreToLoading));
			return cb_notifyLoadMoreToLoading;
		}

		static void n_NotifyLoadMoreToLoading (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.NotifyLoadMoreToLoading ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='notifyLoadMoreToLoading' and count(parameter)=0]"
		[Register ("notifyLoadMoreToLoading", "()V", "GetNotifyLoadMoreToLoadingHandler")]
		public virtual unsafe void NotifyLoadMoreToLoading ()
		{
			const string __id = "notifyLoadMoreToLoading.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_onBindViewHolder_Lcom_chad_library_adapter_base_BaseViewHolder_I;
#pragma warning disable 0169
		static Delegate GetOnBindViewHolder_Lcom_chad_library_adapter_base_BaseViewHolder_IHandler ()
		{
			if (cb_onBindViewHolder_Lcom_chad_library_adapter_base_BaseViewHolder_I == null)
				cb_onBindViewHolder_Lcom_chad_library_adapter_base_BaseViewHolder_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_V (n_OnBindViewHolder_Lcom_chad_library_adapter_base_BaseViewHolder_I));
			return cb_onBindViewHolder_Lcom_chad_library_adapter_base_BaseViewHolder_I;
		}

		static void n_OnBindViewHolder_Lcom_chad_library_adapter_base_BaseViewHolder_I (IntPtr jnienv, IntPtr native__this, IntPtr native_holder, int position)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var holder = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_holder, JniHandleOwnership.DoNotTransfer);
			__this.OnBindViewHolder (holder, position);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='onBindViewHolder' and count(parameter)=2 and parameter[1][@type='K'] and parameter[2][@type='int']]"
		[Register ("onBindViewHolder", "(Lcom/chad/library/adapter/base/BaseViewHolder;I)V", "GetOnBindViewHolder_Lcom_chad_library_adapter_base_BaseViewHolder_IHandler")]
		public virtual unsafe void OnBindViewHolder (global::Java.Lang.Object holder, int position)
		{
			const string __id = "onBindViewHolder.(Lcom/chad/library/adapter/base/BaseViewHolder;I)V";
			IntPtr native_holder = JNIEnv.ToLocalJniHandle (holder);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_holder);
				__args [1] = new JniArgumentValue (position);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_holder);
				global::System.GC.KeepAlive (holder);
			}
		}

		static Delegate cb_onCreateDefViewHolder_Landroid_view_ViewGroup_I;
#pragma warning disable 0169
		static Delegate GetOnCreateDefViewHolder_Landroid_view_ViewGroup_IHandler ()
		{
			if (cb_onCreateDefViewHolder_Landroid_view_ViewGroup_I == null)
				cb_onCreateDefViewHolder_Landroid_view_ViewGroup_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_L (n_OnCreateDefViewHolder_Landroid_view_ViewGroup_I));
			return cb_onCreateDefViewHolder_Landroid_view_ViewGroup_I;
		}

		static IntPtr n_OnCreateDefViewHolder_Landroid_view_ViewGroup_I (IntPtr jnienv, IntPtr native__this, IntPtr native_parent, int viewType)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var parent = global::Java.Lang.Object.GetObject<global::Android.Views.ViewGroup> (native_parent, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.OnCreateDefViewHolder (parent, viewType));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='onCreateDefViewHolder' and count(parameter)=2 and parameter[1][@type='android.view.ViewGroup'] and parameter[2][@type='int']]"
		[Register ("onCreateDefViewHolder", "(Landroid/view/ViewGroup;I)Lcom/chad/library/adapter/base/BaseViewHolder;", "GetOnCreateDefViewHolder_Landroid_view_ViewGroup_IHandler")]
		protected virtual unsafe global::Java.Lang.Object OnCreateDefViewHolder (global::Android.Views.ViewGroup parent, int viewType)
		{
			const string __id = "onCreateDefViewHolder.(Landroid/view/ViewGroup;I)Lcom/chad/library/adapter/base/BaseViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((parent == null) ? IntPtr.Zero : ((global::Java.Lang.Object) parent).Handle);
				__args [1] = new JniArgumentValue (viewType);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Java.Lang.Object) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (parent);
			}
		}

		static Delegate cb_onCreateViewHolder_Landroid_view_ViewGroup_I;
#pragma warning disable 0169
		static Delegate GetOnCreateViewHolder_Landroid_view_ViewGroup_IHandler ()
		{
			if (cb_onCreateViewHolder_Landroid_view_ViewGroup_I == null)
				cb_onCreateViewHolder_Landroid_view_ViewGroup_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_L (n_OnCreateViewHolder_Landroid_view_ViewGroup_I));
			return cb_onCreateViewHolder_Landroid_view_ViewGroup_I;
		}

		static IntPtr n_OnCreateViewHolder_Landroid_view_ViewGroup_I (IntPtr jnienv, IntPtr native__this, IntPtr native_parent, int viewType)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var parent = global::Java.Lang.Object.GetObject<global::Android.Views.ViewGroup> (native_parent, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.OnCreateViewHolder (parent, viewType));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='onCreateViewHolder' and count(parameter)=2 and parameter[1][@type='android.view.ViewGroup'] and parameter[2][@type='int']]"
		[Register ("onCreateViewHolder", "(Landroid/view/ViewGroup;I)Landroid/support/v7/widget/RecyclerView$ViewHolder;", "GetOnCreateViewHolder_Landroid_view_ViewGroup_IHandler")]
		public override unsafe global::Android.Support.V7.Widget.RecyclerView.ViewHolder OnCreateViewHolder (global::Android.Views.ViewGroup parent, int viewType)
		{
			const string __id = "onCreateViewHolder.(Landroid/view/ViewGroup;I)Landroid/support/v7/widget/RecyclerView$ViewHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((parent == null) ? IntPtr.Zero : ((global::Java.Lang.Object) parent).Handle);
				__args [1] = new JniArgumentValue (viewType);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Android.Support.V7.Widget.RecyclerView.ViewHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (parent);
			}
		}

		static Delegate cb_onViewAttachedToWindow_Lcom_chad_library_adapter_base_BaseViewHolder_;
#pragma warning disable 0169
		static Delegate GetOnViewAttachedToWindow_Lcom_chad_library_adapter_base_BaseViewHolder_Handler ()
		{
			if (cb_onViewAttachedToWindow_Lcom_chad_library_adapter_base_BaseViewHolder_ == null)
				cb_onViewAttachedToWindow_Lcom_chad_library_adapter_base_BaseViewHolder_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnViewAttachedToWindow_Lcom_chad_library_adapter_base_BaseViewHolder_));
			return cb_onViewAttachedToWindow_Lcom_chad_library_adapter_base_BaseViewHolder_;
		}

		static void n_OnViewAttachedToWindow_Lcom_chad_library_adapter_base_BaseViewHolder_ (IntPtr jnienv, IntPtr native__this, IntPtr native_holder)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var holder = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_holder, JniHandleOwnership.DoNotTransfer);
			__this.OnViewAttachedToWindow (holder);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='onViewAttachedToWindow' and count(parameter)=1 and parameter[1][@type='K']]"
		[Register ("onViewAttachedToWindow", "(Lcom/chad/library/adapter/base/BaseViewHolder;)V", "GetOnViewAttachedToWindow_Lcom_chad_library_adapter_base_BaseViewHolder_Handler")]
		public override unsafe void OnViewAttachedToWindow (global::Java.Lang.Object holder)
		{
			const string __id = "onViewAttachedToWindow.(Lcom/chad/library/adapter/base/BaseViewHolder;)V";
			IntPtr native_holder = JNIEnv.ToLocalJniHandle (holder);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_holder);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_holder);
				global::System.GC.KeepAlive (holder);
			}
		}

		static Delegate cb_openLoadAnimation;
#pragma warning disable 0169
		static Delegate GetOpenLoadAnimationHandler ()
		{
			if (cb_openLoadAnimation == null)
				cb_openLoadAnimation = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OpenLoadAnimation));
			return cb_openLoadAnimation;
		}

		static void n_OpenLoadAnimation (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.OpenLoadAnimation ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='openLoadAnimation' and count(parameter)=0]"
		[Register ("openLoadAnimation", "()V", "GetOpenLoadAnimationHandler")]
		public virtual unsafe void OpenLoadAnimation ()
		{
			const string __id = "openLoadAnimation.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_openLoadAnimation_Lcom_chad_library_adapter_base_animation_BaseAnimation_;
#pragma warning disable 0169
		static Delegate GetOpenLoadAnimation_Lcom_chad_library_adapter_base_animation_BaseAnimation_Handler ()
		{
			if (cb_openLoadAnimation_Lcom_chad_library_adapter_base_animation_BaseAnimation_ == null)
				cb_openLoadAnimation_Lcom_chad_library_adapter_base_animation_BaseAnimation_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OpenLoadAnimation_Lcom_chad_library_adapter_base_animation_BaseAnimation_));
			return cb_openLoadAnimation_Lcom_chad_library_adapter_base_animation_BaseAnimation_;
		}

		static void n_OpenLoadAnimation_Lcom_chad_library_adapter_base_animation_BaseAnimation_ (IntPtr jnienv, IntPtr native__this, IntPtr native_animation)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var animation = (global::Com.Chad.Library.Adapter.Base.Animation.IBaseAnimation)global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Animation.IBaseAnimation> (native_animation, JniHandleOwnership.DoNotTransfer);
			__this.OpenLoadAnimation (animation);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='openLoadAnimation' and count(parameter)=1 and parameter[1][@type='com.chad.library.adapter.base.animation.BaseAnimation']]"
		[Register ("openLoadAnimation", "(Lcom/chad/library/adapter/base/animation/BaseAnimation;)V", "GetOpenLoadAnimation_Lcom_chad_library_adapter_base_animation_BaseAnimation_Handler")]
		public virtual unsafe void OpenLoadAnimation (global::Com.Chad.Library.Adapter.Base.Animation.IBaseAnimation animation)
		{
			const string __id = "openLoadAnimation.(Lcom/chad/library/adapter/base/animation/BaseAnimation;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((animation == null) ? IntPtr.Zero : ((global::Java.Lang.Object) animation).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (animation);
			}
		}

		static Delegate cb_openLoadAnimation_I;
#pragma warning disable 0169
		static Delegate GetOpenLoadAnimation_IHandler ()
		{
			if (cb_openLoadAnimation_I == null)
				cb_openLoadAnimation_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_OpenLoadAnimation_I));
			return cb_openLoadAnimation_I;
		}

		static void n_OpenLoadAnimation_I (IntPtr jnienv, IntPtr native__this, int animationType)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.OpenLoadAnimation (animationType);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='openLoadAnimation' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("openLoadAnimation", "(I)V", "GetOpenLoadAnimation_IHandler")]
		public virtual unsafe void OpenLoadAnimation ([global::Android.Runtime.IntDef (Type = "Com.Chad.Library.Adapter.Base.BaseQuickAdapter", Fields = new string [] {"Alphain", "Scalein", "SlideinBottom", "SlideinLeft", "SlideinRight"})]
		int animationType)
		{
			const string __id = "openLoadAnimation.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (animationType);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_remove_I;
#pragma warning disable 0169
		static Delegate GetRemove_IHandler ()
		{
			if (cb_remove_I == null)
				cb_remove_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_Remove_I));
			return cb_remove_I;
		}

		static void n_Remove_I (IntPtr jnienv, IntPtr native__this, int position)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Remove (position);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='remove' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("remove", "(I)V", "GetRemove_IHandler")]
		public virtual unsafe void Remove (int position)
		{
			const string __id = "remove.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (position);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_removeAllFooterView;
#pragma warning disable 0169
		static Delegate GetRemoveAllFooterViewHandler ()
		{
			if (cb_removeAllFooterView == null)
				cb_removeAllFooterView = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_RemoveAllFooterView));
			return cb_removeAllFooterView;
		}

		static void n_RemoveAllFooterView (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.RemoveAllFooterView ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='removeAllFooterView' and count(parameter)=0]"
		[Register ("removeAllFooterView", "()V", "GetRemoveAllFooterViewHandler")]
		public virtual unsafe void RemoveAllFooterView ()
		{
			const string __id = "removeAllFooterView.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_removeAllHeaderView;
#pragma warning disable 0169
		static Delegate GetRemoveAllHeaderViewHandler ()
		{
			if (cb_removeAllHeaderView == null)
				cb_removeAllHeaderView = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_RemoveAllHeaderView));
			return cb_removeAllHeaderView;
		}

		static void n_RemoveAllHeaderView (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.RemoveAllHeaderView ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='removeAllHeaderView' and count(parameter)=0]"
		[Register ("removeAllHeaderView", "()V", "GetRemoveAllHeaderViewHandler")]
		public virtual unsafe void RemoveAllHeaderView ()
		{
			const string __id = "removeAllHeaderView.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_removeFooterView_Landroid_view_View_;
#pragma warning disable 0169
		static Delegate GetRemoveFooterView_Landroid_view_View_Handler ()
		{
			if (cb_removeFooterView_Landroid_view_View_ == null)
				cb_removeFooterView_Landroid_view_View_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_RemoveFooterView_Landroid_view_View_));
			return cb_removeFooterView_Landroid_view_View_;
		}

		static void n_RemoveFooterView_Landroid_view_View_ (IntPtr jnienv, IntPtr native__this, IntPtr native_footer)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var footer = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_footer, JniHandleOwnership.DoNotTransfer);
			__this.RemoveFooterView (footer);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='removeFooterView' and count(parameter)=1 and parameter[1][@type='android.view.View']]"
		[Register ("removeFooterView", "(Landroid/view/View;)V", "GetRemoveFooterView_Landroid_view_View_Handler")]
		public virtual unsafe void RemoveFooterView (global::Android.Views.View footer)
		{
			const string __id = "removeFooterView.(Landroid/view/View;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((footer == null) ? IntPtr.Zero : ((global::Java.Lang.Object) footer).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (footer);
			}
		}

		static Delegate cb_removeHeaderView_Landroid_view_View_;
#pragma warning disable 0169
		static Delegate GetRemoveHeaderView_Landroid_view_View_Handler ()
		{
			if (cb_removeHeaderView_Landroid_view_View_ == null)
				cb_removeHeaderView_Landroid_view_View_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_RemoveHeaderView_Landroid_view_View_));
			return cb_removeHeaderView_Landroid_view_View_;
		}

		static void n_RemoveHeaderView_Landroid_view_View_ (IntPtr jnienv, IntPtr native__this, IntPtr native_header)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var header = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_header, JniHandleOwnership.DoNotTransfer);
			__this.RemoveHeaderView (header);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='removeHeaderView' and count(parameter)=1 and parameter[1][@type='android.view.View']]"
		[Register ("removeHeaderView", "(Landroid/view/View;)V", "GetRemoveHeaderView_Landroid_view_View_Handler")]
		public virtual unsafe void RemoveHeaderView (global::Android.Views.View header)
		{
			const string __id = "removeHeaderView.(Landroid/view/View;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((header == null) ? IntPtr.Zero : ((global::Java.Lang.Object) header).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (header);
			}
		}

		static Delegate cb_replaceData_Ljava_util_Collection_;
#pragma warning disable 0169
		static Delegate GetReplaceData_Ljava_util_Collection_Handler ()
		{
			if (cb_replaceData_Ljava_util_Collection_ == null)
				cb_replaceData_Ljava_util_Collection_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_ReplaceData_Ljava_util_Collection_));
			return cb_replaceData_Ljava_util_Collection_;
		}

		static void n_ReplaceData_Ljava_util_Collection_ (IntPtr jnienv, IntPtr native__this, IntPtr native_data)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var data = global::Android.Runtime.JavaCollection.FromJniHandle (native_data, JniHandleOwnership.DoNotTransfer);
			__this.ReplaceData (data);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='replaceData' and count(parameter)=1 and parameter[1][@type='java.util.Collection&lt;? extends T&gt;']]"
		[Register ("replaceData", "(Ljava/util/Collection;)V", "GetReplaceData_Ljava_util_Collection_Handler")]
		public virtual unsafe void ReplaceData (global::System.Collections.ICollection data)
		{
			const string __id = "replaceData.(Ljava/util/Collection;)V";
			IntPtr native_data = global::Android.Runtime.JavaCollection.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
			}
		}

		static Delegate cb_setAutoLoadMoreSize_I;
#pragma warning disable 0169
		[global::System.Obsolete]
		static Delegate GetSetAutoLoadMoreSize_IHandler ()
		{
			if (cb_setAutoLoadMoreSize_I == null)
				cb_setAutoLoadMoreSize_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetAutoLoadMoreSize_I));
			return cb_setAutoLoadMoreSize_I;
		}

		[global::System.Obsolete]
		static void n_SetAutoLoadMoreSize_I (IntPtr jnienv, IntPtr native__this, int preLoadNumber)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetAutoLoadMoreSize (preLoadNumber);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setAutoLoadMoreSize' and count(parameter)=1 and parameter[1][@type='int']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("setAutoLoadMoreSize", "(I)V", "GetSetAutoLoadMoreSize_IHandler")]
		public virtual unsafe void SetAutoLoadMoreSize (int preLoadNumber)
		{
			const string __id = "setAutoLoadMoreSize.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (preLoadNumber);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setData_ILjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetSetData_ILjava_lang_Object_Handler ()
		{
			if (cb_setData_ILjava_lang_Object_ == null)
				cb_setData_ILjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_V (n_SetData_ILjava_lang_Object_));
			return cb_setData_ILjava_lang_Object_;
		}

		static void n_SetData_ILjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, int index, IntPtr native_data)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var data = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_data, JniHandleOwnership.DoNotTransfer);
			__this.SetData (index, data);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setData' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='T']]"
		[Register ("setData", "(ILjava/lang/Object;)V", "GetSetData_ILjava_lang_Object_Handler")]
		public virtual unsafe void SetData (int index, global::Java.Lang.Object data)
		{
			const string __id = "setData.(ILjava/lang/Object;)V";
			IntPtr native_data = JNIEnv.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (index);
				__args [1] = new JniArgumentValue (native_data);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
			}
		}

		static Delegate cb_setDuration_I;
#pragma warning disable 0169
		static Delegate GetSetDuration_IHandler ()
		{
			if (cb_setDuration_I == null)
				cb_setDuration_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetDuration_I));
			return cb_setDuration_I;
		}

		static void n_SetDuration_I (IntPtr jnienv, IntPtr native__this, int duration)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetDuration (duration);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setDuration' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setDuration", "(I)V", "GetSetDuration_IHandler")]
		public virtual unsafe void SetDuration (int duration)
		{
			const string __id = "setDuration.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (duration);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setEmptyView_I;
#pragma warning disable 0169
		static Delegate GetSetEmptyView_IHandler ()
		{
			if (cb_setEmptyView_I == null)
				cb_setEmptyView_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetEmptyView_I));
			return cb_setEmptyView_I;
		}

		static void n_SetEmptyView_I (IntPtr jnienv, IntPtr native__this, int layoutResId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetEmptyView (layoutResId);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setEmptyView' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setEmptyView", "(I)V", "GetSetEmptyView_IHandler")]
		public virtual unsafe void SetEmptyView (int layoutResId)
		{
			const string __id = "setEmptyView.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (layoutResId);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setEmptyView_ILandroid_view_ViewGroup_;
#pragma warning disable 0169
		static Delegate GetSetEmptyView_ILandroid_view_ViewGroup_Handler ()
		{
			if (cb_setEmptyView_ILandroid_view_ViewGroup_ == null)
				cb_setEmptyView_ILandroid_view_ViewGroup_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_V (n_SetEmptyView_ILandroid_view_ViewGroup_));
			return cb_setEmptyView_ILandroid_view_ViewGroup_;
		}

		static void n_SetEmptyView_ILandroid_view_ViewGroup_ (IntPtr jnienv, IntPtr native__this, int layoutResId, IntPtr native_viewGroup)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var viewGroup = global::Java.Lang.Object.GetObject<global::Android.Views.ViewGroup> (native_viewGroup, JniHandleOwnership.DoNotTransfer);
			__this.SetEmptyView (layoutResId, viewGroup);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setEmptyView' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='android.view.ViewGroup']]"
		[Register ("setEmptyView", "(ILandroid/view/ViewGroup;)V", "GetSetEmptyView_ILandroid_view_ViewGroup_Handler")]
		public virtual unsafe void SetEmptyView (int layoutResId, global::Android.Views.ViewGroup viewGroup)
		{
			const string __id = "setEmptyView.(ILandroid/view/ViewGroup;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (layoutResId);
				__args [1] = new JniArgumentValue ((viewGroup == null) ? IntPtr.Zero : ((global::Java.Lang.Object) viewGroup).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (viewGroup);
			}
		}

		static Delegate cb_setEnableLoadMore_Z;
#pragma warning disable 0169
		static Delegate GetSetEnableLoadMore_ZHandler ()
		{
			if (cb_setEnableLoadMore_Z == null)
				cb_setEnableLoadMore_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetEnableLoadMore_Z));
			return cb_setEnableLoadMore_Z;
		}

		static void n_SetEnableLoadMore_Z (IntPtr jnienv, IntPtr native__this, bool enable)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetEnableLoadMore (enable);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setEnableLoadMore' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("setEnableLoadMore", "(Z)V", "GetSetEnableLoadMore_ZHandler")]
		public virtual unsafe void SetEnableLoadMore (bool enable)
		{
			const string __id = "setEnableLoadMore.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (enable);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setFooterView_Landroid_view_View_;
#pragma warning disable 0169
		static Delegate GetSetFooterView_Landroid_view_View_Handler ()
		{
			if (cb_setFooterView_Landroid_view_View_ == null)
				cb_setFooterView_Landroid_view_View_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_I (n_SetFooterView_Landroid_view_View_));
			return cb_setFooterView_Landroid_view_View_;
		}

		static int n_SetFooterView_Landroid_view_View_ (IntPtr jnienv, IntPtr native__this, IntPtr native_header)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var header = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_header, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.SetFooterView (header);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setFooterView' and count(parameter)=1 and parameter[1][@type='android.view.View']]"
		[Register ("setFooterView", "(Landroid/view/View;)I", "GetSetFooterView_Landroid_view_View_Handler")]
		public virtual unsafe int SetFooterView (global::Android.Views.View header)
		{
			const string __id = "setFooterView.(Landroid/view/View;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((header == null) ? IntPtr.Zero : ((global::Java.Lang.Object) header).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (header);
			}
		}

		static Delegate cb_setFooterView_Landroid_view_View_I;
#pragma warning disable 0169
		static Delegate GetSetFooterView_Landroid_view_View_IHandler ()
		{
			if (cb_setFooterView_Landroid_view_View_I == null)
				cb_setFooterView_Landroid_view_View_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_I (n_SetFooterView_Landroid_view_View_I));
			return cb_setFooterView_Landroid_view_View_I;
		}

		static int n_SetFooterView_Landroid_view_View_I (IntPtr jnienv, IntPtr native__this, IntPtr native_header, int index)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var header = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_header, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.SetFooterView (header, index);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setFooterView' and count(parameter)=2 and parameter[1][@type='android.view.View'] and parameter[2][@type='int']]"
		[Register ("setFooterView", "(Landroid/view/View;I)I", "GetSetFooterView_Landroid_view_View_IHandler")]
		public virtual unsafe int SetFooterView (global::Android.Views.View header, int index)
		{
			const string __id = "setFooterView.(Landroid/view/View;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((header == null) ? IntPtr.Zero : ((global::Java.Lang.Object) header).Handle);
				__args [1] = new JniArgumentValue (index);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (header);
			}
		}

		static Delegate cb_setFooterView_Landroid_view_View_II;
#pragma warning disable 0169
		static Delegate GetSetFooterView_Landroid_view_View_IIHandler ()
		{
			if (cb_setFooterView_Landroid_view_View_II == null)
				cb_setFooterView_Landroid_view_View_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLII_I (n_SetFooterView_Landroid_view_View_II));
			return cb_setFooterView_Landroid_view_View_II;
		}

		static int n_SetFooterView_Landroid_view_View_II (IntPtr jnienv, IntPtr native__this, IntPtr native_header, int index, int orientation)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var header = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_header, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.SetFooterView (header, index, orientation);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setFooterView' and count(parameter)=3 and parameter[1][@type='android.view.View'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("setFooterView", "(Landroid/view/View;II)I", "GetSetFooterView_Landroid_view_View_IIHandler")]
		public virtual unsafe int SetFooterView (global::Android.Views.View header, int index, int orientation)
		{
			const string __id = "setFooterView.(Landroid/view/View;II)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((header == null) ? IntPtr.Zero : ((global::Java.Lang.Object) header).Handle);
				__args [1] = new JniArgumentValue (index);
				__args [2] = new JniArgumentValue (orientation);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (header);
			}
		}

		static Delegate cb_setFullSpan_Landroid_support_v7_widget_RecyclerView_ViewHolder_;
#pragma warning disable 0169
		static Delegate GetSetFullSpan_Landroid_support_v7_widget_RecyclerView_ViewHolder_Handler ()
		{
			if (cb_setFullSpan_Landroid_support_v7_widget_RecyclerView_ViewHolder_ == null)
				cb_setFullSpan_Landroid_support_v7_widget_RecyclerView_ViewHolder_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetFullSpan_Landroid_support_v7_widget_RecyclerView_ViewHolder_));
			return cb_setFullSpan_Landroid_support_v7_widget_RecyclerView_ViewHolder_;
		}

		static void n_SetFullSpan_Landroid_support_v7_widget_RecyclerView_ViewHolder_ (IntPtr jnienv, IntPtr native__this, IntPtr native_holder)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var holder = global::Java.Lang.Object.GetObject<global::Android.Support.V7.Widget.RecyclerView.ViewHolder> (native_holder, JniHandleOwnership.DoNotTransfer);
			__this.SetFullSpan (holder);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setFullSpan' and count(parameter)=1 and parameter[1][@type='android.support.v7.widget.RecyclerView.ViewHolder']]"
		[Register ("setFullSpan", "(Landroid/support/v7/widget/RecyclerView$ViewHolder;)V", "GetSetFullSpan_Landroid_support_v7_widget_RecyclerView_ViewHolder_Handler")]
		protected virtual unsafe void SetFullSpan (global::Android.Support.V7.Widget.RecyclerView.ViewHolder holder)
		{
			const string __id = "setFullSpan.(Landroid/support/v7/widget/RecyclerView$ViewHolder;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((holder == null) ? IntPtr.Zero : ((global::Java.Lang.Object) holder).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (holder);
			}
		}

		static Delegate cb_setHeaderAndEmpty_Z;
#pragma warning disable 0169
		static Delegate GetSetHeaderAndEmpty_ZHandler ()
		{
			if (cb_setHeaderAndEmpty_Z == null)
				cb_setHeaderAndEmpty_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetHeaderAndEmpty_Z));
			return cb_setHeaderAndEmpty_Z;
		}

		static void n_SetHeaderAndEmpty_Z (IntPtr jnienv, IntPtr native__this, bool isHeadAndEmpty)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetHeaderAndEmpty (isHeadAndEmpty);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setHeaderAndEmpty' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("setHeaderAndEmpty", "(Z)V", "GetSetHeaderAndEmpty_ZHandler")]
		public virtual unsafe void SetHeaderAndEmpty (bool isHeadAndEmpty)
		{
			const string __id = "setHeaderAndEmpty.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (isHeadAndEmpty);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setHeaderFooterEmpty_ZZ;
#pragma warning disable 0169
		static Delegate GetSetHeaderFooterEmpty_ZZHandler ()
		{
			if (cb_setHeaderFooterEmpty_ZZ == null)
				cb_setHeaderFooterEmpty_ZZ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZZ_V (n_SetHeaderFooterEmpty_ZZ));
			return cb_setHeaderFooterEmpty_ZZ;
		}

		static void n_SetHeaderFooterEmpty_ZZ (IntPtr jnienv, IntPtr native__this, bool isHeadAndEmpty, bool isFootAndEmpty)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetHeaderFooterEmpty (isHeadAndEmpty, isFootAndEmpty);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setHeaderFooterEmpty' and count(parameter)=2 and parameter[1][@type='boolean'] and parameter[2][@type='boolean']]"
		[Register ("setHeaderFooterEmpty", "(ZZ)V", "GetSetHeaderFooterEmpty_ZZHandler")]
		public virtual unsafe void SetHeaderFooterEmpty (bool isHeadAndEmpty, bool isFootAndEmpty)
		{
			const string __id = "setHeaderFooterEmpty.(ZZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (isHeadAndEmpty);
				__args [1] = new JniArgumentValue (isFootAndEmpty);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setHeaderView_Landroid_view_View_;
#pragma warning disable 0169
		static Delegate GetSetHeaderView_Landroid_view_View_Handler ()
		{
			if (cb_setHeaderView_Landroid_view_View_ == null)
				cb_setHeaderView_Landroid_view_View_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_I (n_SetHeaderView_Landroid_view_View_));
			return cb_setHeaderView_Landroid_view_View_;
		}

		static int n_SetHeaderView_Landroid_view_View_ (IntPtr jnienv, IntPtr native__this, IntPtr native_header)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var header = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_header, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.SetHeaderView (header);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setHeaderView' and count(parameter)=1 and parameter[1][@type='android.view.View']]"
		[Register ("setHeaderView", "(Landroid/view/View;)I", "GetSetHeaderView_Landroid_view_View_Handler")]
		public virtual unsafe int SetHeaderView (global::Android.Views.View header)
		{
			const string __id = "setHeaderView.(Landroid/view/View;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((header == null) ? IntPtr.Zero : ((global::Java.Lang.Object) header).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (header);
			}
		}

		static Delegate cb_setHeaderView_Landroid_view_View_I;
#pragma warning disable 0169
		static Delegate GetSetHeaderView_Landroid_view_View_IHandler ()
		{
			if (cb_setHeaderView_Landroid_view_View_I == null)
				cb_setHeaderView_Landroid_view_View_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_I (n_SetHeaderView_Landroid_view_View_I));
			return cb_setHeaderView_Landroid_view_View_I;
		}

		static int n_SetHeaderView_Landroid_view_View_I (IntPtr jnienv, IntPtr native__this, IntPtr native_header, int index)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var header = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_header, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.SetHeaderView (header, index);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setHeaderView' and count(parameter)=2 and parameter[1][@type='android.view.View'] and parameter[2][@type='int']]"
		[Register ("setHeaderView", "(Landroid/view/View;I)I", "GetSetHeaderView_Landroid_view_View_IHandler")]
		public virtual unsafe int SetHeaderView (global::Android.Views.View header, int index)
		{
			const string __id = "setHeaderView.(Landroid/view/View;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((header == null) ? IntPtr.Zero : ((global::Java.Lang.Object) header).Handle);
				__args [1] = new JniArgumentValue (index);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (header);
			}
		}

		static Delegate cb_setHeaderView_Landroid_view_View_II;
#pragma warning disable 0169
		static Delegate GetSetHeaderView_Landroid_view_View_IIHandler ()
		{
			if (cb_setHeaderView_Landroid_view_View_II == null)
				cb_setHeaderView_Landroid_view_View_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLII_I (n_SetHeaderView_Landroid_view_View_II));
			return cb_setHeaderView_Landroid_view_View_II;
		}

		static int n_SetHeaderView_Landroid_view_View_II (IntPtr jnienv, IntPtr native__this, IntPtr native_header, int index, int orientation)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var header = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_header, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.SetHeaderView (header, index, orientation);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setHeaderView' and count(parameter)=3 and parameter[1][@type='android.view.View'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("setHeaderView", "(Landroid/view/View;II)I", "GetSetHeaderView_Landroid_view_View_IIHandler")]
		public virtual unsafe int SetHeaderView (global::Android.Views.View header, int index, int orientation)
		{
			const string __id = "setHeaderView.(Landroid/view/View;II)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((header == null) ? IntPtr.Zero : ((global::Java.Lang.Object) header).Handle);
				__args [1] = new JniArgumentValue (index);
				__args [2] = new JniArgumentValue (orientation);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (header);
			}
		}

		static Delegate cb_setLoadMoreView_Lcom_chad_library_adapter_base_loadmore_LoadMoreView_;
#pragma warning disable 0169
		static Delegate GetSetLoadMoreView_Lcom_chad_library_adapter_base_loadmore_LoadMoreView_Handler ()
		{
			if (cb_setLoadMoreView_Lcom_chad_library_adapter_base_loadmore_LoadMoreView_ == null)
				cb_setLoadMoreView_Lcom_chad_library_adapter_base_loadmore_LoadMoreView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetLoadMoreView_Lcom_chad_library_adapter_base_loadmore_LoadMoreView_));
			return cb_setLoadMoreView_Lcom_chad_library_adapter_base_loadmore_LoadMoreView_;
		}

		static void n_SetLoadMoreView_Lcom_chad_library_adapter_base_loadmore_LoadMoreView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_loadingView)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var loadingView = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Loadmore.LoadMoreView> (native_loadingView, JniHandleOwnership.DoNotTransfer);
			__this.SetLoadMoreView (loadingView);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setLoadMoreView' and count(parameter)=1 and parameter[1][@type='com.chad.library.adapter.base.loadmore.LoadMoreView']]"
		[Register ("setLoadMoreView", "(Lcom/chad/library/adapter/base/loadmore/LoadMoreView;)V", "GetSetLoadMoreView_Lcom_chad_library_adapter_base_loadmore_LoadMoreView_Handler")]
		public virtual unsafe void SetLoadMoreView (global::Com.Chad.Library.Adapter.Base.Loadmore.LoadMoreView loadingView)
		{
			const string __id = "setLoadMoreView.(Lcom/chad/library/adapter/base/loadmore/LoadMoreView;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((loadingView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) loadingView).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (loadingView);
			}
		}

		static Delegate cb_setNewData_Ljava_util_List_;
#pragma warning disable 0169
		static Delegate GetSetNewData_Ljava_util_List_Handler ()
		{
			if (cb_setNewData_Ljava_util_List_ == null)
				cb_setNewData_Ljava_util_List_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetNewData_Ljava_util_List_));
			return cb_setNewData_Ljava_util_List_;
		}

		static void n_SetNewData_Ljava_util_List_ (IntPtr jnienv, IntPtr native__this, IntPtr native_data)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var data = global::Android.Runtime.JavaList.FromJniHandle (native_data, JniHandleOwnership.DoNotTransfer);
			__this.SetNewData (data);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setNewData' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;T&gt;']]"
		[Register ("setNewData", "(Ljava/util/List;)V", "GetSetNewData_Ljava_util_List_Handler")]
		public virtual unsafe void SetNewData (global::System.Collections.IList data)
		{
			const string __id = "setNewData.(Ljava/util/List;)V";
			IntPtr native_data = global::Android.Runtime.JavaList.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
			}
		}

		static Delegate cb_setNotDoAnimationCount_I;
#pragma warning disable 0169
		static Delegate GetSetNotDoAnimationCount_IHandler ()
		{
			if (cb_setNotDoAnimationCount_I == null)
				cb_setNotDoAnimationCount_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetNotDoAnimationCount_I));
			return cb_setNotDoAnimationCount_I;
		}

		static void n_SetNotDoAnimationCount_I (IntPtr jnienv, IntPtr native__this, int count)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetNotDoAnimationCount (count);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setNotDoAnimationCount' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setNotDoAnimationCount", "(I)V", "GetSetNotDoAnimationCount_IHandler")]
		public virtual unsafe void SetNotDoAnimationCount (int count)
		{
			const string __id = "setNotDoAnimationCount.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (count);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setOnItemClick_Landroid_view_View_I;
#pragma warning disable 0169
		static Delegate GetSetOnItemClick_Landroid_view_View_IHandler ()
		{
			if (cb_setOnItemClick_Landroid_view_View_I == null)
				cb_setOnItemClick_Landroid_view_View_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_V (n_SetOnItemClick_Landroid_view_View_I));
			return cb_setOnItemClick_Landroid_view_View_I;
		}

		static void n_SetOnItemClick_Landroid_view_View_I (IntPtr jnienv, IntPtr native__this, IntPtr native_v, int position)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var v = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_v, JniHandleOwnership.DoNotTransfer);
			__this.SetOnItemClick (v, position);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setOnItemClick' and count(parameter)=2 and parameter[1][@type='android.view.View'] and parameter[2][@type='int']]"
		[Register ("setOnItemClick", "(Landroid/view/View;I)V", "GetSetOnItemClick_Landroid_view_View_IHandler")]
		public virtual unsafe void SetOnItemClick (global::Android.Views.View v, int position)
		{
			const string __id = "setOnItemClick.(Landroid/view/View;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((v == null) ? IntPtr.Zero : ((global::Java.Lang.Object) v).Handle);
				__args [1] = new JniArgumentValue (position);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (v);
			}
		}

		static Delegate cb_setOnItemLongClick_Landroid_view_View_I;
#pragma warning disable 0169
		static Delegate GetSetOnItemLongClick_Landroid_view_View_IHandler ()
		{
			if (cb_setOnItemLongClick_Landroid_view_View_I == null)
				cb_setOnItemLongClick_Landroid_view_View_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_Z (n_SetOnItemLongClick_Landroid_view_View_I));
			return cb_setOnItemLongClick_Landroid_view_View_I;
		}

		static bool n_SetOnItemLongClick_Landroid_view_View_I (IntPtr jnienv, IntPtr native__this, IntPtr native_v, int position)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var v = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_v, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.SetOnItemLongClick (v, position);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setOnItemLongClick' and count(parameter)=2 and parameter[1][@type='android.view.View'] and parameter[2][@type='int']]"
		[Register ("setOnItemLongClick", "(Landroid/view/View;I)Z", "GetSetOnItemLongClick_Landroid_view_View_IHandler")]
		public virtual unsafe bool SetOnItemLongClick (global::Android.Views.View v, int position)
		{
			const string __id = "setOnItemLongClick.(Landroid/view/View;I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((v == null) ? IntPtr.Zero : ((global::Java.Lang.Object) v).Handle);
				__args [1] = new JniArgumentValue (position);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (v);
			}
		}

		static Delegate cb_setOnLoadMoreListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_RequestLoadMoreListener_;
#pragma warning disable 0169
		[global::System.Obsolete]
		static Delegate GetSetOnLoadMoreListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_RequestLoadMoreListener_Handler ()
		{
			if (cb_setOnLoadMoreListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_RequestLoadMoreListener_ == null)
				cb_setOnLoadMoreListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_RequestLoadMoreListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetOnLoadMoreListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_RequestLoadMoreListener_));
			return cb_setOnLoadMoreListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_RequestLoadMoreListener_;
		}

		[global::System.Obsolete]
		static void n_SetOnLoadMoreListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_RequestLoadMoreListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_requestLoadMoreListener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var requestLoadMoreListener = (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IRequestLoadMoreListener)global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IRequestLoadMoreListener> (native_requestLoadMoreListener, JniHandleOwnership.DoNotTransfer);
			__this.SetOnLoadMoreListener (requestLoadMoreListener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setOnLoadMoreListener' and count(parameter)=1 and parameter[1][@type='com.chad.library.adapter.base.BaseQuickAdapter.RequestLoadMoreListener']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("setOnLoadMoreListener", "(Lcom/chad/library/adapter/base/BaseQuickAdapter$RequestLoadMoreListener;)V", "GetSetOnLoadMoreListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_RequestLoadMoreListener_Handler")]
		public virtual unsafe void SetOnLoadMoreListener (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IRequestLoadMoreListener requestLoadMoreListener)
		{
			const string __id = "setOnLoadMoreListener.(Lcom/chad/library/adapter/base/BaseQuickAdapter$RequestLoadMoreListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((requestLoadMoreListener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) requestLoadMoreListener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (requestLoadMoreListener);
			}
		}

		static Delegate cb_setOnLoadMoreListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_RequestLoadMoreListener_Landroid_support_v7_widget_RecyclerView_;
#pragma warning disable 0169
		static Delegate GetSetOnLoadMoreListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_RequestLoadMoreListener_Landroid_support_v7_widget_RecyclerView_Handler ()
		{
			if (cb_setOnLoadMoreListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_RequestLoadMoreListener_Landroid_support_v7_widget_RecyclerView_ == null)
				cb_setOnLoadMoreListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_RequestLoadMoreListener_Landroid_support_v7_widget_RecyclerView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_SetOnLoadMoreListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_RequestLoadMoreListener_Landroid_support_v7_widget_RecyclerView_));
			return cb_setOnLoadMoreListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_RequestLoadMoreListener_Landroid_support_v7_widget_RecyclerView_;
		}

		static void n_SetOnLoadMoreListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_RequestLoadMoreListener_Landroid_support_v7_widget_RecyclerView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_requestLoadMoreListener, IntPtr native_recyclerView)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var requestLoadMoreListener = (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IRequestLoadMoreListener)global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IRequestLoadMoreListener> (native_requestLoadMoreListener, JniHandleOwnership.DoNotTransfer);
			var recyclerView = global::Java.Lang.Object.GetObject<global::Android.Support.V7.Widget.RecyclerView> (native_recyclerView, JniHandleOwnership.DoNotTransfer);
			__this.SetOnLoadMoreListener (requestLoadMoreListener, recyclerView);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setOnLoadMoreListener' and count(parameter)=2 and parameter[1][@type='com.chad.library.adapter.base.BaseQuickAdapter.RequestLoadMoreListener'] and parameter[2][@type='android.support.v7.widget.RecyclerView']]"
		[Register ("setOnLoadMoreListener", "(Lcom/chad/library/adapter/base/BaseQuickAdapter$RequestLoadMoreListener;Landroid/support/v7/widget/RecyclerView;)V", "GetSetOnLoadMoreListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_RequestLoadMoreListener_Landroid_support_v7_widget_RecyclerView_Handler")]
		public virtual unsafe void SetOnLoadMoreListener (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IRequestLoadMoreListener requestLoadMoreListener, global::Android.Support.V7.Widget.RecyclerView recyclerView)
		{
			const string __id = "setOnLoadMoreListener.(Lcom/chad/library/adapter/base/BaseQuickAdapter$RequestLoadMoreListener;Landroid/support/v7/widget/RecyclerView;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((requestLoadMoreListener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) requestLoadMoreListener).Handle);
				__args [1] = new JniArgumentValue ((recyclerView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) recyclerView).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (requestLoadMoreListener);
				global::System.GC.KeepAlive (recyclerView);
			}
		}

		static Delegate cb_setPreLoadNumber_I;
#pragma warning disable 0169
		static Delegate GetSetPreLoadNumber_IHandler ()
		{
			if (cb_setPreLoadNumber_I == null)
				cb_setPreLoadNumber_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetPreLoadNumber_I));
			return cb_setPreLoadNumber_I;
		}

		static void n_SetPreLoadNumber_I (IntPtr jnienv, IntPtr native__this, int preLoadNumber)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetPreLoadNumber (preLoadNumber);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setPreLoadNumber' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setPreLoadNumber", "(I)V", "GetSetPreLoadNumber_IHandler")]
		public virtual unsafe void SetPreLoadNumber (int preLoadNumber)
		{
			const string __id = "setPreLoadNumber.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (preLoadNumber);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setSpanSizeLookup_Lcom_chad_library_adapter_base_BaseQuickAdapter_SpanSizeLookup_;
#pragma warning disable 0169
		static Delegate GetSetSpanSizeLookup_Lcom_chad_library_adapter_base_BaseQuickAdapter_SpanSizeLookup_Handler ()
		{
			if (cb_setSpanSizeLookup_Lcom_chad_library_adapter_base_BaseQuickAdapter_SpanSizeLookup_ == null)
				cb_setSpanSizeLookup_Lcom_chad_library_adapter_base_BaseQuickAdapter_SpanSizeLookup_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetSpanSizeLookup_Lcom_chad_library_adapter_base_BaseQuickAdapter_SpanSizeLookup_));
			return cb_setSpanSizeLookup_Lcom_chad_library_adapter_base_BaseQuickAdapter_SpanSizeLookup_;
		}

		static void n_SetSpanSizeLookup_Lcom_chad_library_adapter_base_BaseQuickAdapter_SpanSizeLookup_ (IntPtr jnienv, IntPtr native__this, IntPtr native_spanSizeLookup)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var spanSizeLookup = (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.ISpanSizeLookup)global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.ISpanSizeLookup> (native_spanSizeLookup, JniHandleOwnership.DoNotTransfer);
			__this.SetSpanSizeLookup (spanSizeLookup);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setSpanSizeLookup' and count(parameter)=1 and parameter[1][@type='com.chad.library.adapter.base.BaseQuickAdapter.SpanSizeLookup']]"
		[Register ("setSpanSizeLookup", "(Lcom/chad/library/adapter/base/BaseQuickAdapter$SpanSizeLookup;)V", "GetSetSpanSizeLookup_Lcom_chad_library_adapter_base_BaseQuickAdapter_SpanSizeLookup_Handler")]
		public virtual unsafe void SetSpanSizeLookup (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.ISpanSizeLookup spanSizeLookup)
		{
			const string __id = "setSpanSizeLookup.(Lcom/chad/library/adapter/base/BaseQuickAdapter$SpanSizeLookup;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((spanSizeLookup == null) ? IntPtr.Zero : ((global::Java.Lang.Object) spanSizeLookup).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (spanSizeLookup);
			}
		}

		static Delegate cb_setStartUpFetchPosition_I;
#pragma warning disable 0169
		static Delegate GetSetStartUpFetchPosition_IHandler ()
		{
			if (cb_setStartUpFetchPosition_I == null)
				cb_setStartUpFetchPosition_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetStartUpFetchPosition_I));
			return cb_setStartUpFetchPosition_I;
		}

		static void n_SetStartUpFetchPosition_I (IntPtr jnienv, IntPtr native__this, int startUpFetchPosition)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetStartUpFetchPosition (startUpFetchPosition);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setStartUpFetchPosition' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setStartUpFetchPosition", "(I)V", "GetSetStartUpFetchPosition_IHandler")]
		public virtual unsafe void SetStartUpFetchPosition (int startUpFetchPosition)
		{
			const string __id = "setStartUpFetchPosition.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (startUpFetchPosition);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setUpFetchListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_UpFetchListener_;
#pragma warning disable 0169
		static Delegate GetSetUpFetchListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_UpFetchListener_Handler ()
		{
			if (cb_setUpFetchListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_UpFetchListener_ == null)
				cb_setUpFetchListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_UpFetchListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetUpFetchListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_UpFetchListener_));
			return cb_setUpFetchListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_UpFetchListener_;
		}

		static void n_SetUpFetchListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_UpFetchListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_upFetchListener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var upFetchListener = (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IUpFetchListener)global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IUpFetchListener> (native_upFetchListener, JniHandleOwnership.DoNotTransfer);
			__this.SetUpFetchListener (upFetchListener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='setUpFetchListener' and count(parameter)=1 and parameter[1][@type='com.chad.library.adapter.base.BaseQuickAdapter.UpFetchListener']]"
		[Register ("setUpFetchListener", "(Lcom/chad/library/adapter/base/BaseQuickAdapter$UpFetchListener;)V", "GetSetUpFetchListener_Lcom_chad_library_adapter_base_BaseQuickAdapter_UpFetchListener_Handler")]
		public virtual unsafe void SetUpFetchListener (global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IUpFetchListener upFetchListener)
		{
			const string __id = "setUpFetchListener.(Lcom/chad/library/adapter/base/BaseQuickAdapter$UpFetchListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((upFetchListener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) upFetchListener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (upFetchListener);
			}
		}

		static Delegate cb_startAnim_Landroid_animation_Animator_I;
#pragma warning disable 0169
		static Delegate GetStartAnim_Landroid_animation_Animator_IHandler ()
		{
			if (cb_startAnim_Landroid_animation_Animator_I == null)
				cb_startAnim_Landroid_animation_Animator_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_V (n_StartAnim_Landroid_animation_Animator_I));
			return cb_startAnim_Landroid_animation_Animator_I;
		}

		static void n_StartAnim_Landroid_animation_Animator_I (IntPtr jnienv, IntPtr native__this, IntPtr native_anim, int index)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var anim = global::Java.Lang.Object.GetObject<global::Android.Animation.Animator> (native_anim, JniHandleOwnership.DoNotTransfer);
			__this.StartAnim (anim, index);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='startAnim' and count(parameter)=2 and parameter[1][@type='android.animation.Animator'] and parameter[2][@type='int']]"
		[Register ("startAnim", "(Landroid/animation/Animator;I)V", "GetStartAnim_Landroid_animation_Animator_IHandler")]
		protected virtual unsafe void StartAnim (global::Android.Animation.Animator anim, int index)
		{
			const string __id = "startAnim.(Landroid/animation/Animator;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((anim == null) ? IntPtr.Zero : ((global::Java.Lang.Object) anim).Handle);
				__args [1] = new JniArgumentValue (index);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (anim);
			}
		}

		#region "Event implementation for Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IRequestLoadMoreListener"

		public event EventHandler LoadMore {
			add {
				global::Java.Interop.EventHelper.AddEventHandler<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IRequestLoadMoreListener, global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IRequestLoadMoreListenerImplementor>(
				ref weak_implementor_SetOnLoadMoreListener,
				__CreateIRequestLoadMoreListenerImplementor,
				SetOnLoadMoreListener,
				__h => __h.Handler += value);
			}
			remove {
				global::Java.Interop.EventHelper.RemoveEventHandler<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IRequestLoadMoreListener, global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IRequestLoadMoreListenerImplementor>(
				ref weak_implementor_SetOnLoadMoreListener,
				global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IRequestLoadMoreListenerImplementor.__IsEmpty,
				__v => SetOnLoadMoreListener (null),
				__h => __h.Handler -= value);
			}
		}

		WeakReference weak_implementor_SetOnLoadMoreListener;

		global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IRequestLoadMoreListenerImplementor __CreateIRequestLoadMoreListenerImplementor ()
		{
			return new global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IRequestLoadMoreListenerImplementor (this);
		}

		#endregion

		#region "Event implementation for Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IUpFetchListener"

		public event EventHandler UpFetch {
			add {
				global::Java.Interop.EventHelper.AddEventHandler<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IUpFetchListener, global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IUpFetchListenerImplementor>(
				ref weak_implementor_SetUpFetchListener,
				__CreateIUpFetchListenerImplementor,
				SetUpFetchListener,
				__h => __h.Handler += value);
			}
			remove {
				global::Java.Interop.EventHelper.RemoveEventHandler<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IUpFetchListener, global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IUpFetchListenerImplementor>(
				ref weak_implementor_SetUpFetchListener,
				global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IUpFetchListenerImplementor.__IsEmpty,
				__v => SetUpFetchListener (null),
				__h => __h.Handler -= value);
			}
		}

		WeakReference weak_implementor_SetUpFetchListener;

		global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IUpFetchListenerImplementor __CreateIUpFetchListenerImplementor ()
		{
			return new global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IUpFetchListenerImplementor (this);
		}

		#endregion

		#region "Event implementation for Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildClickListener"

		public event EventHandler<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.ItemChildClickEventArgs> ItemChildClick {
			add {
				global::Java.Interop.EventHelper.AddEventHandler<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildClickListener, global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildClickListenerImplementor>(
				ref weak_implementor___SetOnItemChildClickListener,
				__CreateIOnItemChildClickListenerImplementor,
				__v => OnItemChildClickListener = __v,
				__h => __h.Handler += value);
			}
			remove {
				global::Java.Interop.EventHelper.RemoveEventHandler<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildClickListener, global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildClickListenerImplementor>(
				ref weak_implementor___SetOnItemChildClickListener,
				global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildClickListenerImplementor.__IsEmpty,
				__v => OnItemChildClickListener = null,
				__h => __h.Handler -= value);
			}
		}

		WeakReference weak_implementor___SetOnItemChildClickListener;

		global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildClickListenerImplementor __CreateIOnItemChildClickListenerImplementor ()
		{
			return new global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildClickListenerImplementor (this);
		}

		#endregion

		#region "Event implementation for Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildLongClickListener"

		public event EventHandler<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.ItemChildLongClickEventArgs> ItemChildLongClick {
			add {
				global::Java.Interop.EventHelper.AddEventHandler<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildLongClickListener, global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildLongClickListenerImplementor>(
				ref weak_implementor___SetOnItemChildLongClickListener,
				__CreateIOnItemChildLongClickListenerImplementor,
				__v => OnItemChildLongClickListener = __v,
				__h => __h.Handler += value);
			}
			remove {
				global::Java.Interop.EventHelper.RemoveEventHandler<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildLongClickListener, global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildLongClickListenerImplementor>(
				ref weak_implementor___SetOnItemChildLongClickListener,
				global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildLongClickListenerImplementor.__IsEmpty,
				__v => OnItemChildLongClickListener = null,
				__h => __h.Handler -= value);
			}
		}

		WeakReference weak_implementor___SetOnItemChildLongClickListener;

		global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildLongClickListenerImplementor __CreateIOnItemChildLongClickListenerImplementor ()
		{
			return new global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemChildLongClickListenerImplementor (this);
		}

		#endregion

		#region "Event implementation for Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemClickListener"

		public event EventHandler<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.ItemClickEventArgs> ItemClick {
			add {
				global::Java.Interop.EventHelper.AddEventHandler<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemClickListener, global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemClickListenerImplementor>(
				ref weak_implementor___SetOnItemClickListener,
				__CreateIOnItemClickListenerImplementor,
				__v => OnItemClickListener = __v,
				__h => __h.Handler += value);
			}
			remove {
				global::Java.Interop.EventHelper.RemoveEventHandler<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemClickListener, global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemClickListenerImplementor>(
				ref weak_implementor___SetOnItemClickListener,
				global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemClickListenerImplementor.__IsEmpty,
				__v => OnItemClickListener = null,
				__h => __h.Handler -= value);
			}
		}

		WeakReference weak_implementor___SetOnItemClickListener;

		global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemClickListenerImplementor __CreateIOnItemClickListenerImplementor ()
		{
			return new global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemClickListenerImplementor (this);
		}

		#endregion

		#region "Event implementation for Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemLongClickListener"

		public event EventHandler<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.ItemLongClickEventArgs> ItemLongClick {
			add {
				global::Java.Interop.EventHelper.AddEventHandler<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemLongClickListener, global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemLongClickListenerImplementor>(
				ref weak_implementor___SetOnItemLongClickListener,
				__CreateIOnItemLongClickListenerImplementor,
				__v => OnItemLongClickListener = __v,
				__h => __h.Handler += value);
			}
			remove {
				global::Java.Interop.EventHelper.RemoveEventHandler<global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemLongClickListener, global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemLongClickListenerImplementor>(
				ref weak_implementor___SetOnItemLongClickListener,
				global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemLongClickListenerImplementor.__IsEmpty,
				__v => OnItemLongClickListener = null,
				__h => __h.Handler -= value);
			}
		}

		WeakReference weak_implementor___SetOnItemLongClickListener;

		global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemLongClickListenerImplementor __CreateIOnItemLongClickListenerImplementor ()
		{
			return new global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter.IOnItemLongClickListenerImplementor (this);
		}

		#endregion

	}

	[global::Android.Runtime.Register ("com/chad/library/adapter/base/BaseQuickAdapter", DoNotGenerateAcw=true)]
	internal partial class BaseQuickAdapterInvoker : BaseQuickAdapter {
		public BaseQuickAdapterInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
		{
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/BaseQuickAdapter", typeof (BaseQuickAdapterInvoker));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='convert' and count(parameter)=2 and parameter[1][@type='K'] and parameter[2][@type='T']]"
		[Register ("convert", "(Lcom/chad/library/adapter/base/BaseViewHolder;Ljava/lang/Object;)V", "GetConvert_Lcom_chad_library_adapter_base_BaseViewHolder_Ljava_lang_Object_Handler")]
		protected override unsafe void Convert (global::Java.Lang.Object p0, global::Java.Lang.Object p1)
		{
			const string __id = "convert.(Lcom/chad/library/adapter/base/BaseViewHolder;Ljava/lang/Object;)V";
			IntPtr native_p0 = JNIEnv.ToLocalJniHandle (p0);
			IntPtr native_p1 = JNIEnv.ToLocalJniHandle (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		[Register ("onBindViewHolder", "(Landroid/support/v7/widget/RecyclerView$ViewHolder;I)V", "GetOnBindViewHolder_Landroid_support_v7_widget_RecyclerView_ViewHolder_IHandler")]
		public override unsafe void OnBindViewHolder (global::Android.Support.V7.Widget.RecyclerView.ViewHolder holder, int position)
		{
			const string __id = "onBindViewHolder.(Landroid/support/v7/widget/RecyclerView$ViewHolder;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((holder == null) ? IntPtr.Zero : ((global::Java.Lang.Object) holder).Handle);
				__args [1] = new JniArgumentValue (position);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (holder);
			}
		}

	}
}
