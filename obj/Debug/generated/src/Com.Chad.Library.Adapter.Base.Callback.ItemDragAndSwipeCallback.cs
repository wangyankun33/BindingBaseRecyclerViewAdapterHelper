//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Chad.Library.Adapter.Base.Callback {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.chad.library.adapter.base.callback']/class[@name='ItemDragAndSwipeCallback']"
	[global::Android.Runtime.Register ("com/chad/library/adapter/base/callback/ItemDragAndSwipeCallback", DoNotGenerateAcw=true)]
	public partial class ItemDragAndSwipeCallback : global::Android.Support.V7.Widget.Helper.ItemTouchHelper.Callback {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/callback/ItemDragAndSwipeCallback", typeof (ItemDragAndSwipeCallback));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ItemDragAndSwipeCallback (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.chad.library.adapter.base.callback']/class[@name='ItemDragAndSwipeCallback']/constructor[@name='ItemDragAndSwipeCallback' and count(parameter)=1 and parameter[1][@type='com.chad.library.adapter.base.BaseItemDraggableAdapter']]"
		[Register (".ctor", "(Lcom/chad/library/adapter/base/BaseItemDraggableAdapter;)V", "")]
		public unsafe ItemDragAndSwipeCallback (global::Com.Chad.Library.Adapter.Base.BaseItemDraggableAdapter adapter) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Lcom/chad/library/adapter/base/BaseItemDraggableAdapter;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((adapter == null) ? IntPtr.Zero : ((global::Java.Lang.Object) adapter).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (adapter);
			}
		}

		static Delegate cb_getMovementFlags_Landroid_support_v7_widget_RecyclerView_Landroid_support_v7_widget_RecyclerView_ViewHolder_;
#pragma warning disable 0169
		static Delegate GetGetMovementFlags_Landroid_support_v7_widget_RecyclerView_Landroid_support_v7_widget_RecyclerView_ViewHolder_Handler ()
		{
			if (cb_getMovementFlags_Landroid_support_v7_widget_RecyclerView_Landroid_support_v7_widget_RecyclerView_ViewHolder_ == null)
				cb_getMovementFlags_Landroid_support_v7_widget_RecyclerView_Landroid_support_v7_widget_RecyclerView_ViewHolder_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_I (n_GetMovementFlags_Landroid_support_v7_widget_RecyclerView_Landroid_support_v7_widget_RecyclerView_ViewHolder_));
			return cb_getMovementFlags_Landroid_support_v7_widget_RecyclerView_Landroid_support_v7_widget_RecyclerView_ViewHolder_;
		}

		static int n_GetMovementFlags_Landroid_support_v7_widget_RecyclerView_Landroid_support_v7_widget_RecyclerView_ViewHolder_ (IntPtr jnienv, IntPtr native__this, IntPtr native_recyclerView, IntPtr native_viewHolder)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Callback.ItemDragAndSwipeCallback> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var recyclerView = global::Java.Lang.Object.GetObject<global::Android.Support.V7.Widget.RecyclerView> (native_recyclerView, JniHandleOwnership.DoNotTransfer);
			var viewHolder = global::Java.Lang.Object.GetObject<global::Android.Support.V7.Widget.RecyclerView.ViewHolder> (native_viewHolder, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.GetMovementFlags (recyclerView, viewHolder);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.callback']/class[@name='ItemDragAndSwipeCallback']/method[@name='getMovementFlags' and count(parameter)=2 and parameter[1][@type='android.support.v7.widget.RecyclerView'] and parameter[2][@type='android.support.v7.widget.RecyclerView.ViewHolder']]"
		[Register ("getMovementFlags", "(Landroid/support/v7/widget/RecyclerView;Landroid/support/v7/widget/RecyclerView$ViewHolder;)I", "GetGetMovementFlags_Landroid_support_v7_widget_RecyclerView_Landroid_support_v7_widget_RecyclerView_ViewHolder_Handler")]
		public override unsafe int GetMovementFlags (global::Android.Support.V7.Widget.RecyclerView recyclerView, global::Android.Support.V7.Widget.RecyclerView.ViewHolder viewHolder)
		{
			const string __id = "getMovementFlags.(Landroid/support/v7/widget/RecyclerView;Landroid/support/v7/widget/RecyclerView$ViewHolder;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((recyclerView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) recyclerView).Handle);
				__args [1] = new JniArgumentValue ((viewHolder == null) ? IntPtr.Zero : ((global::Java.Lang.Object) viewHolder).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (recyclerView);
				global::System.GC.KeepAlive (viewHolder);
			}
		}

		static Delegate cb_onMove_Landroid_support_v7_widget_RecyclerView_Landroid_support_v7_widget_RecyclerView_ViewHolder_Landroid_support_v7_widget_RecyclerView_ViewHolder_;
#pragma warning disable 0169
		static Delegate GetOnMove_Landroid_support_v7_widget_RecyclerView_Landroid_support_v7_widget_RecyclerView_ViewHolder_Landroid_support_v7_widget_RecyclerView_ViewHolder_Handler ()
		{
			if (cb_onMove_Landroid_support_v7_widget_RecyclerView_Landroid_support_v7_widget_RecyclerView_ViewHolder_Landroid_support_v7_widget_RecyclerView_ViewHolder_ == null)
				cb_onMove_Landroid_support_v7_widget_RecyclerView_Landroid_support_v7_widget_RecyclerView_ViewHolder_Landroid_support_v7_widget_RecyclerView_ViewHolder_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLL_Z (n_OnMove_Landroid_support_v7_widget_RecyclerView_Landroid_support_v7_widget_RecyclerView_ViewHolder_Landroid_support_v7_widget_RecyclerView_ViewHolder_));
			return cb_onMove_Landroid_support_v7_widget_RecyclerView_Landroid_support_v7_widget_RecyclerView_ViewHolder_Landroid_support_v7_widget_RecyclerView_ViewHolder_;
		}

		static bool n_OnMove_Landroid_support_v7_widget_RecyclerView_Landroid_support_v7_widget_RecyclerView_ViewHolder_Landroid_support_v7_widget_RecyclerView_ViewHolder_ (IntPtr jnienv, IntPtr native__this, IntPtr native_recyclerView, IntPtr native_source, IntPtr native_target)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Callback.ItemDragAndSwipeCallback> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var recyclerView = global::Java.Lang.Object.GetObject<global::Android.Support.V7.Widget.RecyclerView> (native_recyclerView, JniHandleOwnership.DoNotTransfer);
			var source = global::Java.Lang.Object.GetObject<global::Android.Support.V7.Widget.RecyclerView.ViewHolder> (native_source, JniHandleOwnership.DoNotTransfer);
			var target = global::Java.Lang.Object.GetObject<global::Android.Support.V7.Widget.RecyclerView.ViewHolder> (native_target, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.OnMove (recyclerView, source, target);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.callback']/class[@name='ItemDragAndSwipeCallback']/method[@name='onMove' and count(parameter)=3 and parameter[1][@type='android.support.v7.widget.RecyclerView'] and parameter[2][@type='android.support.v7.widget.RecyclerView.ViewHolder'] and parameter[3][@type='android.support.v7.widget.RecyclerView.ViewHolder']]"
		[Register ("onMove", "(Landroid/support/v7/widget/RecyclerView;Landroid/support/v7/widget/RecyclerView$ViewHolder;Landroid/support/v7/widget/RecyclerView$ViewHolder;)Z", "GetOnMove_Landroid_support_v7_widget_RecyclerView_Landroid_support_v7_widget_RecyclerView_ViewHolder_Landroid_support_v7_widget_RecyclerView_ViewHolder_Handler")]
		public override unsafe bool OnMove (global::Android.Support.V7.Widget.RecyclerView recyclerView, global::Android.Support.V7.Widget.RecyclerView.ViewHolder source, global::Android.Support.V7.Widget.RecyclerView.ViewHolder target)
		{
			const string __id = "onMove.(Landroid/support/v7/widget/RecyclerView;Landroid/support/v7/widget/RecyclerView$ViewHolder;Landroid/support/v7/widget/RecyclerView$ViewHolder;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((recyclerView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) recyclerView).Handle);
				__args [1] = new JniArgumentValue ((source == null) ? IntPtr.Zero : ((global::Java.Lang.Object) source).Handle);
				__args [2] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (recyclerView);
				global::System.GC.KeepAlive (source);
				global::System.GC.KeepAlive (target);
			}
		}

		static Delegate cb_onSwiped_Landroid_support_v7_widget_RecyclerView_ViewHolder_I;
#pragma warning disable 0169
		static Delegate GetOnSwiped_Landroid_support_v7_widget_RecyclerView_ViewHolder_IHandler ()
		{
			if (cb_onSwiped_Landroid_support_v7_widget_RecyclerView_ViewHolder_I == null)
				cb_onSwiped_Landroid_support_v7_widget_RecyclerView_ViewHolder_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_V (n_OnSwiped_Landroid_support_v7_widget_RecyclerView_ViewHolder_I));
			return cb_onSwiped_Landroid_support_v7_widget_RecyclerView_ViewHolder_I;
		}

		static void n_OnSwiped_Landroid_support_v7_widget_RecyclerView_ViewHolder_I (IntPtr jnienv, IntPtr native__this, IntPtr native_viewHolder, int direction)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Callback.ItemDragAndSwipeCallback> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var viewHolder = global::Java.Lang.Object.GetObject<global::Android.Support.V7.Widget.RecyclerView.ViewHolder> (native_viewHolder, JniHandleOwnership.DoNotTransfer);
			__this.OnSwiped (viewHolder, direction);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.callback']/class[@name='ItemDragAndSwipeCallback']/method[@name='onSwiped' and count(parameter)=2 and parameter[1][@type='android.support.v7.widget.RecyclerView.ViewHolder'] and parameter[2][@type='int']]"
		[Register ("onSwiped", "(Landroid/support/v7/widget/RecyclerView$ViewHolder;I)V", "GetOnSwiped_Landroid_support_v7_widget_RecyclerView_ViewHolder_IHandler")]
		public override unsafe void OnSwiped (global::Android.Support.V7.Widget.RecyclerView.ViewHolder viewHolder, int direction)
		{
			const string __id = "onSwiped.(Landroid/support/v7/widget/RecyclerView$ViewHolder;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((viewHolder == null) ? IntPtr.Zero : ((global::Java.Lang.Object) viewHolder).Handle);
				__args [1] = new JniArgumentValue (direction);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (viewHolder);
			}
		}

		static Delegate cb_setDragMoveFlags_I;
#pragma warning disable 0169
		static Delegate GetSetDragMoveFlags_IHandler ()
		{
			if (cb_setDragMoveFlags_I == null)
				cb_setDragMoveFlags_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetDragMoveFlags_I));
			return cb_setDragMoveFlags_I;
		}

		static void n_SetDragMoveFlags_I (IntPtr jnienv, IntPtr native__this, int dragMoveFlags)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Callback.ItemDragAndSwipeCallback> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetDragMoveFlags (dragMoveFlags);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.callback']/class[@name='ItemDragAndSwipeCallback']/method[@name='setDragMoveFlags' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setDragMoveFlags", "(I)V", "GetSetDragMoveFlags_IHandler")]
		public virtual unsafe void SetDragMoveFlags (int dragMoveFlags)
		{
			const string __id = "setDragMoveFlags.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (dragMoveFlags);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setMoveThreshold_F;
#pragma warning disable 0169
		static Delegate GetSetMoveThreshold_FHandler ()
		{
			if (cb_setMoveThreshold_F == null)
				cb_setMoveThreshold_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPF_V (n_SetMoveThreshold_F));
			return cb_setMoveThreshold_F;
		}

		static void n_SetMoveThreshold_F (IntPtr jnienv, IntPtr native__this, float moveThreshold)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Callback.ItemDragAndSwipeCallback> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetMoveThreshold (moveThreshold);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.callback']/class[@name='ItemDragAndSwipeCallback']/method[@name='setMoveThreshold' and count(parameter)=1 and parameter[1][@type='float']]"
		[Register ("setMoveThreshold", "(F)V", "GetSetMoveThreshold_FHandler")]
		public virtual unsafe void SetMoveThreshold (float moveThreshold)
		{
			const string __id = "setMoveThreshold.(F)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (moveThreshold);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setSwipeMoveFlags_I;
#pragma warning disable 0169
		static Delegate GetSetSwipeMoveFlags_IHandler ()
		{
			if (cb_setSwipeMoveFlags_I == null)
				cb_setSwipeMoveFlags_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetSwipeMoveFlags_I));
			return cb_setSwipeMoveFlags_I;
		}

		static void n_SetSwipeMoveFlags_I (IntPtr jnienv, IntPtr native__this, int swipeMoveFlags)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Callback.ItemDragAndSwipeCallback> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetSwipeMoveFlags (swipeMoveFlags);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.callback']/class[@name='ItemDragAndSwipeCallback']/method[@name='setSwipeMoveFlags' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setSwipeMoveFlags", "(I)V", "GetSetSwipeMoveFlags_IHandler")]
		public virtual unsafe void SetSwipeMoveFlags (int swipeMoveFlags)
		{
			const string __id = "setSwipeMoveFlags.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (swipeMoveFlags);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setSwipeThreshold_F;
#pragma warning disable 0169
		static Delegate GetSetSwipeThreshold_FHandler ()
		{
			if (cb_setSwipeThreshold_F == null)
				cb_setSwipeThreshold_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPF_V (n_SetSwipeThreshold_F));
			return cb_setSwipeThreshold_F;
		}

		static void n_SetSwipeThreshold_F (IntPtr jnienv, IntPtr native__this, float swipeThreshold)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Callback.ItemDragAndSwipeCallback> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetSwipeThreshold (swipeThreshold);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base.callback']/class[@name='ItemDragAndSwipeCallback']/method[@name='setSwipeThreshold' and count(parameter)=1 and parameter[1][@type='float']]"
		[Register ("setSwipeThreshold", "(F)V", "GetSetSwipeThreshold_FHandler")]
		public virtual unsafe void SetSwipeThreshold (float swipeThreshold)
		{
			const string __id = "setSwipeThreshold.(F)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (swipeThreshold);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

	}
}
