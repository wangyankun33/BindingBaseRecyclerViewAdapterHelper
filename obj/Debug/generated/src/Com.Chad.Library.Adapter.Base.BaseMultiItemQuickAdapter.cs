//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Chad.Library.Adapter.Base {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseMultiItemQuickAdapter']"
	[global::Android.Runtime.Register ("com/chad/library/adapter/base/BaseMultiItemQuickAdapter", DoNotGenerateAcw=true)]
	[global::Java.Interop.JavaTypeParameters (new string [] {"T extends com.chad.library.adapter.base.entity.MultiItemEntity", "K extends com.chad.library.adapter.base.BaseViewHolder"})]
	public abstract partial class BaseMultiItemQuickAdapter : global::Com.Chad.Library.Adapter.Base.BaseQuickAdapter {
		// Metadata.xml XPath field reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseMultiItemQuickAdapter']/field[@name='TYPE_NOT_FOUND']"
		[Register ("TYPE_NOT_FOUND")]
		public const int TypeNotFound = (int) -404;

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/BaseMultiItemQuickAdapter", typeof (BaseMultiItemQuickAdapter));

		internal static new IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected BaseMultiItemQuickAdapter (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseMultiItemQuickAdapter']/constructor[@name='BaseMultiItemQuickAdapter' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;T&gt;']]"
		[Register (".ctor", "(Ljava/util/List;)V", "")]
		public unsafe BaseMultiItemQuickAdapter (global::System.Collections.IList data) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/util/List;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_data = global::Android.Runtime.JavaList.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
			}
		}

		static Delegate cb_addItemType_II;
#pragma warning disable 0169
		static Delegate GetAddItemType_IIHandler ()
		{
			if (cb_addItemType_II == null)
				cb_addItemType_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_V (n_AddItemType_II));
			return cb_addItemType_II;
		}

		static void n_AddItemType_II (IntPtr jnienv, IntPtr native__this, int type, int layoutResId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseMultiItemQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.AddItemType (type, layoutResId);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseMultiItemQuickAdapter']/method[@name='addItemType' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("addItemType", "(II)V", "GetAddItemType_IIHandler")]
		protected virtual unsafe void AddItemType (int type, int layoutResId)
		{
			const string __id = "addItemType.(II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (type);
				__args [1] = new JniArgumentValue (layoutResId);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_removeAllChild_Lcom_chad_library_adapter_base_entity_IExpandable_I;
#pragma warning disable 0169
		static Delegate GetRemoveAllChild_Lcom_chad_library_adapter_base_entity_IExpandable_IHandler ()
		{
			if (cb_removeAllChild_Lcom_chad_library_adapter_base_entity_IExpandable_I == null)
				cb_removeAllChild_Lcom_chad_library_adapter_base_entity_IExpandable_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_V (n_RemoveAllChild_Lcom_chad_library_adapter_base_entity_IExpandable_I));
			return cb_removeAllChild_Lcom_chad_library_adapter_base_entity_IExpandable_I;
		}

		static void n_RemoveAllChild_Lcom_chad_library_adapter_base_entity_IExpandable_I (IntPtr jnienv, IntPtr native__this, IntPtr native_parent, int parentPosition)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseMultiItemQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var parent = (global::Com.Chad.Library.Adapter.Base.Entity.IExpandable)global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.Entity.IExpandable> (native_parent, JniHandleOwnership.DoNotTransfer);
			__this.RemoveAllChild (parent, parentPosition);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseMultiItemQuickAdapter']/method[@name='removeAllChild' and count(parameter)=2 and parameter[1][@type='com.chad.library.adapter.base.entity.IExpandable'] and parameter[2][@type='int']]"
		[Register ("removeAllChild", "(Lcom/chad/library/adapter/base/entity/IExpandable;I)V", "GetRemoveAllChild_Lcom_chad_library_adapter_base_entity_IExpandable_IHandler")]
		protected virtual unsafe void RemoveAllChild (global::Com.Chad.Library.Adapter.Base.Entity.IExpandable parent, int parentPosition)
		{
			const string __id = "removeAllChild.(Lcom/chad/library/adapter/base/entity/IExpandable;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((parent == null) ? IntPtr.Zero : ((global::Java.Lang.Object) parent).Handle);
				__args [1] = new JniArgumentValue (parentPosition);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (parent);
			}
		}

		static Delegate cb_removeDataFromParent_Lcom_chad_library_adapter_base_entity_MultiItemEntity_;
#pragma warning disable 0169
		static Delegate GetRemoveDataFromParent_Lcom_chad_library_adapter_base_entity_MultiItemEntity_Handler ()
		{
			if (cb_removeDataFromParent_Lcom_chad_library_adapter_base_entity_MultiItemEntity_ == null)
				cb_removeDataFromParent_Lcom_chad_library_adapter_base_entity_MultiItemEntity_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_RemoveDataFromParent_Lcom_chad_library_adapter_base_entity_MultiItemEntity_));
			return cb_removeDataFromParent_Lcom_chad_library_adapter_base_entity_MultiItemEntity_;
		}

		static void n_RemoveDataFromParent_Lcom_chad_library_adapter_base_entity_MultiItemEntity_ (IntPtr jnienv, IntPtr native__this, IntPtr native_child)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseMultiItemQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var child = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_child, JniHandleOwnership.DoNotTransfer);
			__this.RemoveDataFromParent (child);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseMultiItemQuickAdapter']/method[@name='removeDataFromParent' and count(parameter)=1 and parameter[1][@type='T']]"
		[Register ("removeDataFromParent", "(Lcom/chad/library/adapter/base/entity/MultiItemEntity;)V", "GetRemoveDataFromParent_Lcom_chad_library_adapter_base_entity_MultiItemEntity_Handler")]
		protected virtual unsafe void RemoveDataFromParent (global::Java.Lang.Object child)
		{
			const string __id = "removeDataFromParent.(Lcom/chad/library/adapter/base/entity/MultiItemEntity;)V";
			IntPtr native_child = JNIEnv.ToLocalJniHandle (child);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_child);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_child);
				global::System.GC.KeepAlive (child);
			}
		}

		static Delegate cb_setDefaultViewTypeLayout_I;
#pragma warning disable 0169
		static Delegate GetSetDefaultViewTypeLayout_IHandler ()
		{
			if (cb_setDefaultViewTypeLayout_I == null)
				cb_setDefaultViewTypeLayout_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetDefaultViewTypeLayout_I));
			return cb_setDefaultViewTypeLayout_I;
		}

		static void n_SetDefaultViewTypeLayout_I (IntPtr jnienv, IntPtr native__this, int layoutResId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Chad.Library.Adapter.Base.BaseMultiItemQuickAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetDefaultViewTypeLayout (layoutResId);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseMultiItemQuickAdapter']/method[@name='setDefaultViewTypeLayout' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setDefaultViewTypeLayout", "(I)V", "GetSetDefaultViewTypeLayout_IHandler")]
		protected virtual unsafe void SetDefaultViewTypeLayout (int layoutResId)
		{
			const string __id = "setDefaultViewTypeLayout.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (layoutResId);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

	}

	[global::Android.Runtime.Register ("com/chad/library/adapter/base/BaseMultiItemQuickAdapter", DoNotGenerateAcw=true)]
	internal partial class BaseMultiItemQuickAdapterInvoker : BaseMultiItemQuickAdapter {
		public BaseMultiItemQuickAdapterInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
		{
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/chad/library/adapter/base/BaseMultiItemQuickAdapter", typeof (BaseMultiItemQuickAdapterInvoker));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.chad.library.adapter.base']/class[@name='BaseQuickAdapter']/method[@name='convert' and count(parameter)=2 and parameter[1][@type='K'] and parameter[2][@type='T']]"
		[Register ("convert", "(Lcom/chad/library/adapter/base/BaseViewHolder;Ljava/lang/Object;)V", "GetConvert_Lcom_chad_library_adapter_base_BaseViewHolder_Ljava_lang_Object_Handler")]
		protected override unsafe void Convert (global::Java.Lang.Object p0, global::Java.Lang.Object p1)
		{
			const string __id = "convert.(Lcom/chad/library/adapter/base/BaseViewHolder;Ljava/lang/Object;)V";
			IntPtr native_p0 = JNIEnv.ToLocalJniHandle (p0);
			IntPtr native_p1 = JNIEnv.ToLocalJniHandle (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		[Register ("onBindViewHolder", "(Landroid/support/v7/widget/RecyclerView$ViewHolder;I)V", "GetOnBindViewHolder_Landroid_support_v7_widget_RecyclerView_ViewHolder_IHandler")]
		public override unsafe void OnBindViewHolder (global::Android.Support.V7.Widget.RecyclerView.ViewHolder holder, int position)
		{
			const string __id = "onBindViewHolder.(Landroid/support/v7/widget/RecyclerView$ViewHolder;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((holder == null) ? IntPtr.Zero : ((global::Java.Lang.Object) holder).Handle);
				__args [1] = new JniArgumentValue (position);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (holder);
			}
		}

	}
}
